<ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:core="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
     <Brush x:Key="AquamarineDarkItemStroke">#60b692</Brush>
     <Brush x:Key="BlackItemStroke">#000000</Brush>
     <Brush x:Key="BlueLagoonItemStroke">#006779</Brush>
     <Brush x:Key="BlueLightBorderItemStroke">#41b1e1</Brush>
     <Brush x:Key="BlueModerateBorderItemStroke">#4870c1</Brush>
     <Brush x:Key="BlueStrongItemBrush">#0578c6</Brush>
     <Brush x:Key="BlueTelegramItemBrush">#029AE5</Brush>
     <Brush x:Key="GradientItemStroke">#B9CDE4</Brush>
     <Brush x:Key="GreenBorderItemStroke">#006838</Brush>
     <Brush x:Key="GreenDarkItemBrush">#20541a</Brush>
     <Brush x:Key="GreenLightItemBrush">#3ac40c</Brush>
     <Brush x:Key="ItemStroke">#ACADCD</Brush>
     <Brush x:Key="OrangeVividItemBrush">#ff9b24</Brush>
     <Brush x:Key="RedItemBrush">#ff0000</Brush>
     <Brush x:Key="RedOrangeItemBrush">#df4017</Brush>
     <Brush x:Key="RedVividtemBrush">#e00e2d</Brush>
     <Brush x:Key="WhiteItemBrush">#FFFFFF</Brush>
     <Brush x:Key="YellowDarkItemBrush">#f6c105</Brush>
     <Brush x:Key="OrangeDarkItemBrush">#997C3E</Brush>
     <Brush x:Key="YellowLightItemBrush">#FFFFA8</Brush>
     <Brush x:Key="GrayItemBrush">#4E4E4E</Brush>
     <LinearGradientBrush x:Key="GradientItemBrush" StartPoint="0,0" EndPoint="0,1">
          <LinearGradientBrush.GradientStops>
               <GradientStop Color="#FEFEFE" Offset="0" />
               <GradientStop Color="#B9CDE4" Offset="1" />
          </LinearGradientBrush.GradientStops>
     </LinearGradientBrush>
     <Style x:Key="AquamarineDarkItemStrokeWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource AquamarineDarkItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlackBorderYellowLightBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource YellowLightItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlackItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueLightBorderYellowLightBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource YellowLightItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlueLightBorderItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueLightItemStrokeBlueLightItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource BlueLightBorderItemStroke}" />
          <Setter Property="Stroke" Value="{StaticResource BlueLightBorderItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueLagoonItemStrokeBlueLagoonItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource BlueLagoonItemStroke}" />
          <Setter Property="Stroke" Value="{StaticResource BlueLagoonItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueLagoonItemStrokeWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlueLagoonItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueLightBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlueLightBorderItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="FillBlueLightBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource BlueLightBorderItemStroke}" />
          <Setter Property="Stroke" Value="{StaticResource BlueLightBorderItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueModerateBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlueModerateBorderItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueStrongItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlueStrongItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="BlueTelegramItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource BlueTelegramItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="ExternalToolboxExampleItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource ItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource ItemStroke}" />
          <Setter Property="StrokeThickness" Value="1" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="GradientItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource GradientItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource GradientItemStroke}" />
          <Setter Property="StrokeThickness" Value="1" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="GreenBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource GreenBorderItemStroke}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="GreenDarkItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource GreenDarkItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="GreenLightItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource GreenLightItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="OrangeVividItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource OrangeVividItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="RedItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource RedItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="RedOrangeItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource RedOrangeItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="RedVividItemBrushWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource RedVividtemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="YellowDarkBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource YellowDarkItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="OrangeDarkBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource OrangeDarkItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="GrayBorderWhiteBackgroundItemStyle" TargetType="Path">
          <Setter Property="Fill" Value="{StaticResource WhiteItemBrush}" />
          <Setter Property="Stroke" Value="{StaticResource GrayItemBrush}" />
          <Setter Property="StrokeThickness" Value="2" />
          <Setter Property="StrokeLineJoin" Value="Round" />
          <Setter Property="Stretch" Value="Fill" />
          <Setter Property="IsHitTestVisible" Value="False" />
          <Setter Property="SnapsToDevicePixels" Value="True" />
     </Style>
     <Style x:Key="X" TargetType="Path" BasedOn="{StaticResource ExternalToolboxExampleItemStyle}">
          <Setter Property="Data" Value="M 10,0 L 20,10 L 30,0 L 40,10 L 30,20 L 40,30 L 30,40 L 20,30 L 10,40 L 0,30 L 10,20 L 0,10 Z" />
     </Style>
     <Style x:Key="X_DragThumb" TargetType="Path" BasedOn="{StaticResource X}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="Y" TargetType="Path" BasedOn="{StaticResource ExternalToolboxExampleItemStyle}">
          <Setter Property="Data" Value="M 10,40 H 30 V 20 L 40,10 L 30,0 L 20,10 L 10,0 L 0,10 L 10,20 Z" />
     </Style>
     <Style x:Key="Y_DragThumb" TargetType="Path" BasedOn="{StaticResource Y}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="O" TargetType="Path" BasedOn="{StaticResource BlueLightBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 75,50 C 75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50 Z" />
     </Style>
     <Style x:Key="O_DragThumb" TargetType="Path" BasedOn="{StaticResource O}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="FillO" TargetType="Path" BasedOn="{StaticResource FillBlueLightBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 75,50 C 75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50 Z" />
     </Style>
     <Style x:Key="FillO_DragThumb" TargetType="Path" BasedOn="{StaticResource FillO}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="Square" TargetType="Path" BasedOn="{StaticResource ExternalToolboxExampleItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 40 V 40 H 0 Z" />
     </Style>
     <Style x:Key="Square_DragThumb" TargetType="Path" BasedOn="{StaticResource Square}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="AquamarineDarkRectangle" TargetType="Path" BasedOn="{StaticResource AquamarineDarkItemStrokeWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="AquamarineDarkRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource AquamarineDarkRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="AquamarineDarkRhombus" TargetType="Path" BasedOn="{StaticResource AquamarineDarkItemStrokeWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="AquamarineDarkRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource AquamarineDarkRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlackCommentRectangle" TargetType="Path" BasedOn="{StaticResource BlackBorderYellowLightBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlackCommentRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlackCommentRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLightAllRectangle" TargetType="Path" BasedOn="{StaticResource BlueLightItemStrokeBlueLightItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueLightAllRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLightAllRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLightAllRhombus" TargetType="Path" BasedOn="{StaticResource BlueLightItemStrokeBlueLightItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="BlueLightAllRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLightAllRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLightCommentRectangle" TargetType="Path" BasedOn="{StaticResource BlueLightBorderYellowLightBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueLightCommentRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLightCommentRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLagoonAllRectangle" TargetType="Path" BasedOn="{StaticResource BlueLagoonItemStrokeBlueLagoonItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueLagoonAllRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLagoonAllRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLagoonAllRhombus" TargetType="Path" BasedOn="{StaticResource BlueLagoonItemStrokeBlueLagoonItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="BlueLagoonAllRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLagoonAllRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLagoonRectangle" TargetType="Path" BasedOn="{StaticResource BlueLagoonItemStrokeWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueLagoonRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLagoonRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLagoonRhombus" TargetType="Path" BasedOn="{StaticResource BlueLagoonItemStrokeWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="BlueLagoonRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLagoonRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLightRectangle" TargetType="Path" BasedOn="{StaticResource BlueLightBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueLightRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLightRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueLightRhombus" TargetType="Path" BasedOn="{StaticResource BlueLightBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="BlueLightRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueLightRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueModerateRectangle" TargetType="Path" BasedOn="{StaticResource BlueModerateBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueModerateRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueModerateRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueStrongRectangle" TargetType="Path" BasedOn="{StaticResource BlueStrongItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueStrongRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueStrongRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueStrongRhombus" TargetType="Path" BasedOn="{StaticResource BlueStrongItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="BlueStrongRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueStrongRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="BlueTelegramRectangle" TargetType="Path" BasedOn="{StaticResource BlueTelegramItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="BlueTelegramRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource BlueTelegramRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="GreenDarkRectangle" TargetType="Path" BasedOn="{StaticResource GreenDarkItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="GreenDarkRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource GreenDarkRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="GreenLightRectangle" TargetType="Path" BasedOn="{StaticResource GreenLightItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="GreenLightRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource GreenLightRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="GreenRectangle" TargetType="Path" BasedOn="{StaticResource GreenBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="GreenRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource GreenRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="GreenRhombus" TargetType="Path" BasedOn="{StaticResource GreenBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="GreenRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource GreenRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="InvisibleItem" TargetType="Path" BasedOn="{StaticResource ExternalToolboxExampleItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="InvisibleItem_DragThumb" TargetType="Path" BasedOn="{StaticResource InvisibleItem}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="OrangeVividRectangle" TargetType="Path" BasedOn="{StaticResource OrangeVividItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="OrangeVividRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource OrangeVividRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="OrangeVividRhombus" TargetType="Path" BasedOn="{StaticResource OrangeVividItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="OrangeVividRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource OrangeVividRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="RedOrangeRectangle" TargetType="Path" BasedOn="{StaticResource RedOrangeItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="RedOrangeRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource RedOrangeRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="RedOrangeRhombus" TargetType="Path" BasedOn="{StaticResource RedOrangeItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="RedOrangeRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource RedOrangeRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="RedRectangle" TargetType="Path" BasedOn="{StaticResource RedItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="RedRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource RedRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="RedVividRectangle" TargetType="Path" BasedOn="{StaticResource RedVividItemBrushWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="RedVIvidRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource RedVividRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="Rhombus" TargetType="Path" BasedOn="{StaticResource BlueLightBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="Rhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource Rhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="YellowDarkRectangle" TargetType="Path" BasedOn="{StaticResource YellowDarkBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="YellowDarkRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource YellowDarkRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="YellowDarkRhombus" TargetType="Path" BasedOn="{StaticResource YellowDarkBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="YellowDarkRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource YellowDarkRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="OrangeDarkRectangle" TargetType="Path" BasedOn="{StaticResource OrangeDarkBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="OrangeDarkRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource OrangeDarkRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="OrangeDarkRhombus" TargetType="Path" BasedOn="{StaticResource OrangeDarkBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,10 L 20,0 L 40,10 L 20,20 Z" />
     </Style>
     <Style x:Key="OrangeDarkRhombus_DragThumb" TargetType="Path" BasedOn="{StaticResource OrangeDarkRhombus}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <Style x:Key="GrayRectangle" TargetType="Path" BasedOn="{StaticResource GrayBorderWhiteBackgroundItemStyle}">
          <Setter Property="Data" Value="M 0,0 H 80 V 20 H 0 Z" />
     </Style>
     <Style x:Key="GrayRectangle_DragThumb" TargetType="Path" BasedOn="{StaticResource GrayRectangle}">
          <Setter Property="IsHitTestVisible" Value="true" />
          <Setter Property="Fill" Value="Transparent" />
          <Setter Property="Stroke" Value="Transparent" />
     </Style>
     <core:ToolboxSettings x:Key="MainToolboxSettings" Name="Main Blocks" ToolboxGridType="Grid">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Start" InternalName="Start" FriendlyName="Start" PathStyle="{StaticResource O}" PathStyle_DragThumb="{StaticResource O_DragThumb}" Width="70" Height="70" PathToImage="ExternalToolboxes\Image\ico_Process Start.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Process Start.png" ImageType="OnlyImage" NoDelete="False" Invisible="False" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Start{{{block_id}}}
{                  
    try
    {
    $currentblockid = "{{{block_native_id}}}";   
    
        $Value        = {{{Value}}};
        $SendOrkest   = ${{{SendOrkest}}};
        $IsScreenshot = ${{{IsScreenshot}}};
        
        $ValueStr = VarToString($Value); 
             
        $val = _shield $ValueStr;
        if($SendOrkest -or $IsScreenshot)
        {                      
            if($val.Length -eq 0)
            {
                $val = "Screenshot "+[DateTime]::Now.ToString();
            }
            Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendLogOrkest</InternalName><UITextValue>$val</UITextValue><UITextType>Info</UITextType><IsScreenshot>{{{IsScreenshot}}}</IsScreenshot></block>"); 
        }
        if($val.Length -gt 0)
        {
            $xmlvar = "";
            try
            {
                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);
            }
            catch{} 
            Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue>$xmlvar</info>");
        }
    }
    catch 
    { 
    }
    
    try
    {

            try
            {         
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { $errormessage = "Variable1: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { $errormessage = "Variable2: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { $errormessage = "Variable3: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { $errormessage = "Variable4: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { $errormessage = "Variable5: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        
    }
    catch {}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    
    $script:__NextBlockID = "{{{connector-Next}}}";
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Adds this string or variable" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="SendOrkest" Tooltip="Send log to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsScreenshot" Tooltip="Create screenshot to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то, если это главная диаграмма, будет использоваться значение &quot;Handle&quot;, иначе будет использоваться значение блока &quot;Старт&quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то, если это главная диаграмма, будет использоваться значение &quot;Bottom&quot;, иначе будет использоваться значение блока &quot;Старт&quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то, если это главная диаграмма, будет использоваться значение &quot;Debug&quot;, иначе будет использоваться значение блока &quot;Старт&quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="End" InternalName="ReturnOrStop" FriendlyName="End" PathStyle="{StaticResource O}" PathStyle_DragThumb="{StaticResource O_DragThumb}" Width="70" Height="70" PathToImage="ExternalToolboxes\Image\ico_Process Stop.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Process Stop.png" ImageType="OnlyImage" Proportional="True" Version="113">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReturnOrStop{{{block_id}}}
{       
    try
    {
    $currentblockid = "{{{block_native_id}}}";
       
        $Value        = {{{Value}}};
        $SendOrkest   = ${{{SendOrkest}}};
        $IsScreenshot = ${{{IsScreenshot}}};
        
        $ValueStr = VarToString($Value); 
             
        $val = _shield $ValueStr;
        if($SendOrkest -or $IsScreenshot)
        {                      
            if($val.Length -eq 0)
            {
                $val = "Screenshot "+[DateTime]::Now.ToString();
            }
            Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendLogOrkest</InternalName><UITextValue>$val</UITextValue><UITextType>Info</UITextType><IsScreenshot>{{{IsScreenshot}}}</IsScreenshot></block>"); 
        }
        if($val.Length -gt 0)
        {
            $xmlvar = "";
            try
            {
                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);
            }
            catch{} 
            Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue>$xmlvar</info>");
        }
    }
    catch 
    { 
    }
    
    try
    {

            try
            {         
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { $errormessage = "Variable1: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { $errormessage = "Variable2: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { $errormessage = "Variable3: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { $errormessage = "Variable4: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { $errormessage = "Variable5: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
 
    }
    catch {}
    
    $__Error.Quit(); 
    try
    {    
        $script:__NextBlockID = "";
        $ProcessContainer = ""; 
        if ($script:__callstack.Count -gt 0)
        {
            $stackitem = $script:__callstack.Pop();
            $script:__NextBlockID = $stackitem.ConnectorNext;
            $ProcessContainer = $stackitem.ProcessContainer;
            while($script:__NextBlockID.Length -eq 0)
            {       
                if ($script:__callstack.Count -eq 0) { break; } 
                $containerName = $stackitem.ProcessContainer;
                if($containerName.StartsWith("TryCatchContainer") -or $containerName.StartsWith("CollapseContainer"))
                {
                    $__Error.Quit();
                    $stackitem = $script:__callstack.Pop();
                    $script:__NextBlockID = $stackitem.ConnectorNext;  
                    $ProcessContainer = $stackitem.ProcessContainer;
                }
                else
                {
                    break;
                }
            } 
                       
            if($script:__RobotFileVersion -eq "125")
            {        
                if($ProcessContainer.StartsWith("TryCatchContainer") -or $ProcessContainer.StartsWith("CollapseContainer"))
                {
                
                }
                else
                {
                    try
                    { 
                        $callOut = $ProcessContainer + "Out"; &$callOut;
                    }
                    catch
                    {       
                        $guidstr        = $ProcessContainer.Substring($ProcessContainer.Length - 32);
                        $currentblockid = [Guid]::Parse($guidstr).ToString();  
                        $errormes       = "Error in output parameters: " + $_.Exception.Message;  
                        try {
                            $othermsg = $_.InvocationInfo.Line.Trim();
                            if(-not $othermsg.StartsWith("throw")) {
                                $errormes += " : " + $othermsg; 
                            }
                        }
                        catch { }
                        Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlock</InternalName><InternalValue>$errormes</InternalValue></info>");
                        $script:__ScriptAborted = $true;
                        $script:__NextBlockID = "";   
                        $script:__LastBlockID = $currentblockid;
                        return;
                    }
                }                        
            }
        } 
    }
    catch{} 
    $script:__LastBlockID = "{{{block_native_id}}}";
}               
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Adds this string or variable" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="SendOrkest" Tooltip="Send log to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsScreenshot" Tooltip="Create screenshot to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Process" InternalName="ProcessContainer" FriendlyName="Process" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="150" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_Subprocess.png" ImageType="TopImage " Proportional="True" Version="124">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ProcessContainer{{{block_id}}}
{         
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
             
    try
    {
  
            try
            {
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
    }
    catch { } 
    
    try
    {         
        $DiagramNameStr = {{{DiagramName}}}; 
        
        $DiagramName = _shield $DiagramNameStr;
        
        $psresultstr = Read-Host("<Container><DiagramName>$DiagramName</DiagramName></Container>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        $startblock = $psResult.Result;
                
        if($script:__RobotFileVersion -eq "125")
        {
            try
            { 
                $callIn   = "ProcessContainer{{{block_id}}}" + "In"; 
                $typecall = &$callIn; 
                if($typecall -eq "VariableCall")
                {
                    $diagclassname = $psResult.Result2;
                    
                    $diagcode = "Remove-Variable -Name 'cls$diagclassname' -Scope Script -ErrorAction 'silentlycontinue'";
                    $diagcode += [Environment]::NewLine;
                    $diagcode += '$' + "script:cls$diagclassname = [$diagclassname]::new();";
                    $diagcode += [Environment]::NewLine;
                    $diagcode += '$' + "script:cls$diagclassname.methodInitialize();";
                    Invoke-Expression $diagcode
                }
            }
            catch
            {     
                $currentblockid = "{{{block_native_id}}}";
                $errormes       = "Error in input parameters: " + $_.Exception.Message;  
                try {
                    $othermsg = $_.InvocationInfo.Line.Trim();
                    if(-not $othermsg.StartsWith("throw")) {
                    $errormes += " : " + $othermsg; 
                    }
                }
                catch { }   
                $errormes = $errormes.Replace("`v", "");
                $errormes = _shield($errormes);
                Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlock</InternalName><InternalValue>$errormes</InternalValue></info>");
                $script:__ScriptAborted = $true;
                $script:__NextBlockID = "";   
                $script:__LastBlockID = $currentblockid;
                return;
            } 
        }
        
        $stackitem                  = [MainHelpers.StackItem]::new();
        $stackitem.ProcessContainer = "ProcessContainer{{{block_id}}}";  #+$startblock
        $stackitem.ConnectorNext    = "{{{connector-Next}}}"; 
        
        $interceptConnectorError = "";
        if ($script:__callstack.Count -gt 0)
        {
            $tempitem  = $script:__callstack.Peek();
            $connerror = [string]$tempitem.ConnectorError;
            if ($connerror.Length -gt 0) { $interceptConnectorError = $connerror; } 
        }
        
        $innerConnectorError = "{{{connector-Error}}}";
        
        if ($innerConnectorError.Length -gt 0) 
        { 
            $stackitem.ConnectorError = $innerConnectorError;
            if ($innerConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorError; }
        } 
        else 
        { 
            $stackitem.ConnectorError = $interceptConnectorError; 
        }
        
        $script:__callstack.push($stackitem); 
        
        if($null -eq $script:__ProcessContainerErrorMessage)
        {
            $script:__ProcessContainerErrorMessage = New-Object 'System.Collections.Generic.Dictionary[[string],[string]]'
        }

        $script:__ProcessContainerErrorMessage[$stackitem.ProcessContainer] = "{{{ErrorMessage}}}";                        
        
        $__Error.Jump($startblock);   
        return;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="DiagramName" Tooltip="The name of the file with diagram which contains external process" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="AnyDataType" />
                                   <core:Property Name="ProcessArguments" Tooltip="ProcessArguments" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="False" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Comment" InternalName="Comment" FriendlyName="Comment" PathStyle="{StaticResource BlueLightCommentRectangle}" PathStyle_DragThumb="{StaticResource BlueLightCommentRectangle_DragThumb}" Width="200" Height="75" PathToImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="21">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Comment{{{block_id}}}
{

    $script:__NextBlockID = "{{{connector-Next}}}";
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="ToDo" InternalName="ToDoBlock" FriendlyName="ToDo" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_ToDo.png" PathToToolboxImage="ExternalToolboxes\Image\ico_ToDo.png" ImageType="LeftImage" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ToDoBlock{{{block_id}}}
{   
    $script:__LastBlockID = "{{{block_native_id}}}";
    $script:__NextBlockID = "{{{connector-Next}}}";  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Log" InternalName="Log" FriendlyName="Log" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Log.png" ImageType="TopImage" Proportional="True" Version="163">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Log{{{block_id}}}
{   
    try
    {
        $Value          = {{{Value}}};
        $ShowStatus     = ${{{ShowStatus}}};
        $SendOrkest     = ${{{SendOrkest}}};
        $IsScreenshot   = ${{{IsScreenshot}}};
        $MakeScreenshot = ${{{MakeScreenshot}}};
    
        $ValueStr = VarToString($Value); 
         
        $val = _shield $ValueStr;
        if($ShowStatus)
        {       
            Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ShowStatus</InternalName><UITextValue>$val</UITextValue></block>"); 
        }
        
        if($SendOrkest -or $IsScreenshot)
        {                      
            if($val.Length -eq 0)
            {
                $val = "Screenshot "+[DateTime]::Now.ToString();
            }
            Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendLogOrkest</InternalName><UITextValue>$val</UITextValue><UITextType>{{{Level}}}</UITextType><IsScreenshot>{{{IsScreenshot}}}</IsScreenshot></block>"); 
        }
        
        $xmlvar = "";
        try
        {
            $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);
        }
        catch{} 
        Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue>$xmlvar</info>");
        if($MakeScreenshot)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>MakeScreenshot</InternalName><ProcessID></ProcessID><ScreenshotToLog>True</ScreenshotToLog></block>"); 
        }
    }
    catch 
    { 
    }  
    $script:__LastBlockID = "{{{block_native_id}}}";
    $script:__NextBlockID = "{{{connector-Next}}}";
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Adds this string or variable" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="MakeScreenshot" Tooltip="Make screenshot" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SendOrkest" Tooltip="Send log to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsScreenshot" Tooltip="Create screenshot to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Level" Tooltip="Status" CatalogName="Main properties" Type="Enum" Value="Info" EnumVariants="Info;Critical;Error;Warning;Debug" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ShowStatus" Tooltip="Show status bar" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="If Condition" InternalName="IfCondition" FriendlyName="If Condition" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function IfCondition{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
        if ({{{Condition}}}) 
        {
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {   
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Condition" Tooltip="Depending on the value of this expression the flow will go to Yes or No link" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Any Expression" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Switch Case" InternalName="SwitchCase" FriendlyName="Switch Case" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="100" Height="200" PathToImage="ExternalToolboxes\Image\icotb_If condition.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="TopImage " Proportional="False" Version="42">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SwitchCase{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
        #Condition1 
        $isCondition = $true;         
        try { if({{{Condition1Length}}} -eq 0) { $isCondition = $false; } }
        catch {}         
        if($isCondition)
        {
            if ({{{Statement}}} -eq {{{Condition1}}}) 
            {         
                try
                {         
                    {{{Expression1}}}
                }
                catch { if($__Error.CheckException($_.Exception.Message)) {return;} }  
                $strconn = "{{{connector-Yes1}}}"; 
                if($strconn.Length -gt 0) { $__Error.Jump($strconn); return; }
                $__Error.Quit();
                return;
            }
        } 
        
        #Condition2 
        $isCondition = $true;         
        try { if({{{Condition2Length}}} -eq 0) { $isCondition = $false; } }
        catch {}         
        if($isCondition)
        {
            if ({{{Statement}}} -eq {{{Condition2}}}) 
            {
                try
                {         
                    {{{Expression2}}}
                }
                catch { if($__Error.CheckException($_.Exception.Message)) {return;} }   
                $strconn = "{{{connector-Yes2}}}"; 
                if($strconn.Length -gt 0) { $__Error.Jump($strconn); return; }
                $__Error.Quit();
                return;
            }
        }
       
        #Condition3 
        $isCondition = $true;         
        try { if({{{Condition3Length}}} -eq 0) { $isCondition = $false; } }
        catch {}         
        if($isCondition)
        {
            if ({{{Statement}}} -eq {{{Condition3}}}) 
            {
                try
                {         
                    {{{Expression3}}}
                }
                catch { if($__Error.CheckException($_.Exception.Message)) {return;} }   
                $strconn = "{{{connector-Yes3}}}"; 
                if($strconn.Length -gt 0) { $__Error.Jump($strconn); return; }
                $__Error.Quit();
                return;
            }
        }
        
        #Condition4 
        $isCondition = $true;         
        try { if({{{Condition4Length}}} -eq 0) { $isCondition = $false; } }
        catch {}         
        if($isCondition)
        {
            if ({{{Statement}}} -eq {{{Condition4}}}) 
            {
                try
                {         
                    {{{Expression4}}}
                }
                catch { if($__Error.CheckException($_.Exception.Message)) {return;} }   
                $strconn = "{{{connector-Yes4}}}"; 
                if($strconn.Length -gt 0) { $__Error.Jump($strconn); return; }
                $__Error.Quit();
                return;
            }
        }
        
        #Condition5 
        $isCondition = $true;         
        try { if({{{Condition5Length}}} -eq 0) { $isCondition = $false; } }
        catch {}         
        if($isCondition)
        {
            if ({{{Statement}}} -eq {{{Condition5}}}) 
            {
                try
                {         
                    {{{Expression5}}}
                }
                catch { if($__Error.CheckException($_.Exception.Message)) {return;} }   
                $strconn = "{{{connector-Yes5}}}"; 
                if($strconn.Length -gt 0) { $__Error.Jump($strconn); return; }
                $__Error.Quit();
                return;
            }
        }
        
        try
        {         
            {{{ExpressionDefault}}}
        }
        catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

        $__Error.Jump("{{{connector-Default}}}");
        return;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Statement" Tooltip="Depending on the value of this expression the flow will go to Yes or No link" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Condition1" Tooltip="Condition1" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression1" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Condition2" Tooltip="Condition2" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression2" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Condition3" Tooltip="Condition3" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression3" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Condition4" Tooltip="Condition4" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression4" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Condition5" Tooltip="Condition5" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression5" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="ExpressionDefault" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Default" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Default" Color="#000080" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes1" Orientation="Right" RelativePosition="1,0" MaxInConnections="0" MaxOutConnections="1" Caption="1" Color="#008000" />
                                   <core:ConnectorSettings Name="Yes2" Orientation="Right" RelativePosition="1,0.25" MaxInConnections="0" MaxOutConnections="1" Caption="2" Color="#008000" />
                                   <core:ConnectorSettings Name="Yes3" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="3" Color="#008000" />
                                   <core:ConnectorSettings Name="Yes4" Orientation="Right" RelativePosition="1,0.75" MaxInConnections="0" MaxOutConnections="1" Caption="4" Color="#008000" />
                                   <core:ConnectorSettings Name="Yes5" Orientation="Right" RelativePosition="1,1" MaxInConnections="0" MaxOutConnections="1" Caption="5" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Assign variable" InternalName="Assign" FriendlyName="Assign variable" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Assign Variable.png" ImageType="TopImage" Proportional="True" Version="166">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Assign{{{block_id}}}
{        
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
          

            try
            {
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable6}}} = {{{Expression6}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable7}}} = {{{Expression7}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable8}}} = {{{Expression8}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable9}}} = {{{Expression9}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }

            try
            {         
                {{{Variable10}}} = {{{Expression10}}};
            }
            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }
    }
    catch
    {
        $__Error.ExceptionCatch($_); 
        return;
    }
      
    $__Error.Quit();
}                                                  
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable6" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression6" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable7" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression7" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable8" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression8" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable9" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression9" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable10" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression10" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Foreach Rows" InternalName="ForeachRows" FriendlyName="ForeachRows" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\icotb_Foreach datatable simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Foreach datatable.png" ImageType="TopImageDock" NoDelete="False" Invisible="False" Proportional="True" Version="15">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ForeachRows{{{block_id}}}
{     
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        { 
            $script:__Index{{{block_id}}} = 0; 
        }
             
        if ($script:__Index{{{block_id}}} -lt {{{Table}}}.Rows.Count)
        {       
            {{{Row}}} = {{{Table}}}.Rows[$script:__Index{{{block_id}}}];  
            {{{RowIndex}}} = $script:__Index{{{block_id}}};
                       
            $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                         
            $__Error.Jump("{{{connector-Row}}}");
            return;
        }  
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $script:__Index{{{block_id}}} = 0;
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="" CatalogName="Required" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Row" Tooltip="" CatalogName="Output" Type="Variable" Value="$Row" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="RowIndex" Tooltip="" CatalogName="Output" Type="Variable" Value="$RowIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Row" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Row" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Foreach List" InternalName="ForeachList" FriendlyName="ForeachList" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\icotb_Foreach simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Foreach.png" ImageType="TopImageDock" NoDelete="False" Invisible="False" Proportional="True" Version="43">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ForeachList{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        { 
            $script:__Index{{{block_id}}} = 0; 
            $script:__FromOne{{{block_id}}} = $false;
            $script:__Items{{{block_id}}} = {{{Items}}};
        }
             
        if ($script:__Index{{{block_id}}} -lt $script:__Items{{{block_id}}}.Count)
        {     
            $currentindex = $script:__Index{{{block_id}}};
            if($script:__FromOne{{{block_id}}}) { $currentindex++; }
            try { {{{Item}}} = $script:__Items{{{block_id}}}[$currentindex]; }
            catch
            {
                if($currentindex -eq 0)
                {
                    $currentindex = 1;
                    {{{Item}}} = $script:__Items{{{block_id}}}[$currentindex];
                    $script:__FromOne{{{block_id}}} = $true;
                }
            }     
            {{{ItemIndex}}} = $script:__Index{{{block_id}}};
            $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                
            $__Error.Jump("{{{connector-Item}}}");
            return;
        } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $script:__Index{{{block_id}}} = 0; 
    $script:__FromOne{{{block_id}}} = $false;
    $script:__Items{{{block_id}}} = $null;
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Expression" Value="$Items" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Item" Tooltip="" CatalogName="Output" Type="Variable" Value="$Item" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ItemIndex" Tooltip="" CatalogName="Output" Type="Variable" Value="$ItemIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Item" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Item" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Foreach Hashtable" InternalName="ForeachHashtable" FriendlyName="ForeachHashtable" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\icotb_Foreach hashtable simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Foreach hashtable.png" ImageType="TopImageDock" NoDelete="False" Invisible="False" Proportional="True" Version="34">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ForeachHashtable{{{block_id}}}
{             
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        { 
            $script:__DictEnum{{{block_id}}} = {{{Items}}}.GetEnumerator(); 
            $script:__DictEnum{{{block_id}}}.Reset();
            $script:__Index{{{block_id}}} = 0; 
        }
            
        if($script:__DictEnum{{{block_id}}}.MoveNext())
        {      
            {{{Key}}} = $script:__DictEnum{{{block_id}}}.Current.Key;
            {{{Value}}} = $script:__DictEnum{{{block_id}}}.Current.Value;
                       
            {{{ItemIndex}}} = $script:__Index{{{block_id}}};
            $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
            
            $__Error.Jump("{{{connector-Item}}}");
            return;
        } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $script:__DictEnum{{{block_id}}} = $null; 
    Remove-Variable -Name __DictEnum{{{block_id}}} -Scope Script; 
    $script:__Index{{{block_id}}} = 0;
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Expression" Value="$Items" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Key" Tooltip="" CatalogName="Output" Type="Variable" Value="$Key" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ItemIndex" Tooltip="" CatalogName="Output" Type="Variable" Value="$ItemIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Item" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Item" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="For" InternalName="For" FriendlyName="For" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\icotb_While simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_While.png" ImageType="TopImageDockSmall" NoDelete="False" Invisible="False" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function For{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $StartIndex = {{{StartIndex}}};
    $EndIndex   = {{{EndIndex}}};
    $Step       = {{{Step}}}; 
        
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        { 
            $script:__Index{{{block_id}}} = $StartIndex;
            $script:__End{{{block_id}}} = $EndIndex;
        }
             
        {{{Index}}} = $script:__Index{{{block_id}}};
                    
        if($Step -gt 0)
        {        
            if ($script:__Index{{{block_id}}} -ge $script:__End{{{block_id}}})
            {                 
                $script:__Index{{{block_id}}} = $null;
                $__Error.Jump("{{{connector-Next}}}");
                return;
            }
            else
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + $Step;
                $__Error.Jump("{{{connector-Index}}}");
                return;
            } 
        } 
        else
        {
            if ($script:__Index{{{block_id}}} -lt $script:__End{{{block_id}}})
            {                 
                $script:__Index{{{block_id}}} = $null; 
                $__Error.Jump("{{{connector-Next}}}");
                return;
            }
            else
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + $Step;
                $__Error.Jump("{{{connector-Index}}}");
                return;
            } 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
            
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="StartIndex" Tooltip="Start index" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndex" Tooltip="End index." CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Step" Tooltip="Step" CatalogName="Required" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Index" Tooltip="Out index" CatalogName="Output" Type="Variable" Value="$Index" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Index" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Index" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="While" InternalName="While" FriendlyName="While" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\icotb_While simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_While.png" ImageType="TopImageDockSmall" NoDelete="False" Invisible="False" Proportional="True" Version="31">
                         <core:ToolboxItemSettings.Code><![CDATA[
function While{{{block_id}}}
{              
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $Condition = {{{Condition}}}
    
        if ($Condition)
        {                          
            $__Error.Jump("{{{connector-Iteration}}}");
            return;
        } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Condition" Tooltip="Condition for while" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Iteration" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Iteration" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Delay" InternalName="Delay" FriendlyName="Delay" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Delay.png" ImageType="TopImage" Proportional="True" Version="69">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Delay{{{block_id}}}
{                
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $TimeObj         = {{{Time}}};
    $Units           = "{{{Units}}}"; 
    $WriteLogMessage = ${{{WriteLogMessage}}};
    
        $typename = $TimeObj.GetType().Name;
        if($typename -eq "TimeSpan")
        {                  
            if(!$script:__IsRun{{{block_id}}})
            {
                $script:__IsRun{{{block_id}}} = "1";
                if(${{{RunImmediately}}}) 
                {        
                    if($WriteLogMessage)
                    {
                        $val = "Wait " + $TimeObj.TotalMilliseconds + " milliseconds";
                        Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue></info>");
                    }
                    [System.Threading.Thread]::Sleep($TimeObj);
                } 
            }   
            else
            {      
                if($WriteLogMessage)
                {
                    $val = "Wait " + $TimeObj.TotalMilliseconds + " milliseconds";
                    Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue></info>");
                }
                [System.Threading.Thread]::Sleep($TimeObj);
            }
        }
        else
        {
            $Time = _toint($TimeObj);
            if(!$script:__IsRun{{{block_id}}})
            {
                $script:__IsRun{{{block_id}}} = "1";
                if(${{{RunImmediately}}}) 
                {       
                    if($WriteLogMessage)
                    {
                        $val = "Wait $Time {{{Units}}}";
                        Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue></info>");
                    }
                    Start-Sleep -{{{Units}}} $Time;
                } 
            }   
            else
            {     
                if($WriteLogMessage)
                {
                    $val = "Wait $Time {{{Units}}}";
                    Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue></info>");
                }
                Start-Sleep -{{{Units}}} $Time;
            }
        }    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }                    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Units" Tooltip="Units of Time parameter" CatalogName="Main properties" Type="Enum" Value="Seconds" EnumVariants="Seconds;Milliseconds" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Time" Tooltip="Delays execution for specified time (milliseconds)" CatalogName="Main properties" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RunImmediately" Tooltip="Run sleep immediately " CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WriteLogMessage" Tooltip="WriteLogMessage" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Invoke Expression" InternalName="InvokeExpression" FriendlyName="Invoke Expression" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Invoke Expression.png" PathToToolboxImage="" ImageType="TopImage " NoDelete="False" Proportional="True" Version="66">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InvokeExpression{{{block_id}}}
{      
    try
    {  
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        try
        { 
            {{{Expression1}}}
        }
        catch { $errormessage = "Expression1: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression2}}}
        }
        catch { $errormessage = "Expression2: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression3}}}
        }
        catch { $errormessage = "Expression3: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression4}}}
        }
        catch { $errormessage = "Expression4: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression5}}}
        }
        catch { $errormessage = "Expression5: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; if($__Error.CheckException($errormessage)) {return;} }
    }
    catch { }
        

    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Expression1" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression2" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression3" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression4" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression5" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Invoke C# Code" InternalName="InvokeCSharpCode" FriendlyName="Invoke C# Code" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="150" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_InvokeCSharp.png" ImageType="TopImage " Proportional="True" Version="39">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InvokeCSharpCode{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $Configuration = {{{Configuration}}};
    
        {AddTypesInvokeCode}
              
        $pathProject = [System.Environment]::CurrentDirectory;
        
        $obj = [InvokeCode.ClassCSharpObject]::LoadJsonConf($Configuration, $pathProject);
        if($null -eq $obj)
        {
            $__Error.Exception("ERRORCONST_CONFIGURATIONERROR");
            return;
        } 
        
        foreach($v in $obj.InParams)
        {
            $varname = $v.PSName;           
            if($__thisClass)
            {               
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $v.Value = $_thisvar;
                    continue;
                }
            }

            $thisvar = Get-Variable -Scope Script -Name $varname -ErrorAction SilentlyContinue;
            if($null -eq $thisvar) { continue; }
            $v.Value = $thisvar.Value;
        }
             
        $result = $obj.ExecuteCode();
        if($result.Length -gt 0)
        {
            $__Error.Exception($result);
            return;
        }

        foreach($v in $obj.OutParams)
        {
            $varname  = $v.PSName;                  
            $varvalue = $v.Value; 
            
            if($__thisClass)
            {
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $setVarCommand = '$' + $_varname + ' = $varvalue';
                    Invoke-Expression $setVarCommand
                    continue;
                }
            }

            Set-Variable -Name $varname -Value $varvalue -Scope Script;   
        }    
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Configuration" Tooltip="Configuration json code" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Invoke Python Code" InternalName="InvokePythonCode" FriendlyName="Invoke Python Code" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="150" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_InvokePython.png" ImageType="TopImage " Proportional="True" Version="13">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InvokePythonCode{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $Configuration = {{{Configuration}}};
    
        {AddTypesInvokeCode}
              
        $pathProject = [System.Environment]::CurrentDirectory;
        
        $obj = [InvokeCode.ClassPythonObject]::LoadJsonConf($Configuration, $pathProject);
        if($null -eq $obj)
        {
            $__Error.Exception("ERRORCONST_CONFIGURATIONERROR");
            return;
        } 
        
        foreach($v in $obj.InParams)
        {
            $varname = $v.PSName;           
            if($__thisClass)
            {               
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $v.Value = $_thisvar;
                    continue;
                }
            }

            $thisvar = Get-Variable -Scope Script -Name $varname -ErrorAction SilentlyContinue;
            if($null -eq $thisvar) { continue; }
            $v.Value = $thisvar.Value;
        }
        
        $result = $obj.ExecuteCode();
        if($result.Length -gt 0)
        {
            $__Error.Exception($result);
            return;
        }

        foreach($v in $obj.OutParams)
        {
            $varname  = $v.PSName;                  
            $varvalue = $v.Value; 
            
            if($__thisClass)
            {
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $setVarCommand = '$' + $_varname + ' = $varvalue';
                    Invoke-Expression $setVarCommand
                    continue;
                }
            }

            Set-Variable -Name $varname -Value $varvalue -Scope Script; 
        } 
     
        {{{Stdout}}} = $__PythonStdout;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Configuration" Tooltip="Configuration json code" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Stdout" Tooltip="Stdout" CatalogName="Output" Type="Variable" Value="$Stdout" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Invoke VB Code" InternalName="InvokeVBCode" FriendlyName="Invoke VB Code" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="150" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_InvokeVB.png" ImageType="TopImage " Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InvokeVBCode{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $Configuration = {{{Configuration}}};
    
        {AddTypesInvokeCode}
              
        $pathProject = [System.Environment]::CurrentDirectory;
        
        $obj = [InvokeCode.ClassVBObject]::LoadJsonConf($Configuration, $pathProject);
        if($null -eq $obj)
        {
            $__Error.Exception("ERRORCONST_CONFIGURATIONERROR");
            return;
        } 
        
        foreach($v in $obj.InParams)
        {
            $varname = $v.PSName;           
            if($__thisClass)
            {               
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $v.Value = $_thisvar;
                    continue;
                }
            }

            $thisvar = Get-Variable -Scope Script -Name $varname -ErrorAction SilentlyContinue;
            if($null -eq $thisvar) { continue; }
            $v.Value = $thisvar.Value;
        }
             
        $result = $obj.ExecuteCode();
        if($result.Length -gt 0)
        {
            $__Error.Exception($result);
            return;
        }

        foreach($v in $obj.OutParams)
        {
            $varname  = $v.PSName;                  
            $varvalue = $v.Value; 
            
            if($__thisClass)
            {
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $setVarCommand = '$' + $_varname + ' = $varvalue';
                    Invoke-Expression $setVarCommand
                    continue;
                }
            }

            Set-Variable -Name $varname -Value $varvalue -Scope Script;   
        }    
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Configuration" Tooltip="Configuration json code" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="TryCatch" InternalName="TryCatchContainer" FriendlyName="TryCatch" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Subprocess.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Subprocess.png" ImageType="LeftImage" Proportional="True" Version="85">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TryCatchContainer{{{block_id}}}
{   
    try
    {
    $script:__LastBlockID = "{{{block_native_id}}}";
         
    $currentblockid = "{{{block_native_id}}}"; 
    
    $NumberAttemptsObj = {{{NumberAttempts}}};
    

            try
            {         
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { $errormessage = "Variable1: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { $errormessage = "Variable2: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { $errormessage = "Variable3: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { $errormessage = "Variable4: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { $errormessage = "Variable5: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        
    }
    catch {}
        
    $__Error.Enter("{{{block_native_id}}}", "Default","Default","Default","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connector-Out}}}", "{{{connector-Out}}}"); 
            
    $_NumberAttempts = 1; 
    
    if($null -eq $NumberAttemptsObj) { $NumberAttemptsObj = ""; }
    
    $tempint = 0;
    if([int]::TryParse($NumberAttemptsObj, [ref] $tempint)) { $_NumberAttempts = $tempint; }
           
    if($script:__FuncIndex -gt $script:__LastFuncIndex) 
    { 
        $script:__IndexAttempt{{{block_id}}} = 0; 
    } 
    
    $script:__IndexAttempt{{{block_id}}} = $script:__IndexAttempt{{{block_id}}} + 1;
    if($_NumberAttempts -gt 1)
    {               
        $val = "Попытка " + $script:__IndexAttempt{{{block_id}}}; 
        Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$val</InternalValue></info>");
    }
    
    $interceptConnectorError = ""; 
    $interceptConnectorNext = "";
    if ($script:__callstack.Count -gt 0)
    {
        $tempitem                = $script:__callstack.Peek();
        $interceptConnectorError = [string]$tempitem.ConnectorError;
        $interceptConnectorNext  = [string]$tempitem.ConnectorNext;
    }  
    
    $stackitem                  = [MainHelpers.StackItem]::new();
    $stackitem.ProcessContainer = "TryCatchContainer{{{block_id}}}";
    $stackitem.ConnectorNext    = "{{{connector-Out}}}"; 
    $stackitem.ConnectorError   = "{{{connector-Error}}}"; 
    
    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $stackitem.ConnectorNext; }
    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorError; }
    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorNext; } 
          
    if($script:__IndexAttempt{{{block_id}}} -lt $_NumberAttempts)
    {
        $stackitem.ConnectorError = $stackitem.ProcessContainer;
    }
        
    $script:__callstack.push($stackitem);  
    
    if($null -eq $script:__ProcessContainerErrorMessage)
    {
        $script:__ProcessContainerErrorMessage = New-Object 'System.Collections.Generic.Dictionary[[string],[string]]'
    }

    $script:__ProcessContainerErrorMessage[$stackitem.ProcessContainer] = "{{{ErrorMessage}}}";
    
    $script:__NextBlockID = "{{{connector-Next}}}";  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="NumberAttempts" Tooltip="Number Attempts" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.25" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Out" Orientation="Right" RelativePosition="1,0.75" MaxInConnections="0" MaxOutConnections="1" Caption="Out" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Collapse" InternalName="CollapseContainer" FriendlyName="Collapse" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Subprocess.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Subprocess.png" ImageType="LeftImage" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CollapseContainer{{{block_id}}}
{   
    try
    {
    $script:__LastBlockID = "{{{block_native_id}}}";
         
    $currentblockid = "{{{block_native_id}}}"; 

            try
            {         
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { $errormessage = "Variable1: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { $errormessage = "Variable2: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { $errormessage = "Variable3: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { $errormessage = "Variable4: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { $errormessage = "Variable5: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        
    }
    catch {}
        
    $__Error.Enter("{{{block_native_id}}}", "Default","Default","Default","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("", "{{{connector-Out}}}", "{{{connector-Out}}}"); 
           
    $interceptConnectorError = ""; 
    $interceptConnectorNext = "";
    if ($script:__callstack.Count -gt 0)
    {
        $tempitem                = $script:__callstack.Peek();
        $interceptConnectorError = [string]$tempitem.ConnectorError;
        $interceptConnectorNext  = [string]$tempitem.ConnectorNext;
    }  
    
    $stackitem                  = [MainHelpers.StackItem]::new();
    $stackitem.ProcessContainer = "CollapseContainer{{{block_id}}}";
    $stackitem.ConnectorNext    = "{{{connector-Out}}}"; 
    $stackitem.ConnectorError   = $interceptConnectorError; 
        
    $script:__callstack.push($stackitem);
    
    $script:__NextBlockID = "{{{connector-Next}}}";  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Out" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Выход" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Full Abort" InternalName="FullAbort" FriendlyName="Full Abort" PathStyle="{StaticResource O}" PathStyle_DragThumb="{StaticResource O_DragThumb}" Width="70" Height="70" PathToImage="ExternalToolboxes\Image\ico_Process Abort.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Process Abort.png" ImageType="OnlyImage" Proportional="True" Version="30">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FullAbort{{{block_id}}}
{        
	try
	{
        $Value        = {{{Value}}};
        $SendOrkest   = ${{{SendOrkest}}};
        $IsScreenshot = ${{{IsScreenshot}}};
        
        $ValueStr = VarToString($Value); 
             
        $val = _shield $ValueStr;
        if($SendOrkest -or $IsScreenshot)
        {                      
            if($val.Length -eq 0)
            {
                $val = "Screenshot "+[DateTime]::Now.ToString();
            }
            Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendLogOrkest</InternalName><UITextValue>$val</UITextValue><UITextType>Info</UITextType><IsScreenshot>{{{IsScreenshot}}}</IsScreenshot></block>"); 
        }
        if($val.Length -gt 0)
        {
            $xmlvar = "";
            try
            {
                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);
            }
            catch{} 
            Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue>$xmlvar</info>");
        }
    }
    catch 
    { 
    }
    
    try
    {
        $ThrowException = {{{ThrowException}}};
        $TypeException  = "{{{TypeException}}}"; 
        $SetJobFailed   = ${{{SetJobFailed}}};
        
        if($ThrowException.Length -gt 0)
        {                                         
            $script:__LastErrorMessage = $ThrowException;
            $script:__LastErrorMessageType = "Default";
            if($TypeException -eq "System")
            {
                $script:SystemException = $ThrowException;
                $script:__LastErrorMessageType = "System";
            }
            if($TypeException -eq "Business")
            {
                $script:BusinessException = $ThrowException; 
                $script:__LastErrorMessageType = "Business";
            }
            
            $__Error.Enter("{{{block_native_id}}}", "Default","Default","Default","ErrorMessage");    
            $__Error.Exception($ThrowException);
            return;
        }   
        
        if($SetJobFailed)
        {
            Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>Forced job status setting as failed</InternalValue></info>");
            Write-Host("<info><ID></ID><InternalName>SetJobFailed</InternalName><InternalValue></InternalValue></info>");
        }
    }
    catch{}

    $__Error.Quit(); 
    $script:__NextBlockID = "";  
    $script:__LastBlockID = "{{{block_native_id}}}";
}               
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ThrowException" Tooltip="Throw exception" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeException" Tooltip="Type exception" CatalogName="Main properties" Type="Enum" Value="Default" EnumVariants="Default;System;Business" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Value" Tooltip="Adds this string or variable" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="SendOrkest" Tooltip="Send log to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsScreenshot" Tooltip="Create screenshot to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SetJobFailed" Tooltip="Set status job failed" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Abort Container" InternalName="AbortContainer" FriendlyName="Abort Container" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Abort Container.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Abort Container.png" ImageType="LeftImage" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AbortContainer{{{block_id}}}
{       
    try
    {
    $currentblockid = "{{{block_native_id}}}";
       
        $Value        = {{{Value}}};
        $SendOrkest   = ${{{SendOrkest}}};
        $IsScreenshot = ${{{IsScreenshot}}};
        
        $ValueStr = VarToString($Value); 
             
        $val = _shield $ValueStr;
        if($SendOrkest -or $IsScreenshot)
        {                      
            if($val.Length -eq 0)
            {
                $val = "Screenshot "+[DateTime]::Now.ToString();
            }
            Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendLogOrkest</InternalName><UITextValue>$val</UITextValue><UITextType>Info</UITextType><IsScreenshot>{{{IsScreenshot}}}</IsScreenshot></block>"); 
        }
        if($val.Length -gt 0)
        {
            $xmlvar = "";
            try
            {
                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);
            }
            catch{} 
            Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue>$xmlvar</info>");
        }
    }
    catch 
    { 
    }
    
    try
    {

            try
            {         
                {{{Variable1}}} = {{{Expression1}}};
            }
            catch { $errormessage = "Variable1: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable2}}} = {{{Expression2}}};
            }
            catch { $errormessage = "Variable2: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable3}}} = {{{Expression3}}};
            }
            catch { $errormessage = "Variable3: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable4}}} = {{{Expression4}}};
            }
            catch { $errormessage = "Variable4: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

            try
            {         
                {{{Variable5}}} = {{{Expression5}}};
            }
            catch { $errormessage = "Variable5: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }

        try
        {         
            {{{Expression6}}}
        }
        catch { $errormessage = "Expression6: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression7}}}
        }
        catch { $errormessage = "Expression7: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression8}}}
        }
        catch { $errormessage = "Expression8: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression9}}}
        }
        catch { $errormessage = "Expression9: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
        try
        {         
            {{{Expression10}}}
        }
        catch { $errormessage = "Expression10: " + $_.Exception.Message; Write-Host("<info><ID>$currentblockid</ID><InternalName>ErrorBlockLight</InternalName><InternalValue>$errormessage</InternalValue></info>"); }
 
    }
    catch {}
    
    try
    {    
        if ($script:__callstack.Count -gt 0)
        {
            $stackitem = $script:__callstack.Peek();  
            $containerName = $stackitem.ProcessContainer;
            if($containerName.StartsWith("TryCatchContainer") -or $containerName.StartsWith("CollapseContainer"))
            {       
                $__Error.Quit(); 
                $stackitem = $script:__callstack.Pop();
            }
        }                
    }
    catch{}                                        
    $script:__NextBlockID = "{{{connector-Next}}}"; 
    $script:__LastBlockID = "{{{block_native_id}}}";
}               
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Adds this string or variable" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable1" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression1" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable2" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression2" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable3" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression3" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable4" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression4" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Variable5" Tooltip="Variable to assign new value to" CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" />
                                   <core:Property Name="Expression5" Tooltip="New value or expression" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Expression6" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression7" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression8" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression9" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="Expression10" Tooltip="Expression for execute" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" />
                                   <core:Property Name="SendOrkest" Tooltip="Send log to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsScreenshot" Tooltip="Create screenshot to Orkestrator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Parallel Select" InternalName="ParallelSelect" FriendlyName="Parallel Select" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="110" Height="300" PathToImage="ExternalToolboxes\Image\ico_SubprocessSelect.png" PathToToolboxImage="ExternalToolboxes\Image\ico_SubprocessSelect.png" ImageType="TopImage " Proportional="False" Version="36">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ParallelSelect{{{block_id}}}
{      
	try
	{
           
    $currentblockid = "{{{block_native_id}}}";
    
    $WaitTime    = {{{WaitTime}}}; 
    $ReportLevel = "{{{ReportLevel}}}";
    
        if($null -eq $script:__ParallelSelectBlock) 
        { 
            $script:__Index{{{block_id}}} = 1; 
            $script:__TickCount{{{block_id}}} = [System.Environment]::TickCount -band [Int32]::MaxValue;
        } 
       
        $outstatus = 0; 
              
        while($true)
        {         
            $tick = [System.Environment]::TickCount -band [Int32]::MaxValue;   
            if(($tick - $script:__TickCount{{{block_id}}}) -gt ($WaitTime * 1000))
            {     
                break;
            }  
            
            if($script:__ParallelSelectStatus)
            {           
                if($script:__ParallelSelectStatus -eq "Success")
                {
                    $outstatus = $script:__Index{{{block_id}}} - 1;
                    break;
                } 
                $script:__ParallelSelectStatus = $null;
            }
            
            if($script:__Index{{{block_id}}} -eq 1)
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                $strconn = "{{{connector-Select1}}}"; 
                if($strconn.Length -gt 0)
                {                   
                    if($ReportLevel -eq "Detailed") 
                    {
                        Write-Host("<info><ID>$currentblockid</ID><InternalName>Detailed</InternalName><InternalValue>Select1</InternalValue></info>");
                    } 
                    $script:__ParallelSelectStatus = "";
                    $script:__ParallelSelectBlock = "ParallelSelect{{{block_id}}}";
                    $script:__NextBlockID = $strconn;
                    return;
                }
            }
        
            if($script:__Index{{{block_id}}} -eq 2)
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                $strconn = "{{{connector-Select2}}}"; 
                if($strconn.Length -gt 0)
                {     
                    if($ReportLevel -eq "Detailed") 
                    {
                        Write-Host("<info><ID>$currentblockid</ID><InternalName>Detailed</InternalName><InternalValue>Select2</InternalValue></info>");
                    }
                    $script:__ParallelSelectStatus = "";
                    $script:__ParallelSelectBlock = "ParallelSelect{{{block_id}}}";
                    $script:__NextBlockID = $strconn;
                    return;
                }
            }
        
            if($script:__Index{{{block_id}}} -eq 3)
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                $strconn = "{{{connector-Select3}}}"; 
                if($strconn.Length -gt 0)
                {            
                    if($ReportLevel -eq "Detailed") 
                    {
                        Write-Host("<info><ID>$currentblockid</ID><InternalName>Detailed</InternalName><InternalValue>Select3</InternalValue></info>");
                    }
                    $script:__ParallelSelectStatus = "";
                    $script:__ParallelSelectBlock = "ParallelSelect{{{block_id}}}";
                    $script:__NextBlockID = $strconn;
                    return;
                }
            }
            
            if($script:__Index{{{block_id}}} -eq 4)
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                $strconn = "{{{connector-Select4}}}"; 
                if($strconn.Length -gt 0)
                {      
                    if($ReportLevel -eq "Detailed") 
                    {
                        Write-Host("<info><ID>$currentblockid</ID><InternalName>Detailed</InternalName><InternalValue>Select4</InternalValue></info>");
                    }
                    $script:__ParallelSelectStatus = "";
                    $script:__ParallelSelectBlock = "ParallelSelect{{{block_id}}}";
                    $script:__NextBlockID = $strconn;
                    return;
                }
            }
            
            if($script:__Index{{{block_id}}} -eq 5)
            {       
                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;
                $strconn = "{{{connector-Select5}}}"; 
                if($strconn.Length -gt 0)
                {      
                    if($ReportLevel -eq "Detailed") 
                    {
                        Write-Host("<info><ID>$currentblockid</ID><InternalName>Detailed</InternalName><InternalValue>Select5</InternalValue></info>");
                    }
                    $script:__ParallelSelectStatus = "";
                    $script:__ParallelSelectBlock = "ParallelSelect{{{block_id}}}";
                    $script:__NextBlockID = $strconn;
                    return;
                }
            }
            
            
            $script:__Index{{{block_id}}} = 1;
        } 
    }
    catch 
    { 
    }  

    {{{OutStatus}}} = $outstatus;
    
    if($ReportLevel -eq "Detailed") 
    {
        Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Detailed</InternalName><InternalValue>Out</InternalValue></info>");
    }
    elseif($ReportLevel -eq "Output") 
    {
        Write-Host("<info><ID>$currentblockid</ID><InternalName>Detailed</InternalName><InternalValue>Status: $outstatus</InternalValue></info>");
    }
    $script:__ParallelSelectStatus = $null;
    $script:__ParallelSelectBlock = $null;
    $script:__NextBlockID = "{{{connector-Next}}}"; 
}
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Required" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OutStatus" Tooltip="Status index per 1" CatalogName="Output" Type="Variable" Value="$BlockNumber" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Select1" Orientation="Right" RelativePosition="1,0" MaxInConnections="0" MaxOutConnections="1" Caption="[1]" Color="#008000" />
                                   <core:ConnectorSettings Name="Select2" Orientation="Right" RelativePosition="1,0.25" MaxInConnections="0" MaxOutConnections="1" Caption="[2]" Color="#008000" />
                                   <core:ConnectorSettings Name="Select3" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="[3]" Color="#008000" />
                                   <core:ConnectorSettings Name="Select4" Orientation="Right" RelativePosition="1,0.75" MaxInConnections="0" MaxOutConnections="1" Caption="[4]" Color="#008000" />
                                   <core:ConnectorSettings Name="Select5" Orientation="Right" RelativePosition="1,1" MaxInConnections="0" MaxOutConnections="1" Caption="[5]" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Start Background Robot" InternalName="StartBackgroundRobot" FriendlyName="Start Background Robot" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="150" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_StartBackgroundRobot.png" ImageType="TopImage " NoDelete="False" Invisible="False" Proportional="True" Version="79">
                         <core:ToolboxItemSettings.Code><![CDATA[
function StartBackgroundRobot{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $NameProcess   = {{{NameProcess}}};
    $NameFileRobot = {{{NameFileRobot}}};
    $WaitForExit   = ${{{WaitForExit}}};  
    $WaitTimeObj   = {{{WaitTime}}};   
    $LaunchMode    = "{{{LaunchMode}}}";
    
        
        $NameFileRobot = ExpandConstFilePath $NameFileRobot
               
        if(-not [System.IO.File]::Exists($NameFileRobot))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $NameFileRobot");
            return;
        } 
        
        $ext = [System.IO.Path]::GetExtension($NameFileRobot).ToLower();
        if($ext -ne ".robot")
        {
            $__Error.Exception("Unknown format. The .robot file is expected");
            return;
        }
           
        if([string]::IsNullOrEmpty($NameProcess))
        {
            $NameProcess = "{{{block_id}}}";
        }
                                     
        $toname = "{{{block_id}}}";
        $RobotArguments      = $toname + ".json";
        $RobotArguments      = [System.IO.Path]::Combine($__WorkPath, $RobotArguments); 
        $valueRobotArguments = '{{{ProcessArguments}}}'.Trim("""");
        $valueRobotArguments = [System.Web.HttpUtility]::HtmlDecode($valueRobotArguments);
        [System.IO.File]::WriteAllText($RobotArguments, $valueRobotArguments, [System.Text.Encoding]::UTF8);
                     
        #ProcessedRobotArgumentsIn
                
        if($LaunchMode -eq "Background")
        {
            $args = "-unattended -background ""$NameProcess"" -robotarguments ""$RobotArguments"" ""$NameFileRobot""";
                   
            $startinfo                  = [System.Diagnostics.ProcessStartInfo]::new();
            $startinfo.FileName         = $__RobotPath;
            $startinfo.Arguments        = $args;
            $startinfo.WorkingDirectory = [System.IO.Path]::GetDirectoryName($__RobotPath);

            $proc   = [System.Diagnostics.Process]::Start($startinfo);
            $procId = $proc.Id;         
        }
        elseif($LaunchMode -eq "Foreground (PiP)")
        {            
            $valFile     = _shield $NameFileRobot; 
            $valArgs     = _shield $RobotArguments;
            $psresultstr = Read-Host("<PiPClient><CommandName>LaunchScript</CommandName><NameFileRobot>$valFile</NameFileRobot><RobotArguments>$valArgs</RobotArguments></PiPClient>");                       
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; }  
                        
            $procId = _toint($psResult.Result);  
        }  
        
        {{{RobotID}}} = [MainHelpers.ProcessID]::CreatePID($procId).Serialize();
        if($WaitForExit)
        {           
            $WaitTime = $WaitTimeObj * 1000;
            if($WaitTime -le 0) { $WaitTime = -1; }
            
            try           
            {
                $proc = [System.Diagnostics.Process]::GetProcessById($procId);
                if($null -ne $proc)
                {
                    $proc.WaitForExit($WaitTime); 
                    
                    #ProcessedRobotArgumentsOut
                }
            }
            catch{} 
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="NameFileRobot" Tooltip="Name file robot" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LaunchMode" Tooltip="Launch mode" CatalogName="Main properties" Type="Enum" Value="Background" EnumVariants="Background;Foreground (PiP)" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="NameProcess" Tooltip="Name background process" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WaitForExit" Tooltip="Wait for exit " CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Wait time" CatalogName="Main properties" Type="Expression" Value="3600" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessArguments" Tooltip="ProcessArguments" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="False" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="RobotID" Tooltip="" CatalogName="Output" Type="Variable" Value="$RobotID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="RobotID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Check Background Robot" InternalName="CheckBackgroundRobot" FriendlyName="Check Background Robot" PathStyle="{StaticResource Rhombus}" PathStyle_DragThumb="{StaticResource Rhombus_DragThumb}" Width="150" Height="150" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_CheckBackgroundRobot.png" ImageType="NoImage" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CheckBackgroundRobot{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $RobotID     = {{{RobotID}}}; 
    $WaitSuccess = ${{{WaitSuccess}}};
    
                
        $listID = New-Object Collections.Generic.List[string];
        
        $vartype = $RobotID.GetType().Name;
        if($vartype.Contains("List") -or $vartype.Contains("[]"))
        {
            foreach($item in $RobotID)
            {                            
                $listID.Add($item.ToString());
            } 
        } 
        else
        {
            $listID.Add($RobotID.ToString());
        }
             
        while($true)
        {        
            $countID = 0;
            foreach($itemID in $listID)
            {
                $processid = $itemID;
                $processobj = [MainHelpers.ProcessID]::DeserializeStrong($itemID);
                if($processobj)
                {
                    $processid = $processobj.PID.ToString();
                } 
                
                $id = 0;
                if([int]::TryParse($processid,[ref]$id))
                {           
                    try 
                    {
                        $p = [System.Diagnostics.Process]::GetProcessById($id);
                        $countID++;                    
                    }
                    catch {}
                }        
            }  
      
            $condition = $false;
            if($countID -eq 0){ $condition = $true; }
           
            if(-not $WaitSuccess) { break; } 
            
            if($condition) { break; } 
         
            Start-Sleep -Milliseconds 1000
        }
    
        if ($condition) 
        {
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {   
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="RobotID" Tooltip="Robot id" CatalogName="Required" Type="Expression" Value="$RobotID" Visible="True" DefaultValue="&quot;&quot;" ValueType="RobotID" />
                                   <core:Property Name="WaitSuccess" Tooltip="Wait for exit " CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="PointConnector" InternalName="PointConnector" FriendlyName="PointConnector" PathStyle="{StaticResource FillO}" PathStyle_DragThumb="{StaticResource FillO_DragThumb}" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PointConnector{{{block_id}}}
{                
    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="UIToolboxSettings" Name="UI Automation" ToolboxGridType="List" AliasDescription="Imitate user actions with desktop application: click on buttons, enter texts into edit boxes, get texts from screen, etc">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Mouse Click" InternalName="MouseClick" FriendlyName="Mouse Click" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Mouse Click.png" ImageType="LeftImage" Proportional="True" Version="280" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MouseClick{{{block_id}}}
{          
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
             
        $DelayAfter           = {{{DelayAfter}}}; 
        $DelayBefore          = {{{DelayBefore}}};
        $ProcessID            = {{{ProcessID}}}; 
        $OffsetX              = {{{OffsetX}}};
        $OffsetY              = {{{OffsetY}}};
        $WaitTime             = {{{WaitTime}}};    
        $KeyModifier          = {{{KeyModifier}}};  
        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};
        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};
        $AttemptsSelector2    = {{{AttemptsSelector2}}};
        $AppearTypeSelector2  = "{{{AppearTypeSelector2}}}";
      
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickUI</InternalName><InternalType>Desktop</InternalType><Action>{{{Action}}}</Action><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><ProcessID>$ProcessID</ProcessID><KeyModifier>$KeyModifier</KeyModifier><WaitTime>$WaitTime</WaitTime><SimulateMove>{{{SimulateMove}}}</SimulateMove><AbsolutePoint>{{{AbsolutePoint}}}</AbsolutePoint><SimulateMessages>{{{SimulateMessages}}}</SimulateMessages><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}<DelayBeforeSelector2>$DelayBeforeSelector2</DelayBeforeSelector2><WaitTimeSelector2>$WaitTimeSelector2</WaitTimeSelector2><AttemptsSelector2>$AttemptsSelector2</AttemptsSelector2><AppearTypeSelector2>$AppearTypeSelector2</AppearTypeSelector2>{{{Selector2}}}</block>");                      
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
                   
        {{{NewProcessID}}} = $psResult.Result;
          
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="KeyModifier" Tooltip="KeyModifier" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Custom properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearTypeSelector2" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="Appear" EnumVariants="Appear;Disappear" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBeforeSelector2" Tooltip="DelayBeforeSelector2" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTimeSelector2" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AttemptsSelector2" Tooltip="AttemptsSelector2" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMessages" Tooltip="Simulate send messages" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AbsolutePoint" Tooltip="Offset is absolute point" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="NewProcessID" Tooltip="" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="NewProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Mouse Over" InternalName="MouseOver" FriendlyName="Mouse Over" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Mouse Over.png" ImageType="LeftImage" Proportional="True" Version="47" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MouseOver{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID = {{{ProcessID}}}; 
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickUI</InternalName><InternalType>Desktop</InternalType><Action>Over</Action><ProcessID>$ProcessID</ProcessID><OverTime>{{{OverTime}}}</OverTime><SimulateMove>{{{SimulateMove}}}</SimulateMove>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="OverTime" Tooltip="Time to keep mouse over element (seconds)" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Mouse Wheel" InternalName="MouseWheel" FriendlyName="Mouse Wheel" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Mouse Wheel.png" ImageType="LeftImage" Proportional="True" Version="19" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MouseWheel{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID = {{{ProcessID}}}; 
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickUI</InternalName><InternalType>Desktop</InternalType><Action>Wheel</Action><ProcessID>$ProcessID</ProcessID><WheelDelta>{{{WheelDelta}}}</WheelDelta>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="WheelDelta" Tooltip="Time to keep mouse over element (seconds)" CatalogName="Main properties" Type="Expression" Value="-1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Press Keys" InternalName="PressKeys" FriendlyName="Press Keys" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Press Keys.png" ImageType="LeftImage" Proportional="True" Version="118" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PressKeys{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        $KeysValueObj     = {{{KeysValue}}};
        $ProcessID        = {{{ProcessID}}};  
        $InteractiveDelay = {{{InteractiveDelay}}};  
        $DelayAfter       = {{{DelayAfter}}}; 
        $DelayBefore      = {{{DelayBefore}}}; 
        $WaitTime         = {{{WaitTime}}}; 
        $OnlyText         = ${{{OnlyText}}}; 
        $OffsetX          = {{{OffsetX}}};
        $OffsetY          = {{{OffsetY}}};  
        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};
        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};
        $AttemptsSelector2    = {{{AttemptsSelector2}}};
        $AppearTypeSelector2  = "{{{AppearTypeSelector2}}}";
        
        Start-Sleep -Seconds $DelayBefore; 
        
        $KeysValue = _checkpassword($KeysValueObj);
                
        if($OnlyText)
        {
            $KeysValue = "[TEXT]" + $KeysValue;
        }
        
        $val = _shield $KeysValue;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendKeys</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><InteractiveType>{{{InteractiveType}}}</InteractiveType><InteractiveDelay>$InteractiveDelay</InteractiveDelay><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><KeysValue>$val</KeysValue><SelectAll>{{{SelectAll}}}</SelectAll><WaitTime>$WaitTime</WaitTime><SimulateMessages>{{{SimulateMessages}}}</SimulateMessages><SimulateMove>{{{SimulateMove}}}</SimulateMove><AutoScroll>{{{AutoScroll}}}</AutoScroll><AutoDepressing>{{{AutoDepressing}}}</AutoDepressing>{{{Selector}}}<DelayBeforeSelector2>$DelayBeforeSelector2</DelayBeforeSelector2><WaitTimeSelector2>$WaitTimeSelector2</WaitTimeSelector2><AttemptsSelector2>$AttemptsSelector2</AttemptsSelector2><AppearTypeSelector2>$AppearTypeSelector2</AppearTypeSelector2>{{{Selector2}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="KeysValue" Tooltip="What keys to press" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="InteractiveType" Tooltip="Enable interactive send keys" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InteractiveDelay" Tooltip="Interactive delay in msec" CatalogName="Main properties" Type="Expression" Value="100" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SelectAll" Caption="Выбрать все" Tooltip="Перед началом ввода посылать сочетание клавиш &quot;выбрать все&quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OnlyText" Tooltip="Only text" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearTypeSelector2" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="AppearAfter" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBeforeSelector2" Tooltip="DelayBeforeSelector2" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTimeSelector2" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AttemptsSelector2" Tooltip="AttemptsSelector2" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Custom properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMessages" Tooltip="Simulate send messages" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoDepressing" Tooltip="AutoDepressing" CatalogName="Custom properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Control Text" InternalName="GetUIText" FriendlyName="Get Control Text" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Get Control Text.png" ImageType="LeftImage" Proportional="True" Version="56" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetUIText{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $UITextType  = "{{{UITextType}}}";
    $ProcessID   = {{{ProcessID}}}; 
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}}; 
    $WaitTime    = {{{WaitTime}}};
    
        {{{Result}}} = "";
        
        Start-Sleep -Seconds $DelayBefore; 
              
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetUIText</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><UITextType>$UITextType</UITextType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
      
        {{{Result}}} = $psResult.Result; 
       
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextType" Tooltip="Type get value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Name;Value;States;ChildrenText;ChildrenName" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into (string)" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Control Text" InternalName="SetUIText" FriendlyName="Set Control Text" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Set Control Text.png" ImageType="LeftImage" Proportional="True" Version="45" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetUIText{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID      = {{{ProcessID}}}; 
    $UITextValueObj = {{{UITextValue}}}; 
    $DelayAfter     = {{{DelayAfter}}}; 
    $DelayBefore    = {{{DelayBefore}}}; 
    $WaitTime       = {{{WaitTime}}};
        
        Start-Sleep -Seconds $DelayBefore; 
                            
        $UITextValue = _checkpassword($UITextValueObj);
        
        $val = _shield $UITextValue;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SetUIText</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><UITextValue>$val</UITextValue><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait Element Appear" InternalName="WaitElementAppear" FriendlyName="Wait Element Appear" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Wait Element Appear.png" ImageType="LeftImage" Proportional="True" Version="50" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function WaitElementAppear{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID = {{{ProcessID}}}
    $WaitTime = {{{WaitTime}}}
        
        {{{PassedTime}}} = 0;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>{{{AppearType}}}</AppearType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{PassedTime}}} = [int]::Parse($psResult.Result);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearType" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="Appear" EnumVariants="Appear;Disappear" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears/disappears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="PassedTime" Tooltip="Variable to save time that passed until element appeared/disappeared or until timeout" CatalogName="Output" Type="Variable" Value="$PassedTime" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait Element Disappear" InternalName="WaitElementDisappear" FriendlyName="Wait Element Disappear" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Wait Element Disappear.png" ImageType="LeftImage" Proportional="True" Version="17" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function WaitElementDisappear{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID = {{{ProcessID}}}
    $WaitTime = {{{WaitTime}}}
        
        {{{PassedTime}}} = 0;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>{{{AppearType}}}</AppearType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{PassedTime}}} = [int]::Parse($psResult.Result);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearType" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="Disappear" EnumVariants="Appear;Disappear" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears/disappears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="PassedTime" Tooltip="Variable to save time that passed until element appeared/disappeared or until timeout" CatalogName="Output" Type="Variable" Value="$PassedTime" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Element Exists" InternalName="ElementExists" FriendlyName="Element Exists" PathStyle="{StaticResource BlueLagoonAllRhombus}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_UI Find Control.png" ImageType="NoImage" Proportional="True" Version="52" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ElementExists{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $ProcessID = {{{ProcessID}}};
    $WaitTime  = {{{WaitTime}}};
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if(!$psResult.IsError)
        {         
            {{{Result}}} = $true;
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {    
            {{{Result}}} = $false;
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears/disappears (seconds)" CatalogName="Main properties" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result exists" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Click On Text" InternalName="ClickOnText" FriendlyName="Click On Text" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Click On Text.png" ImageType="LeftImage" Proportional="True" Version="14" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClickOnText{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID         = {{{ProcessID}}}; 
    $UITextValue       = {{{UITextValue}}};   
    $TextOccurence_str = {{{TextOccurence}}};
    $DelayAfter        = {{{DelayAfter}}}; 
    $DelayBefore       = {{{DelayBefore}}}; 
    $WaitTime          = {{{WaitTime}}};  
    $KeyModifier       = {{{KeyModifier}}};
    $OffsetX           = {{{OffsetX}}};
    $OffsetY           = {{{OffsetY}}};
        
        Start-Sleep -Seconds $DelayBefore; 
                                   
        $TextOccurence = _toint($TextOccurence_str);
        if($TextOccurence -le 0) { $TextOccurence = 1; }
        
        $val = _shield $UITextValue;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickOnText</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><Action>{{{Action}}}</Action><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><UITextValue>$val</UITextValue><WaitTime>$WaitTime</WaitTime><TextOccurence>$TextOccurence</TextOccurence><KeyModifier>$KeyModifier</KeyModifier>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TextOccurence" Tooltip="Text Occurence" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="KeyModifier" Tooltip="KeyModifier" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Copy To Clipboard" InternalName="CopyToClipboard" FriendlyName="Copy To Clipboard" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Copy To Clipboard.png" ImageType="LeftImage" Proportional="True" Version="28" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CopyToClipboard{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ProcessID = {{{ProcessID}}}; 
    $UITextType = "{{{UITextType}}}";
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ProcessClipboard</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><ClipboardType>{{{ClipboardType}}}</ClipboardType><UITextType>$UITextType</UITextType>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ClipboardType" Tooltip="What action to perform" CatalogName="Main properties" Type="Enum" Value="Copy" EnumVariants="Copy;Paste" Visible="False" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UITextType" Tooltip="Type get value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Name" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Paste From Clipboard" InternalName="PasteFromClipboard" FriendlyName="Paste From Clipboard" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Paste From Clipboard.png" ImageType="LeftImage" Proportional="True" Version="22" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PasteFromClipboard{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ProcessID = {{{ProcessID}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ProcessClipboard</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><ClipboardType>{{{ClipboardType}}}</ClipboardType>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ClipboardType" Tooltip="What action to perform" CatalogName="Main properties" Type="Enum" Value="Paste" EnumVariants="Copy;Paste" Visible="False" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Collect Data" InternalName="CollectData" FriendlyName="Collect Data" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Extract Data.png" ImageType="LeftImage" Proportional="True" Version="34" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CollectData{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
    $ProcessID   = {{{ProcessID}}};
    $DelayAfter  = {{{DelayAfter}}};  
    $DelayBefore = {{{DelayBefore}}};
    $WaitTime    = {{{WaitTime}}}; 
    $RowsCount   = {{{RowsCount}}}; 
    $PageCount   = {{{PageCount}}};   
    $OffsetX2    = {{{OffsetX2}}};
    $OffsetY2    = {{{OffsetY2}}};  
    $DelayPage   = {{{DelayPage}}};
    
        {{{Result}}} = $null;
                    
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>CollectData</InternalName><ProcessID>$ProcessID</ProcessID><RowsCount>$RowsCount</RowsCount><InternalType>Desktop</InternalType>{{{Selector}}}<WaitTime>$WaitTime</WaitTime><PageCount>$PageCount</PageCount><OffsetX2>$OffsetX2</OffsetX2><OffsetY2>$OffsetY2</OffsetY2><DelayPage>$DelayPage</DelayPage>{{{Selector2}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
       
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 next button" CatalogName="Main properties" Type="Selector" Value="" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="OffsetX2" Tooltip="Offset X 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY2" Tooltip="Offset Y 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayPage" Tooltip="Delay page" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PageCount" Tooltip="Count pages" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RowsCount" Tooltip="Exctract limit rows count" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return DataTable results" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Option" InternalName="SelectOption" FriendlyName="Select Option" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Set Control Text.png" ImageType="LeftImage" Proportional="True" Version="10" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SelectOption{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $UITextValue = {{{UITextValue}}};        
    $ProcessID   = {{{ProcessID}}};
    $WaitTime    = {{{WaitTime}}};
    
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SelectOption</InternalName><InternalType>Desktop</InternalType><ProcessID>$ProcessID</ProcessID><UITextValue>$UITextValue</UITextValue><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Drag And Drop" InternalName="DragAndDrop" FriendlyName="Drag And Drop" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Move.png" ImageType="LeftImage" Proportional="True" Version="27" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DragAndDrop{{{block_id}}}
{          
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $ProcessID   = {{{ProcessID}}};
    $DelayBefore = {{{DelayBefore}}};
    $DelayAfter  = {{{DelayAfter}}};
    
    $WaitTime  = {{{WaitTime}}};
    $OffsetX   = {{{OffsetX}}};
    $OffsetY   = {{{OffsetY}}};
    $WaitTime2 = {{{WaitTime2}}};
    $OffsetX2  = {{{OffsetX2}}};
    $OffsetY2  = {{{OffsetY2}}};
    $KeyModifier = {{{KeyModifier}}};
      
        Start-Sleep -Seconds $DelayBefore; 
            
        if($WaitTime1 -gt 0)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime1</WaitTime>{{{Selector}}}</block>");                     
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; } 
        } 
        
        if($WaitTime2 -gt 0)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime2</WaitTime>{{{Selector2}}}</block>");                     
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>DragAndDrop</InternalName><InternalType>Desktop</InternalType><ProcessID>$ProcessID</ProcessID><KeyModifier>$KeyModifier</KeyModifier><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY>{{{Selector}}}<OffsetX2>$OffsetX2</OffsetX2><OffsetY2>$OffsetY2</OffsetY2>{{{Selector2}}}</block>");                      
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
          
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector 1 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="KeyModifier" Tooltip="KeyModifier" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time 1 to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X 1 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y 1 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime2" Tooltip="Maximum time 2 to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX2" Tooltip="Offset X 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY2" Tooltip="Offset Y 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Highlight Element" InternalName="HighlightElement" FriendlyName="Highlight Element" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Eye.png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HighlightElement{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $ProcessID      = {{{ProcessID}}};
    $HighlightType  = "{{{HighlightType}}}";
    $HighlightColor = {{{HighlightColor}}};
    $HighlightTime  = {{{HighlightTime}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>HighlightElement</InternalName><ProcessID>$ProcessID</ProcessID><HighlightType>$HighlightType</HighlightType><HighlightColor>$HighlightColor</HighlightColor><HighlightTime>$HighlightTime</HighlightTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                                             
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Enum" Value="True" EnumVariants="False;True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="HighlightType" Tooltip="HighlightType" CatalogName="Main properties" Type="Enum" Value="LastElement" EnumVariants="LastElement;FullPath" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="HighlightColor" Tooltip="HighlightColor" CatalogName="Main properties" Type="Expression" Value="&quot;#00FF00&quot;" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="HighlightTime" Tooltip="HighlightTime" CatalogName="Main properties" Type="Expression" Value="1000" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Elements Count" InternalName="GetElementsCount" FriendlyName="Get Elements Count" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Count Elements.png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetElementsCount{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
    $ProcessID = {{{ProcessID}}};
    $WaitTime  = {{{WaitTime}}};
    
        {{{Result}}} = 0;
             
        if($WaitTime -gt 0)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                     
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetElementsCount</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }              
        
        {{{Result}}} = $psResult.Result; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="List elements" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Clear Cache" InternalName="ClearCache" FriendlyName="Clear Cache" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Clear Cache.png" ImageType="LeftImage" Proportional="True" Version="4" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClearCache{{{block_id}}}
{
    Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClearCache</InternalName></block>");                     
                                                
    $script:__NextBlockID = "{{{connector-Next}}}";
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Control Cache" InternalName="ControlCache" FriendlyName="Control Cache" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Control Cache.png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ControlCache{{{block_id}}}
{
    Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ControlCache</InternalName><EnableCache>{{{EnableCache}}}</EnableCache><EnableDescendant>{{{EnableDescendant}}}</EnableDescendant><CountEntryDescendant>{{{CountEntryDescendant}}}</CountEntryDescendant></block>");                     
                                                
    $script:__NextBlockID = "{{{connector-Next}}}";
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EnableCache" Tooltip="Enable/disable cache" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="EnableDescendant" Tooltip="Enable Descendant" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CountEntryDescendant" Tooltip="Count Entry Descendant" CatalogName="Main properties" Type="Expression" Value="4" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Assert Element" InternalName="AssertElement" FriendlyName="Assert Element" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Get Control Text.png" ImageType="LeftImage" Proportional="True" Version="25" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AssertElement{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $UITextType   = "{{{UITextType}}}";
    $ProcessID    = {{{ProcessID}}}; 
    $Сondition    = "{{{Сondition}}}"; 
    $CompareType  = "{{{CompareType}}}";  
    $CompareValue = {{{CompareValue}}};
    $CompareReply = {{{CompareReply}}};  
    $Attribute    = "{{{Attribute}}}"; 
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}};
    $WaitTime     = {{{WaitTime}}};
    
        
        Start-Sleep -Seconds $DelayBefore; 
                    
        $blockData                 = @{};
        $blockData["Сondition"]    = $Сondition;
        $blockData["CompareType"]  = $CompareType;
        $blockData["CompareValue"] = $CompareValue;
        $blockData["CompareReply"] = $CompareReply;
        $blockData["Attribute"]    = $Attribute; 
        
        $binblockdata  = $__BinFormatter.tobin($blockData);
        $binblockdatastr = _shield($binblockdata);
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AssertElement</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><BlockData>$binblockdatastr</BlockData><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
                                             
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="Сondition" Tooltip="Сondition" CatalogName="Main properties" Type="Enum" Value="CheckExists" EnumVariants="CheckExists;CheckAttribute;Checked;Focused" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CompareType" Tooltip="Compare Type" CatalogName="Main properties" Type="Enum" Value="Equal" EnumVariants="Equal;NotEqual;Wildcard;RegEx;LessThan;LessThanEqual;GreaterThan;GreaterThanEqual" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CompareValue" Tooltip="Compare Value" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Any Type" />
                                   <core:Property Name="CompareReply" Tooltip="Compare Reply" CatalogName="Main properties" Type="Expression" Value="$True" EnumVariants="" Visible="True" DefaultValue="$True" ValueType="Any Type" />
                                   <core:Property Name="Attribute" Tooltip="Attribute name" CatalogName="Main properties" Type="Enum" Value="Name" EnumVariants="Name;Text;ID;Index;StartX;StartY;EndX;EndY" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Browser Automation" Name="Browser Automation" ToolboxGridType="List" AliasDescription="Imitate user actions with web browsers and websites: click on buttons, enter texts into edit boxes, get texts from web page, etc">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Launch Browser" InternalName="LaunchBrowser" FriendlyName="Launch Browser" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser chrome W.png" ImageType="LeftImage" Proportional="True" Version="54" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LaunchBrowser{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
                                
    $AppPath          = {{{AppPath}}};
    $URL              = _shield({{{URL}}});
    $AppWaitStartTime = {{{AppWaitStartTime}}};
    $ProfileName      = {{{ProfileName}}}; 
        
        {{{ProcessID}}} = ""; 
            
        $AppPath = ExpandConstFilePath $AppPath $true
      
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>LaunchBrowser</InternalName><InternalType>{{{BrowserType}}}</InternalType><AppPath>$AppPath</AppPath><URL>$URL</URL><AppWaitStart>True</AppWaitStart><AppWaitStartTime>$AppWaitStartTime</AppWaitStartTime><UseCurrentTab>{{{UseCurrentTab}}}</UseCurrentTab><ProfileName>$ProfileName</ProfileName><IsIncognito>{{{IsIncognito}}}</IsIncognito><FullScreen>{{{FullScreen}}}</FullScreen></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        {{{ProcessID}}} = $psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="BrowserType" Tooltip="Type of browser" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="IE;Chrome;Opera;Yandex;Edge;Firefox" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="URL" Tooltip="Command line arguments" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UseCurrentTab" Tooltip="Use current tab for open url" CatalogName="Main properties" Type="Bool" Value="false" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsIncognito" Tooltip="Is incognito" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FullScreen" Tooltip="Start full screen" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProfileName" Caption="Имя профиля" Tooltip="[Текст] Имя профиля, с которым необходимо запустить браузер. Например: &quot;Profile 1&quot;. Если значение пустое, то браузер запускается с профилем по умолчанию" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AppPath" Tooltip="Path to executable" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AppWaitStartTime" Tooltip="Time wait for load tab" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="1" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Connect Browser" InternalName="ConnectBrowser" FriendlyName="Connect Browser" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Attach To Browser.png" ImageType="LeftImage" Proportional="True" Version="38" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ConnectBrowser{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $TabIndex = {{{TabIndex}}};
    $TabName  = {{{TabName}}};  
    $DelayAfter   = {{{DelayAfter}}};  
    $DelayBefore  = {{{DelayBefore}}};
    $WaitTime     = {{{WaitTime}}}; 
        
        {{{ProcessID}}} = "";
                       
        Start-Sleep -Seconds $DelayBefore;    
            
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ConnectBrowser</InternalName><InternalType>{{{BrowserType}}}</InternalType><TabIndex>$TabIndex</TabIndex><TabName>$TabName</TabName><WaitTime>$WaitTime</WaitTime></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
                        
        {{{ProcessID}}} = $psResult.Result; 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="BrowserType" Tooltip="Type of browser" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="IE;Chrome;Opera;Yandex;Edge;Firefox" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TabIndex" Tooltip="Tab index, started 0" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="TabName" Tooltip="Tab name (allowed subname *)" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Internet" InternalName="CloseInternet" FriendlyName="Close Internet" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Close Tab.png" ImageType="LeftImage" Proportional="True" Version="42" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CloseInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $ProcessID = {{{ProcessID}}}; 
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>CloseInternet</InternalName><InternalType>{{{BrowserType}}}</InternalType><ProcessID>$ProcessID</ProcessID><FullClose>{{{FullClose}}}</FullClose></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Required" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="BrowserType" Tooltip="Type of browser" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="IE;Chrome;Opera;Yandex;Edge;Firefox" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FullClose" Tooltip="Full close IE" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Mouse Click" InternalName="MouseClickInternet" FriendlyName="Mouse Click" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Mouse Click.png" ImageType="LeftImage" Proportional="True" Version="130" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MouseClickInternet{{{block_id}}}
{          
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
        $ProcessID            = {{{ProcessID}}};  
        $DelayAfter           = {{{DelayAfter}}};  
        $DelayBefore          = {{{DelayBefore}}};
        $WaitTime             = {{{WaitTime}}}; 
        $OffsetX              = {{{OffsetX}}};
        $OffsetY              = {{{OffsetY}}}; 
        $KeyModifier          = {{{KeyModifier}}};          
        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};
        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};
        $AttemptsSelector2    = {{{AttemptsSelector2}}}; 
        $AppearTypeSelector2  = "{{{AppearTypeSelector2}}}";
        
        Start-Sleep -Seconds $DelayBefore; 
               
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickUI</InternalName><InternalType>Internet</InternalType><Action>{{{Action}}}</Action><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><ProcessID>$ProcessID</ProcessID><KeyModifier>$KeyModifier</KeyModifier><AutoScroll>{{{AutoScroll}}}</AutoScroll><WaitTime>$WaitTime</WaitTime><SimulateMove>{{{SimulateMove}}}</SimulateMove><SimulateMessages>{{{SimulateMessages}}}</SimulateMessages><AbsolutePoint>{{{AbsolutePoint}}}</AbsolutePoint>{{{Selector}}}<DelayBeforeSelector2>$DelayBeforeSelector2</DelayBeforeSelector2><WaitTimeSelector2>$WaitTimeSelector2</WaitTimeSelector2><AttemptsSelector2>$AttemptsSelector2</AttemptsSelector2><AppearTypeSelector2>$AppearTypeSelector2</AppearTypeSelector2>{{{Selector2}}}</block>");                      
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
           
        {{{NewProcessID}}} = $psResult.Result; 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit(); 
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="KeyModifier" Tooltip="KeyModifier" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Custom properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearTypeSelector2" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="Appear" EnumVariants="Appear;Disappear" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBeforeSelector2" Tooltip="DelayBeforeSelector2" CatalogName="Main properties" Type="Expression" Value="2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTimeSelector2" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AttemptsSelector2" Tooltip="AttemptsSelector2" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMessages" Tooltip="Simulate send messages" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AbsolutePoint" Tooltip="Offset is absolute point" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="NewProcessID" Tooltip="" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="NewProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Mouse Over" InternalName="MouseOverInternet" FriendlyName="Mouse Over" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Mouse Over.png" ImageType="LeftImage" Proportional="True" Version="13" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MouseOverInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID    = {{{ProcessID}}}; 
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickUI</InternalName><InternalType>Internet</InternalType><Action>Over</Action><ProcessID>$ProcessID</ProcessID><OverTime>{{{OverTime}}}</OverTime><SimulateMove>{{{SimulateMove}}}</SimulateMove>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="OverTime" Tooltip="Time to keep mouse over element (seconds)" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Mouse Wheel" InternalName="MouseWheelInternet" FriendlyName="Mouse Wheel" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Mouse Wheel.png" ImageType="LeftImage" Proportional="True" Version="18" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MouseWheelInternet{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ProcessID    = {{{ProcessID}}}; 
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickUI</InternalName><InternalType>Internet</InternalType><Action>Wheel</Action><ProcessID>$ProcessID</ProcessID><WheelDelta>{{{WheelDelta}}}</WheelDelta>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="WheelDelta" Tooltip="Time to keep mouse over element (seconds)" CatalogName="Main properties" Type="Expression" Value="-1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Press Keys" InternalName="PressKeysInternet" FriendlyName="Press Keys" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Press Keys.png" ImageType="LeftImage" Proportional="True" Version="47" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PressKeysInternet{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        $KeysValueObj     = {{{KeysValue}}};
        $ProcessID        = {{{ProcessID}}};  
        $InteractiveDelay = {{{InteractiveDelay}}}; 
        $DelayAfter       = {{{DelayAfter}}}; 
        $DelayBefore      = {{{DelayBefore}}}; 
        $WaitTime         = {{{WaitTime}}}; 
        $OnlyText         = ${{{OnlyText}}};  
        $OffsetX          = {{{OffsetX}}};
        $OffsetY          = {{{OffsetY}}};  
        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};
        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};
        $AttemptsSelector2    = {{{AttemptsSelector2}}}; 
        $AppearTypeSelector2  = "{{{AppearTypeSelector2}}}";
        
        Start-Sleep -Seconds $DelayBefore; 
                  
        $KeysValue = _checkpassword($KeysValueObj);
        
        if($OnlyText)
        {
            $KeysValue = "[TEXT]" + $KeysValue;
        }
        
        $val = _shield $KeysValue;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendKeys</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><InteractiveType>{{{InteractiveType}}}</InteractiveType><InteractiveDelay>$InteractiveDelay</InteractiveDelay><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><KeysValue>$val</KeysValue><SelectAll>{{{SelectAll}}}</SelectAll><WaitTime>$WaitTime</WaitTime><SimulateMessages>{{{SimulateMessages}}}</SimulateMessages><SimulateMove>{{{SimulateMove}}}</SimulateMove><AutoScroll>{{{AutoScroll}}}</AutoScroll><AutoDepressing>{{{AutoDepressing}}}</AutoDepressing>{{{Selector}}}<DelayBeforeSelector2>$DelayBeforeSelector2</DelayBeforeSelector2><WaitTimeSelector2>$WaitTimeSelector2</WaitTimeSelector2><AttemptsSelector2>$AttemptsSelector2</AttemptsSelector2><AppearTypeSelector2>$AppearTypeSelector2</AppearTypeSelector2>{{{Selector2}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="KeysValue" Tooltip="What keys to press" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="InteractiveType" Tooltip="Enable interactive send keys" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InteractiveDelay" Tooltip="Interactive delay in msec" CatalogName="Main properties" Type="Expression" Value="100" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SelectAll" Caption="Выбрать все" Tooltip="Перед началом ввода посылать сочетание клавиш &quot;выбрать все&quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OnlyText" Tooltip="Only text" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearTypeSelector2" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="AppearAfter" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBeforeSelector2" Tooltip="DelayBeforeSelector2" CatalogName="Main properties" Type="Expression" Value="2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTimeSelector2" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AttemptsSelector2" Tooltip="AttemptsSelector2" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Custom properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SimulateMessages" Tooltip="Simulate send messages" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoDepressing" Tooltip="AutoDepressing" CatalogName="Custom properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Text" InternalName="GetUITextInternet" FriendlyName="Get Text" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Get Control Text.png" ImageType="LeftImage" Proportional="True" Version="65" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetUITextInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $UITextType    = "{{{UITextType}}}";   
    $ProcessID     = {{{ProcessID}}}; 
    $DelayAfter    = {{{DelayAfter}}}; 
    $DelayBefore   = {{{DelayBefore}}}; 
    $WaitTime      = {{{WaitTime}}};  
    $AttributeName = {{{AttributeName}}};
    
        {{{Result}}} = "";
                      
        Start-Sleep -Seconds $DelayBefore; 
                   
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetUIText</InternalName><ProcessID>$ProcessID</ProcessID><UITextType>$UITextType</UITextType><InternalType>Internet</InternalType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll><AttributeName>$AttributeName</AttributeName>{{{Selector}}}</block>");                                             
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
      
        {{{Result}}} = $psResult.Result;  
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextType" Tooltip="Type get value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Class;InnerHtml;InnerText;Href;Attribute" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="AttributeName" Tooltip="Name attribute" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into (string)" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Text" InternalName="SetUITextInternet" FriendlyName="Set Text" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Set Control Text.png" ImageType="LeftImage" Proportional="True" Version="61" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetUITextInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $UITextValueObj = {{{UITextValue}}};  
    $UITextType  = "{{{UITextType}}}";      
    $ProcessID   = {{{ProcessID}}}; 
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}}; 
    $WaitTime    = {{{WaitTime}}}; 
    $AttributeName = {{{AttributeName}}};
    
        Start-Sleep -Seconds $DelayBefore; 
                          
        $UITextValue = _checkpassword($UITextValueObj);
        
        $val = _shield $UITextValue;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SetUIText</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><UITextType>$UITextType</UITextType><UITextValue>$val</UITextValue><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll><AttributeName>$AttributeName</AttributeName>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        Start-Sleep -Seconds $DelayAfter; 
    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UITextType" Tooltip="Type get value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Class;InnerHtml;InnerText;Href;Attribute" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AttributeName" Tooltip="Name attribute" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Click On Text" InternalName="ClickOnTextInternet" FriendlyName="Click On Text" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Browser Click On Text.png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClickOnTextInternet{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
            
        $ProcessID         = {{{ProcessID}}}; 
        $UITextValue       = {{{UITextValue}}};   
        $TextOccurence_str = {{{TextOccurence}}};
        $DelayAfter        = {{{DelayAfter}}}; 
        $DelayBefore       = {{{DelayBefore}}}; 
        $WaitTime          = {{{WaitTime}}};  
        $KeyModifier       = {{{KeyModifier}}};
        $OffsetX           = {{{OffsetX}}};
        $OffsetY           = {{{OffsetY}}};
        
        Start-Sleep -Seconds $DelayBefore; 
                                   
        $TextOccurence = _toint($TextOccurence_str);
        if($TextOccurence -le 0) { $TextOccurence = 1; }
        
        $val = _shield $UITextValue;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickOnTextInternet</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><Action>{{{Action}}}</Action><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><UITextValue>$val</UITextValue><WaitTime>$WaitTime</WaitTime><TextOccurence>$TextOccurence</TextOccurence><KeyModifier>$KeyModifier</KeyModifier></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TextOccurence" Tooltip="Text Occurence" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="KeyModifier" Tooltip="KeyModifier" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait Element Appear" InternalName="WaitElementAppearInternet" FriendlyName="Wait Element Appear" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Wait Element Appear.png" ImageType="LeftImage" Proportional="True" Version="20" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function WaitElementAppearInternet{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $ProcessID = {{{ProcessID}}};
    $WaitTime  = {{{WaitTime}}};
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><AppearType>{{{AppearType}}}</AppearType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{PassedTime}}} = $psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearType" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="Appear" EnumVariants="Appear;Disappear" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears/disappears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="PassedTime" Tooltip="Variable to save time that passed until element appeared/disappeared or until timeout" CatalogName="Output" Type="Variable" Value="$PassedTime" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait Element Disappear" InternalName="WaitElementDisappearInternet" FriendlyName="Wait Element Disappear" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Wait Element Disappear.png" ImageType="LeftImage" Proportional="True" Version="20" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function WaitElementDisappearInternet{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $ProcessID = {{{ProcessID}}};
    $WaitTime  = {{{WaitTime}}};
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><AppearType>{{{AppearType}}}</AppearType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        {{{PassedTime}}} = $psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="AppearType" Tooltip="What we are waiting for" CatalogName="Main properties" Type="Enum" Value="Disappear" EnumVariants="Appear;Disappear" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears/disappears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="PassedTime" Tooltip="Variable to save time that passed until element appeared/disappeared or until timeout" CatalogName="Output" Type="Variable" Value="$PassedTime" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Element Exists" InternalName="ElementExistsInternet" FriendlyName="Element Exists" PathStyle="{StaticResource BlueLightAllRhombus}" PathStyle_DragThumb="{StaticResource BlueLightAllRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_browser Find Control.png" ImageType="NoImage" Proportional="True" Version="57" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ElementExistsInternet{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $ProcessID = {{{ProcessID}}};
    $WaitTime  = {{{WaitTime}}};
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        
        if(!$psResult.IsError)
        {            
            {{{Result}}} = $true;
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {       
            {{{Result}}} = $false;
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears/disappears (seconds)" CatalogName="Main properties" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result exists" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Elements Count" InternalName="GetElementsCountInternet" FriendlyName="Get Elements Count" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Count Elements.png" ImageType="LeftImage" Proportional="True" Version="63" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetElementsCountInternet{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
    $ProcessID = {{{ProcessID}}};
    $WaitTime  = {{{WaitTime}}};
    
        {{{Result}}} = 0;
             
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetElementsCount</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }              
        
        {{{Result}}} = $psResult.Result; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="List elements" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Run JavaScript" InternalName="RunJavaScript" FriendlyName="Run JavaScript" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Execute JS.png" ImageType="LeftImage" Proportional="True" Version="55" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RunJavaScript{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID      = {{{ProcessID}}};
    $JavaScriptCode = {{{JavaScriptCode}}};
    $CountRetry     = {{{CountRetry}}};
    $DelayAfter     = {{{DelayAfter}}}; 
    $DelayBefore    = {{{DelayBefore}}};  
    $WaitTime       = {{{WaitTime}}};
    
        Start-Sleep -Seconds $DelayBefore; 
     
        $Code = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($JavaScriptCode));
        $JavaScriptCode = _shield($Code);
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RunJavaScript</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID><JavaScriptCode>$JavaScriptCode</JavaScriptCode><CountRetry>$CountRetry</CountRetry><WaitTime>$WaitTime</WaitTime></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        {{{Result}}} = $psResult.Result; 
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="JavaScriptCode" Tooltip="Java script code" CatalogName="Required" Type="Expression" Value="$Code" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CountRetry" Tooltip="Count retry is error" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="String" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Refresh Page" InternalName="RefreshPageInternet" FriendlyName="Refresh Page" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Refresh.png" ImageType="LeftImage" Proportional="True" Version="18" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RefreshPageInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID = {{{ProcessID}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RefreshPageInternet</InternalName><ProcessID>$ProcessID</ProcessID></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Go Back" InternalName="GoBackInternet" FriendlyName="Go Back" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Back.png" ImageType="LeftImage" Proportional="True" Version="4" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GoBackInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID = {{{ProcessID}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GoBackInternet</InternalName><ProcessID>$ProcessID</ProcessID></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Go Forward" InternalName="GoForwardInternet" FriendlyName="Go Forward" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Forward.png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GoForwardInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID = {{{ProcessID}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GoForwardInternet</InternalName><ProcessID>$ProcessID</ProcessID></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Collect Data Internet" InternalName="CollectDataInternet" FriendlyName="Collect Data Internet" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Extract Data.png" ImageType="LeftImage" Proportional="True" Version="67" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CollectDataInternet{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
    $ProcessID   = {{{ProcessID}}};
    $DelayAfter  = {{{DelayAfter}}};  
    $DelayBefore = {{{DelayBefore}}};
    $WaitTime    = {{{WaitTime}}}; 
    $RowsCount   = {{{RowsCount}}};   
    $PageCount   = {{{PageCount}}}; 
    $OffsetX2    = {{{OffsetX2}}};
    $OffsetY2    = {{{OffsetY2}}};
    $DelayPage   = {{{DelayPage}}};
    
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>CollectDataInternet</InternalName><ProcessID>$ProcessID</ProcessID><RowsCount>$RowsCount</RowsCount><InternalType>Internet</InternalType>{{{Selector}}}<WaitTime>$WaitTime</WaitTime><PageCount>$PageCount</PageCount><OffsetX2>$OffsetX2</OffsetX2><OffsetY2>$OffsetY2</OffsetY2><DelayPage>$DelayPage</DelayPage>{{{Selector2}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
                                     
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 next button" CatalogName="Main properties" Type="Selector" Value="" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="OffsetX2" Tooltip="Offset X 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY2" Tooltip="Offset Y 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayPage" Tooltip="Delay page" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PageCount" Tooltip="Count pages" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RowsCount" Tooltip="Exctract limit rows count" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return DataTable results" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Option" InternalName="SelectOptionInternet" FriendlyName="Select Option" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Set Control Text.png" ImageType="LeftImage" Proportional="True" Version="12" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SelectOptionInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $UITextValue = {{{UITextValue}}};        
    $ProcessID   = {{{ProcessID}}};
    $WaitTime    = {{{WaitTime}}};
    
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SelectOption</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID><UITextValue>$UITextValue</UITextValue><WaitTime>$WaitTime</WaitTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Drag And Drop" InternalName="DragAndDropInternet" FriendlyName="Drag And Drop" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Move.png" ImageType="LeftImage" Proportional="True" Version="16" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DragAndDropInternet{{{block_id}}}
{          
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $ProcessID   = {{{ProcessID}}};
    $DelayBefore = {{{DelayBefore}}};
    $DelayAfter  = {{{DelayAfter}}};
    
    $WaitTime  = {{{WaitTime}}};
    $OffsetX   = {{{OffsetX}}};
    $OffsetY   = {{{OffsetY}}};
    $WaitTime2 = {{{WaitTime2}}};
    $OffsetX2  = {{{OffsetX2}}};
    $OffsetY2  = {{{OffsetY2}}};  
    $KeyModifier = {{{KeyModifier}}};
      
        Start-Sleep -Seconds $DelayBefore; 
            
        if($WaitTime1 -gt 0)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime1</WaitTime>{{{Selector}}}</block>");                     
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; } 
        } 
        
        if($WaitTime2 -gt 0)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AppearDisappear</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><AppearType>Appear</AppearType><WaitTime>$WaitTime2</WaitTime>{{{Selector2}}}</block>");                     
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>DragAndDrop</InternalName><InternalType>Desktop</InternalType><ProcessID>$ProcessID</ProcessID><KeyModifier>$KeyModifier</KeyModifier><AutoScroll>{{{AutoScroll}}}</AutoScroll><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY>{{{Selector}}}<OffsetX2>$OffsetX2</OffsetX2><OffsetY2>$OffsetY2</OffsetY2>{{{Selector2}}}</block>");                      
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
          
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector 1 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Selector2" Tooltip="Selector 2 helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="KeyModifier" Tooltip="KeyModifier" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time 1 to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X 1 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y 1 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime2" Tooltip="Maximum time 2 to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX2" Tooltip="Offset X 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY2" Tooltip="Offset Y 2 left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Highlight Element" InternalName="HighlightElementInternet" FriendlyName="Highlight Element" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Eye.png" ImageType="LeftImage" Proportional="True" Version="12" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HighlightElementInternet{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $ProcessID      = {{{ProcessID}}};
    $HighlightType  = "{{{HighlightType}}}";
    $HighlightColor = {{{HighlightColor}}};
    $HighlightTime  = {{{HighlightTime}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>HighlightElement</InternalName><ProcessID>$ProcessID</ProcessID><HighlightType>$HighlightType</HighlightType><HighlightColor>$HighlightColor</HighlightColor><HighlightTime>$HighlightTime</HighlightTime><AutoScroll>{{{AutoScroll}}}</AutoScroll>{{{Selector}}}</block>");                                             
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoScroll" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="HighlightType" Tooltip="HighlightType" CatalogName="Main properties" Type="Enum" Value="LastElement" EnumVariants="LastElement;FullPath" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="HighlightColor" Tooltip="HighlightColor" CatalogName="Main properties" Type="Expression" Value="&quot;#00FF00&quot;" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="HighlightTime" Tooltip="HighlightTime" CatalogName="Main properties" Type="Expression" Value="1000" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Image" InternalName="SaveImageInternet" FriendlyName="Save Image" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser ImageExport.png" ImageType="LeftImage" Proportional="True" Version="30" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveImageInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID = {{{ProcessID}}};
    $FileName  = {{{FileName}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SaveImage</InternalName><ProcessID>$ProcessID</ProcessID><TypeMechanizm>{{{TypeMechanizm}}}</TypeMechanizm>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        if($FileName.Length -eq 0)
        {
            $FileName = $psResult.Result; 
        } 
        else
        {   
            [System.IO.File]::Delete($FileName);
            [System.IO.File]::Move($psResult.Result, $FileName);
        }       
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="TypeMechanizm" Tooltip="Type mechanizm" CatalogName="Main properties" Type="Enum" Value="Download" EnumVariants="Direct;Download;Screenshot" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FileName" Tooltip="File name for save image" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Copy To Clipboard" InternalName="CopyToClipboardInternet" FriendlyName="Copy To Clipboard" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Copy To Clipboard.png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CopyToClipboardInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ProcessID = {{{ProcessID}}};
    $UITextType = "{{{UITextType}}}";
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ProcessClipboard</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><ClipboardType>{{{ClipboardType}}}</ClipboardType><UITextType>$UITextType</UITextType>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ClipboardType" Tooltip="What action to perform" CatalogName="Main properties" Type="Enum" Value="Copy" EnumVariants="Copy;Paste" Visible="False" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UITextType" Tooltip="Type get value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Class;InnerHtml;InnerText;Href" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Paste From Clipboard" InternalName="PasteFromClipboardInternet" FriendlyName="Paste From Clipboard" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Paste From Clipboard.png" ImageType="LeftImage" Proportional="True" Version="5" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PasteFromClipboardInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ProcessID = {{{ProcessID}}};
    $UITextType = "{{{UITextType}}}";
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ProcessClipboard</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Internet</InternalType><ClipboardType>{{{ClipboardType}}}</ClipboardType><UITextType>$UITextType</UITextType>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ClipboardType" Tooltip="What action to perform" CatalogName="Main properties" Type="Enum" Value="Paste" EnumVariants="Copy;Paste" Visible="False" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UITextType" Tooltip="Type get value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Class;InnerHtml;InnerText;Href" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Url Tab" InternalName="GetUrlTabInternet" FriendlyName="Get Url Tab" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Execute JS.png" ImageType="LeftImage" Proportional="True" Version="4" TextColor="#FFFFFFFF" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetUrlTabInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID      = {{{ProcessID}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetUrlTab</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        $arr = $psResult.Result.Split([string[]]@("|||"), [System.StringSplitOptions]::RemoveEmptyEntries);
               
        {{{TabUrl}}} = $arr[0]; 
        {{{TabTitle}}} = $arr[1];
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="TabUrl" Tooltip="Return url tab" CatalogName="Output" Type="Variable" Value="$TabUrl" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TabTitle" Tooltip="Return title tab" CatalogName="Output" Type="Variable" Value="$TabTitle" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Cookies" InternalName="GetCookies" FriendlyName="Get Cookies" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Cookie.png" ImageType="LeftImage" Proportional="True" Version="17" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetCookies{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID   = {{{ProcessID}}};
    $ControlMode = "{{{ControlMode}}}";
    $Url         = {{{Url}}};
    
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetCookies</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID><ControlMode>$ControlMode</ControlMode><URL>$Url</URL></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ControlMode" Tooltip="Control mode" CatalogName="Main properties" Type="Enum" Value="Tab" EnumVariants="Tab;Url;All" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Url" Tooltip="Url" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$ListCookies" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Cookies" InternalName="SetCookies" FriendlyName="Set Cookies" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Cookie.png" ImageType="LeftImage" Proportional="True" Version="22" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetCookies{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID   = {{{ProcessID}}};
    $ListCookies = {{{ListCookies}}};
    $Url         = {{{Url}}};
    
        $bincookies    = $__BinFormatter.tobin($ListCookies);
        $bincookiesstr = _shield($bincookies);      
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SetCookies</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID><URL>$Url</URL><BinCookies>$bincookiesstr</BinCookies></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="Url" Tooltip="Url" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Cookies" InternalName="RemoveCookies" FriendlyName="Remove Cookies" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Cookie.png" ImageType="LeftImage" Proportional="True" Version="4" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveCookies{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID   = {{{ProcessID}}};
    $ListCookies = {{{ListCookies}}};
    $Url         = {{{Url}}};
    
        $bincookies    = $__BinFormatter.tobin($ListCookies);
        $bincookiesstr = _shield($bincookies);      
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RemoveCookies</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID><URL>$Url</URL><BinCookies>$bincookiesstr</BinCookies></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="Url" Tooltip="Url" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Scroll Page" InternalName="ScrollPageInternet" FriendlyName="Scroll Page" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Execute JS.png" ImageType="LeftImage" Proportional="True" Version="16" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ScrollPageInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID   = {{{ProcessID}}};
    $str_OffsetX = {{{OffsetX}}};        
    $str_OffsetY = {{{OffsetY}}};
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}};  
    
        Start-Sleep -Seconds $DelayBefore; 
                 
        $tempint = 0;
        $OffsetX = 0;
        if([int]::TryParse($str_OffsetX, [ref] $tempint)) { $OffsetX = $tempint; }
        $OffsetY = 0;
        if([int]::TryParse($str_OffsetY, [ref] $tempint)) { $OffsetY = $tempint; }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ScrollPage</InternalName><InternalType>Internet</InternalType><ProcessID>$ProcessID</ProcessID><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Assert Element" InternalName="AssertElementInternet" FriendlyName="Assert Element" PathStyle="{StaticResource BlueLightAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLightAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Get Control Text.png" ImageType="LeftImage" Proportional="True" Version="12" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AssertElementInternet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $UITextType   = "{{{UITextType}}}";
    $ProcessID    = {{{ProcessID}}}; 
    $Сondition    = "{{{Сondition}}}"; 
    $CompareType  = "{{{CompareType}}}";  
    $CompareValue = {{{CompareValue}}};
    $CompareReply = {{{CompareReply}}};  
    $Attribute    = "{{{Attribute}}}"; 
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}};
    $WaitTime     = {{{WaitTime}}};
    
        
        Start-Sleep -Seconds $DelayBefore; 
                    
        $blockData                 = @{};
        $blockData["Сondition"]    = $Сondition;
        $blockData["CompareType"]  = $CompareType;
        $blockData["CompareValue"] = $CompareValue;
        $blockData["CompareReply"] = $CompareReply;
        $blockData["Attribute"]    = $Attribute; 
        
        $binblockdata  = $__BinFormatter.tobin($blockData);
        $binblockdatastr = _shield($binblockdata);
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AssertElement</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><BlockData>$binblockdatastr</BlockData><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
      
        $CompareResult = $psResult.Result; 
        
        
                               
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="Сondition" Tooltip="Сondition" CatalogName="Main properties" Type="Enum" Value="CheckExists" EnumVariants="CheckExists;CheckAttribute;Checked;Focused;DocumentLoaded" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CompareType" Tooltip="Compare Type" CatalogName="Main properties" Type="Enum" Value="Equal" EnumVariants="Equal;NotEqual;Wildcard;RegEx;LessThan;LessThanEqual;GreaterThan;GreaterThanEqual" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CompareValue" Tooltip="Compare Value" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Any Type" />
                                   <core:Property Name="CompareReply" Tooltip="Compare Reply" CatalogName="Main properties" Type="Expression" Value="$True" EnumVariants="" Visible="True" DefaultValue="$True" ValueType="Any Type" />
                                   <core:Property Name="Attribute" Tooltip="Attribute name" CatalogName="Main properties" Type="Enum" Value="Name" EnumVariants="Name;Text;ID;Index;InnerText;ParentText;XPath;StartX;StartY;EndX;EndY" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="HTTP" Name="HTTP" ToolboxGridType="List" AliasDescription="Send HTTP requests via RESTful API, use SOAP, work with cookies or proxy servers">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Download File" InternalName="DownloadFile" FriendlyName="Download File" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="79">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DownloadFile{{{block_id}}}
{ 
    try
    {
    Add-Type -AssemblyName System.Web      
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Url             = {{{Url}}};
    $FileName        = {{{FileName}}}; 
    $AutoExtension   = ${{{AutoExtension}}}; 
    $ListHeaders     = {{{ListHeaders}}}; 
    $ListCookies     = {{{ListCookies}}};
    $BasicUsername   = {{{BasicUsername}}};
    $BasicPasswordObj   = {{{BasicPassword}}};  
    $Timeout         = {{{Timeout}}};
    $AlternateMethod = ${{{AlternateMethod}}};
    
        $FileName = ExpandConstFilePath $FileName
              
        $Timeout = $Timeout * 1000;
             
        $BasicPassword = _checkpassword($BasicPasswordObj); 
       
        if($AlternateMethod)
        {
            $Wcl = [PSHelpers.ClassWebClient]::new(); 
            
            $Wcl.Timeout = $Timeout;
            
            if("{{{Encoding}}}" -eq "UTF8") { $Wcl.Encoding = [System.Text.Encoding]::UTF8; }
            else { $Wcl.Encoding = [System.Text.Encoding]::Default; }
            
            if("{{{UserAgent}}}" -eq "Chrome") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::ChromeUserAgent();  }
            elseif("{{{UserAgent}}}" -eq "IE") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::IEUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Opera") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::OperaUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Firefox") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::FirefoxUserAgent(); }
              
            if($ListHeaders.GetType().Name -eq "Hashtable")
            {                         
                foreach($key in $ListHeaders.Keys)
                {       
                    $Wcl.Headers.Add($key, $ListHeaders[$key]);
                }
            } 
            
            if($BasicUsername.Length -gt 0 -and $BasicPassword.Length -gt 0)
            {
                $Wcl.Headers[[System.Net.HttpRequestHeader]::Authorization] = "Basic " + [Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($BasicUsername + ":" + $BasicPassword));
            } 
            else
            {
                $Wcl.UseDefaultCredentials = $true;
            }
                             
            $FileNameTemp = [System.IO.Path]::ChangeExtension($FileName, ".tmp~");
            
            $Wcl.MyDownloadFile($Url, $FileNameTemp);
            {{{ResultStatusCode}}}   = $Wcl.StatusCode;
            $errorstring  = $Wcl.ErrorString;
            $Wcl.Dispose();
            
            if($errorstring.Length -gt 0)
            {
                $__Error.Exception($errorstring);
                return;
            }
        }
        else
        {        
            if(!$script:__InternalBrowser)
            {
                $script:__InternalBrowser            = [xNet.HttpRequest]::new();
                $script:__InternalBrowser.Cookies    = [xNet.CookieStorage]::new();
                $script:__InternalBrowser.IsUseTls12 = ${{{UseTls12}}}; 
            }
            
            if("{{{UserAgent}}}" -eq "Chrome") {$script:__InternalBrowser.UserAgent = [xNet.Http]::ChromeUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "IE") { $script:__InternalBrowser.UserAgent = [xNet.Http]::IEUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Opera") { $script:__InternalBrowser.UserAgent = [xNet.Http]::OperaUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Firefox") { $script:__InternalBrowser.UserAgent = [xNet.Http]::FirefoxUserAgent(); }
                  
            $script:__InternalBrowser.AddHeader([xNet.HttpHeader]::AcceptLanguage, "ru,en;q=0.9");
                          
            $script:__InternalBrowser.ConnectTimeout = $Timeout; 
            $script:__InternalBrowser.ReadWriteTimeout = $Timeout * 10;
            
            if($ListHeaders.GetType().Name -eq "Hashtable")
            {                         
                foreach($key in $ListHeaders.Keys)
                {       
                    $script:__InternalBrowser.AddHeader($key, $ListHeaders[$key]);
                }
            } 
            
            if($ListCookies.GetType().Name.Contains("List"))
            {                         
                $script:__InternalBrowser.Cookies.SetListCookies($ListCookies);
            }
            
            if($BasicUsername.Length -gt 0)
            {
                $script:__InternalBrowser.Username = $BasicUsername;
            } 
            
            if($BasicPassword.Length -gt 0)
            {
                $script:__InternalBrowser.Password = $BasicPassword;
            }
            
            $response           = $script:__InternalBrowser.Get($Url);
            if($AutoExtension)
            {
                $cpString           = $response[[xNet.HttpHeader]::ContentDisposition];
                $contentDisposition = [System.Net.Mime.ContentDisposition]::new($cpString); 
                $webname            = $contentDisposition.FileName;
                $FileName           = [System.IO.Path]::ChangeExtension($FileName, [System.IO.Path]::GetExtension($webname));
            }            
            
            $FileNameTemp = [System.IO.Path]::ChangeExtension($FileName, ".tmp~");
            
            $response.ToFile($FileNameTemp);
        }  
                          
        [System.IO.File]::Delete($FileName);
        [System.IO.File]::Move($FileNameTemp, $FileName);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Url" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AutoExtension" Tooltip="Auto extension" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UserAgent" Tooltip="Use internal useragent" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="Chrome;IE;Opera;Firefox" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseTls12" Tooltip="Use Tls21 for SSL" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ListHeaders" Tooltip="HashTable additional headers for post" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="BasicUsername" Tooltip="Username for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BasicPassword" Tooltip="Password  for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="5" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AlternateMethod" Tooltip="Alternate method" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ResultStatusCode" Tooltip="Result Status Code" CatalogName="Output" Type="Variable" Value="$ResultStatusCode" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Download Page" InternalName="DownloadPage" FriendlyName="Download Page" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="74">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DownloadPage{{{block_id}}}
{   
    try
    {
    Add-Type -AssemblyName System.Web   
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $Url             = {{{Url}}}; 
    $ListHeaders     = {{{ListHeaders}}}; 
    $ListCookies     = {{{ListCookies}}};
    $BasicUsername   = {{{BasicUsername}}};
    $BasicPasswordObj   = {{{BasicPassword}}}; 
    $Timeout         = {{{Timeout}}};
    $AlternateMethod = ${{{AlternateMethod}}};
    
        $Timeout = $Timeout * 1000;  
        
        $BasicPassword = _checkpassword($BasicPasswordObj);
        
        if($AlternateMethod)
        {
            $Wcl         = [PSHelpers.ClassWebClient]::new();                
            $Wcl.Timeout = $Timeout;
            
            if("{{{Encoding}}}" -eq "UTF8") { $Wcl.Encoding = [System.Text.Encoding]::UTF8; }
            else { $Wcl.Encoding = [System.Text.Encoding]::Default; }
            
            if("{{{UserAgent}}}" -eq "Chrome") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::ChromeUserAgent();  }
            elseif("{{{UserAgent}}}" -eq "IE") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::IEUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Opera") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::OperaUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Firefox") { $Wcl.Headers[[System.Net.HttpRequestHeader]::UserAgent] = [xNet.Http]::FirefoxUserAgent(); }
              
            if($ListHeaders.GetType().Name -eq "Hashtable")
            {                         
                foreach($key in $ListHeaders.Keys)
                {       
                    $Wcl.Headers.Add($key, $ListHeaders[$key]);
                }
            } 
            
            if($BasicUsername.Length -gt 0 -and $BasicPassword.Length -gt 0)
            {
                $Wcl.Headers[[System.Net.HttpRequestHeader]::Authorization] = "Basic " + [Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($BasicUsername + ":" + $BasicPassword));
            } 
            else
            {
                $Wcl.UseDefaultCredentials = $true;
            }
            
            $clientresult = $Wcl.MyDownloadString($Url);
            {{{ResultStatusCode}}}   = $Wcl.StatusCode;
            $errorstring  = $Wcl.ErrorString;
            $Wcl.Dispose();
            
            if($errorstring.Length -gt 0)
            {
                $__Error.Exception($errorstring);
                return;
            }
            
            {{{Result}}} = $clientresult;  
        }
        else
        {     
            if(!$script:__InternalBrowser)
            {
                $script:__InternalBrowser            = [xNet.HttpRequest]::new();
                $script:__InternalBrowser.Cookies    = [xNet.CookieStorage]::new();
                $script:__InternalBrowser.IsUseTls12 = ${{{UseTls12}}}; 
            }
            
            if("{{{Encoding}}}" -eq "UTF8") { $script:__InternalBrowser.CharacterSet = [System.Text.Encoding]::UTF8; }
            else { $script:__InternalBrowser.CharacterSet = [System.Text.Encoding]::Default; }
                         
            if("{{{UserAgent}}}" -eq "Chrome") {$script:__InternalBrowser.UserAgent = [xNet.Http]::ChromeUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "IE") { $script:__InternalBrowser.UserAgent = [xNet.Http]::IEUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Opera") { $script:__InternalBrowser.UserAgent = [xNet.Http]::OperaUserAgent(); }
            elseif("{{{UserAgent}}}" -eq "Firefox") { $script:__InternalBrowser.UserAgent = [xNet.Http]::FirefoxUserAgent(); }
                  
            $script:__InternalBrowser.AddHeader([xNet.HttpHeader]::AcceptLanguage, "ru,en;q=0.9");
                          
            $script:__InternalBrowser.ConnectTimeout = $Timeout; 
            $script:__InternalBrowser.ReadWriteTimeout = $Timeout * 10;
            
            if($ListHeaders.GetType().Name -eq "Hashtable")
            {                         
                foreach($key in $ListHeaders.Keys)
                {       
                    $script:__InternalBrowser.AddHeader($key, $ListHeaders[$key]);
                }
            } 
            
            if($ListCookies.GetType().Name.Contains("List"))
            {                         
                $script:__InternalBrowser.Cookies.SetListCookies($ListCookies);
            }        
             
            if($BasicUsername.Length -gt 0)
            {
                $script:__InternalBrowser.Username = $BasicUsername;
            } 
            
            if($BasicPassword.Length -gt 0)
            {
                $script:__InternalBrowser.Password = $BasicPassword;
            }
            
            {{{Result}}} = $script:__InternalBrowser.Get($Url).ToString();  
            {{{ResultStatusCode}}} = [int]$script:__InternalBrowser.Response.StatusCode; 
        }
    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }   
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Url" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding download page" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="UTF8;Ansi" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UserAgent" Tooltip="Use internal useragent" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="Chrome;IE;Opera;Firefox" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseTls12" Tooltip="Use Tls21 for SSL" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ListHeaders" Tooltip="HashTable additional headers for post" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="BasicUsername" Tooltip="Username for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BasicPassword" Tooltip="Password  for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="5" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AlternateMethod" Tooltip="Alternate method" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultStatusCode" Tooltip="Result Status Code" CatalogName="Output" Type="Variable" Value="$ResultStatusCode" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Internal Browser Request" InternalName="InternalBrowserRequest" FriendlyName="Internal Browser Request" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="129">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InternalBrowserRequest{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Url           = {{{Url}}}; 
    $Encoding      = "{{{Encoding}}}";
    $UserAgent     = "{{{UserAgent}}}"; 
    $ListParams    = {{{ListParams}}};
    $ListHeaders   = {{{ListHeaders}}}; 
    $ListCookies   = {{{ListCookies}}};
    $ListFiles     = {{{ListFiles}}};
    $BasicUsername = {{{BasicUsername}}};
    $BasicPasswordObj = {{{BasicPassword}}};
    $PostBody      = {{{PostBody}}};
    $TypeRequest   = "{{{TypeRequest}}}"; 
    $AcceptFormat  = "{{{AcceptFormat}}}";
    $BodyFormat    = "{{{BodyFormat}}}";  
    $Timeout       = {{{Timeout}}};
    
        $resultrequest = ""; 
        
        $Timeout = $Timeout * 1000;
            
        $BasicPassword = _checkpassword($BasicPasswordObj); 
            
        if(!$script:__InternalBrowser)
        {
            $script:__InternalBrowser            = [xNet.HttpRequest]::new();
            $script:__InternalBrowser.Cookies    = [xNet.CookieStorage]::new();
            $script:__InternalBrowser.IsUseTls12 = ${{{UseTls12}}}; 
        }
        
        if($Encoding -eq "UTF8") { $script:__InternalBrowser.CharacterSet = [System.Text.Encoding]::UTF8; }
        else { $script:__InternalBrowser.CharacterSet = [System.Text.Encoding]::Default; }
                     
        if($UserAgent -eq "Chrome") {$script:__InternalBrowser.UserAgent = [xNet.Http]::ChromeUserAgent(); }
        elseif($UserAgent -eq "IE") { $script:__InternalBrowser.UserAgent = [xNet.Http]::IEUserAgent(); }
        elseif($UserAgent -eq "Opera") { $script:__InternalBrowser.UserAgent = [xNet.Http]::OperaUserAgent(); }
        elseif($UserAgent -eq "Firefox") { $script:__InternalBrowser.UserAgent = [xNet.Http]::FirefoxUserAgent(); }
              
        $script:__InternalBrowser.AddHeader([xNet.HttpHeader]::AcceptLanguage, "ru,en;q=0.9"); 
                        
        $script:__InternalBrowser.ConnectTimeout = $Timeout; 
        $script:__InternalBrowser.ReadWriteTimeout = $Timeout * 10;
        
        if($AcceptFormat -eq "Json")
        {
            $script:__InternalBrowser.AddHeader([xNet.HttpHeader]::Accept, "application/json");
        }
        elseif($AcceptFormat -eq "Xml")
        {
            $script:__InternalBrowser.AddHeader([xNet.HttpHeader]::Accept, "application/xml");
        }

        if($ListParams.GetType().Name -eq "Hashtable")
        {        
            if($TypeRequest -eq "Get" -Or $TypeRequest -eq "Options") 
            {
                foreach($key in $ListParams.Keys)
                {       
                    $script:__InternalBrowser.AddUrlParam($key, $ListParams[$key]);
                }
            }
            else
            {      
                if($BodyFormat -eq "MultipartForm")
                {
                    foreach($key in $ListParams.Keys)
                    {       
                        $script:__InternalBrowser.AddField($key, $ListParams[$key]);
                    }
                }
                else
                {
                    foreach($key in $ListParams.Keys)
                    {       
                        $script:__InternalBrowser.AddParam($key, $ListParams[$key]);
                    }
                }
            }    
        } 
        
        if($ListFiles.GetType().Name -eq "Hashtable")
        {     
            if($BodyFormat -eq "MultipartForm")
            {            
                foreach($key in $ListFiles.Keys)
                {       
                    $script:__InternalBrowser.AddFile($key, $ListFiles[$key]);
                }
            }
        }
        
        if($ListHeaders.GetType().Name -eq "Hashtable")
        {                         
            foreach($key in $ListHeaders.Keys)
            {       
                $script:__InternalBrowser.AddHeader($key, $ListHeaders[$key]);
            }
        } 
        
        if($ListCookies.GetType().Name.Contains("List"))
        {                         
            $script:__InternalBrowser.Cookies.SetListCookies($ListCookies);
        }
        
        if($BasicUsername.Length -gt 0)
        {
            $script:__InternalBrowser.Username = $BasicUsername;
        } 
        
        if($BasicPassword.Length -gt 0)
        {
            $script:__InternalBrowser.Password = $BasicPassword;
        }  
        
        $bodyContent = $null;
        if($PostBody.Length -gt 0)
        {
            $bodyContent = [xNet.StringContent]::new($PostBody);
            if($BodyFormat -eq "Json")
            {
                $bodyContent.ContentType = "application/json";
            }
            elseif($BodyFormat -eq "Xml")
            {
                $bodyContent.ContentType = "application/xml";
            }
            elseif($BodyFormat -eq "FormUrlencoded")
            {
                $bodyContent.ContentType = "application/x-www-form-urlencoded";
            }
        }
           
        if($TypeRequest -eq "Get")
        {
            $resultrequest = $script:__InternalBrowser.Get($Url).ToString();
        }
        elseif($TypeRequest -eq "Options")
        {
            $resultrequest = $script:__InternalBrowser.Options($Url).ToString();
        }
        elseif($TypeRequest -eq "Post")
        {
            if($null -ne $bodyContent)
            {      
                $resultrequest = $script:__InternalBrowser.Post($Url, $bodyContent).ToString();
            }
            else
            {
                $resultrequest = $script:__InternalBrowser.Post($Url).ToString();
            }
        }
        elseif($TypeRequest -eq "Put")
        {
            if($null -ne $bodyContent)
            {      
                $resultrequest = $script:__InternalBrowser.Put($Url, $bodyContent).ToString();
            }
            else
            {
                $resultrequest = $script:__InternalBrowser.Put($Url).ToString();
            }
        }
        elseif($TypeRequest -eq "Delete")
        {
            if($null -ne $bodyContent)
            {      
                $resultrequest = $script:__InternalBrowser.Delete($Url, $bodyContent).ToString();
            }
            else
            {
                $resultrequest = $script:__InternalBrowser.Delete($Url).ToString();
            }
        }
        
        {{{Result}}} = $resultrequest; 
        {{{ResultCookies}}} = $script:__InternalBrowser.Cookies.GetListCookies();
        {{{ResultStatusCode}}} = [int]$script:__InternalBrowser.Response.StatusCode; 
        {{{ResultHeaders}}} = $script:__InternalBrowser.Response.GetHeaders(); 
               
    }
    catch 
    {     
        $script:ResultStatusCode = 404;
        try
        {
            $message = $_.Exception.Message.ToLower();
            if($message.Contains("timeout"))
            {
                $script:ResultStatusCode = 408;    
            }
        }
        catch{}  
        try
        {
            $value = [int]$script:__InternalBrowser.Response.StatusCode;
            if($value -gt 0) { $script:ResultStatusCode = $value; }
        }
        catch{}
        
        $__Error.ExceptionCatch($_);
        return;
    }  
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Url" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeRequest" Tooltip="Type Request" CatalogName="Main properties" Type="Enum" Value="Get" EnumVariants="Get;Post;Put;Delete;Options" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Encoding" Tooltip="Encoding download page" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="UTF8;Ansi" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UserAgent" Tooltip="Use internal useragent" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="Chrome;IE;Opera;Firefox" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseTls12" Tooltip="Use Tls21 for SSL" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AcceptFormat" Tooltip="Accept format" CatalogName="Main properties" Type="Enum" Value="Any" EnumVariants="Any;Json;Xml" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ListHeaders" Tooltip="HashTable additional headers for post" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="ListParams" Tooltip="HashTable params for request" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ListFiles" Tooltip="HashTable files for request" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="BasicUsername" Tooltip="Username for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BasicPassword" Tooltip="Password  for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="PostBody" Tooltip="Post Body" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BodyFormat" Tooltip="Body format" CatalogName="Main properties" Type="Enum" Value="Any" EnumVariants="Any;Json;Xml;FormUrlencoded;MultipartForm" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="5" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return page text" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultStatusCode" Tooltip="Result Status Code" CatalogName="Output" Type="Variable" Value="$ResultStatusCode" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResultHeaders" Tooltip="Result list headers" CatalogName="Output" Type="Variable" Value="$DictHeaders" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ResultCookies" Tooltip="Result list cookies" CatalogName="Output" Type="Variable" Value="$ListCookies" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rest Client" InternalName="RestClient" FriendlyName="Rest Client" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="27">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RestClient{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Url             = {{{Url}}};
    $TypeRequest     = "{{{TypeRequest}}}";
    $Encoding        = "{{{Encoding}}}";
    $BasicUsername   = {{{BasicUsername}}};
    $BasicPasswordObj   = {{{BasicPassword}}};
    $PreAuthenticate = ${{{PreAuthenticate}}};
    $AcceptHeader    = {{{AcceptHeader}}};
    $ListParams      = {{{ListParams}}};
    $ListHeaders     = {{{ListHeaders}}};
    $ListCookies     = {{{ListCookies}}};
    $ListFiles       = {{{ListFiles}}};
    $ContentBody     = {{{ContentBody}}};
    $ContentType     = {{{ContentType}}}; 
    $Timeout         = {{{Timeout}}};
    
        {AddTypesHttpHelpers}
        
        $resultrequest = ""; 
        
        $Timeout = $Timeout * 1000;
            
        $BasicPassword = _checkpassword($BasicPasswordObj); 
            
        if(!$script:__HttpHelpersClient)
        {
            $script:__HttpHelpersClient  = [HttpHelpers.ClassMain]::new();
        }
        
        if($Encoding -eq "UTF8") { $script:__HttpHelpersClient.Encoding = [System.Text.Encoding]::UTF8; }
        else { $script:__HttpHelpersClient.Encoding = [System.Text.Encoding]::Default; }
                     

        $script:__HttpHelpersClient.BasicUsername = $BasicUsername;
        $script:__HttpHelpersClient.BasicPassword = $BasicPassword;    
        $script:__HttpHelpersClient.Timeout = $Timeout;
        
        $script:__HttpHelpersClient.AcceptHeader = $AcceptHeader;
        $script:__HttpHelpersClient.ListParams = $ListParams;
        $script:__HttpHelpersClient.ListHeaders = $ListHeaders;
        $script:__HttpHelpersClient.ListCookies = $ListCookies;
        $script:__HttpHelpersClient.ListFiles = $ListFiles;
        $script:__HttpHelpersClient.ContentBody = $ContentBody; 
        $script:__HttpHelpersClient.ContentType = $ContentType;
                   
        $httpresult = $script:__HttpHelpersClient.Execute($Url, $TypeRequest);
        {{{ResultStatusCode}}} = $httpresult.StatusCode; 
        if($httpresult.IsError) { $__Error.Exception($httpresult.ErrorMessage); return; }
       
        {{{Result}}} = $httpresult.Content; 
        {{{ResultCookies}}} = $httpresult.Cookies; 
        {{{ResultHeaders}}} = $httpresult.Headers; 
               
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    } 
    finally
    {
        {AddTypesHttpHelpersEnd}
    }  
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Url" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeRequest" Tooltip="Type Request" CatalogName="Main properties" Type="Enum" Value="Get" EnumVariants="Get;Post;Put;Delete;Head;Options;Patch;Merge;Copy;Search" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Encoding" Tooltip="Encoding download page" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="UTF8;Ansi" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="BasicUsername" Tooltip="Username for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BasicPassword" Tooltip="Password  for basic auth" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="PreAuthenticate" Tooltip="PreAuthenticate" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AcceptHeader" Tooltip="Accept header" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ListParams" Tooltip="HashTable params for request" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ListHeaders" Tooltip="HashTable additional headers for post" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="ListFiles" Tooltip="HashTable files for request" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ContentBody" Tooltip="Content Body" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ContentType" Tooltip="Content Type" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="5" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return page text" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultStatusCode" Tooltip="Result Status Code" CatalogName="Output" Type="Variable" Value="$ResultStatusCode" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResultHeaders" Tooltip="Result list headers" CatalogName="Output" Type="Variable" Value="$DictHeaders" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ResultCookies" Tooltip="Result list cookies" CatalogName="Output" Type="Variable" Value="$ListCookies" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Yandex Links" InternalName="GetYandexLinks" FriendlyName="GetYandexLinks" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="221">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetYandexLinks{{{block_id}}}
{        
	try
	{
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $SearchText       = {{{SearchText}}};
    $PageMax          = {{{PageMax}}};
    $Timeout          = {{{Timeout}}};  
    $COMvisible       = ${{{COMvisible}}}; 
    $RecognizeCaptcha = ${{{RecognizeCaptcha}}};
          
        $cls      = [PSHelpers.ClassSHDocVw]::new();
        $psResult = $cls.GetYandexLinks($SearchText, $PageMax, $Timeout, $COMvisible, $RecognizeCaptcha); 
        if($psResult.IsError)
        {       
            $__Error.Exception($psResult.ErrorMessage);
            return;
        } 
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
             
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SearchText" Tooltip="Search text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageMax" Tooltip="Max pages" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout for request" CatalogName="Main properties" Type="Expression" Value="7000" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="COMvisible" Tooltip="COM IE visible" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="RecognizeCaptcha" Tooltip="Recognize captcha" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="List urls" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Google Links" InternalName="GetGoogleLinks" FriendlyName="Get Google Links" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="68">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetGoogleLinks{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                
    $SearchText = {{{SearchText}}};
    $PageMax    = {{{PageMax}}};
    $Timeout    = {{{Timeout}}};  
    $COMvisible = ${{{COMvisible}}};
    $RecognizeCaptcha = ${{{RecognizeCaptcha}}};
    
        $cls = [PSHelpers.ClassSHDocVw]::new();
        $psResult = $cls.GetGoogleLinks($SearchText, $PageMax, $Timeout, $COMvisible, $RecognizeCaptcha);   
        if($psResult.IsError)
        {       
            $__Error.Exception($psResult.ErrorMessage);
            return;
        } 
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
             
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SearchText" Tooltip="Search text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageMax" Tooltip="Max pages" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout for request" CatalogName="Main properties" Type="Expression" Value="7000" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="COMvisible" Tooltip="COM IE visible" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="RecognizeCaptcha" Tooltip="Recognize captcha" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="List urls" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Links" InternalName="GetLinks" FriendlyName="Get Links" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="99">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetLinks{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    {{{Result}}} = New-Object Collections.Generic.List[string];
    
    $urls      = New-Object Collections.Generic.List[string]; 
    $checkurls = New-Object Collections.Generic.List[string];
    
    $MainUrl = {{{Url}}};
    $MaxEntry = {{{MaxEntry}}}; 
        
        if(!$script:__InternalBrowser)
        {
            $script:__InternalBrowser            = [xNet.HttpRequest]::new();
            $script:__InternalBrowser.Cookies    = [xNet.CookieStorage]::new();
            $script:__InternalBrowser.IsUseTls12 = ${{{UseTls12}}}; 
        }
        
        if("{{{Encoding}}}" -eq "UTF8") { $script:__InternalBrowser.CharacterSet = [System.Text.Encoding]::UTF8; }
        else { $script:__InternalBrowser.CharacterSet = [System.Text.Encoding]::Default; }
                     
        if("{{{UserAgent}}}" -eq "Chrome") {$script:__InternalBrowser.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36"; }
        elseif("{{{UserAgent}}}" -eq "IE") { $script:__InternalBrowser.UserAgent = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)"; }
        elseif("{{{UserAgent}}}" -eq "Opera") { $script:__InternalBrowser.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36 OPR/56.0.3051.52"; }
        elseif("{{{UserAgent}}}" -eq "Firefox") { $script:__InternalBrowser.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0"; }
                       
        $__Error.Detailed("Download page $MainUrl");

        $PageText = $script:__InternalBrowser.Get($MainUrl).ToString(); 
        
        {{{Result}}}.Add($MainUrl);
        
        $Document = [HtmlAgilityPack.HtmlDocument]::new(); 
        
        $Document.LoadHtml($PageText);
        $nodesA = $Document.DocumentNode.SelectNodes(".//a");
        if($nodesA -eq $null) { return; }
        if($nodesA.Count -eq 0) { return; }
        for($i = 0; $i -lt $nodesA.Count; $i++)
        {
            $truelink = $nodesA[$i].GetAttributeValue("href", "");
            $newtruelink = NormalizeUrl{{{block_id}}}($truelink, $MainUrl);
            if($newtruelink -eq $MainUrl) { continue; }
            if($newtruelink.Length -eq 0) { continue; }

            if({{{Result}}}.Contains($newtruelink)) { continue; }
            $urls.Add($newtruelink);
            {{{Result}}}.Add($newtruelink);
        }
          
        $checkurls.AddRange($urls);
        $urls.Clear();
        
        for($iEntry = 1; $iEntry -lt $MaxEntry; $iEntry++)
        {
            $__Error.Detailed("Processing entry $iEntry");

            foreach($url in $checkurls)
            {         
                try
                {      
                    $__Error.Detailed("Download page $url"); 
                    
                    $PageText = $script:__InternalBrowser.Get($url).ToString(); 
                    $Document.LoadHtml($PageText);
               
                    $nodesA = $Document.DocumentNode.SelectNodes(".//a");

                    if($nodesA -eq $null) { continue; }
                    if($nodesA.Count -eq 0) { continue; }
                    for($i = 0; $i -lt $nodesA.Count; $i++)
                    {
                        $truelink = $nodesA[$i].GetAttributeValue("href", "");
                        $newtruelink = NormalizeUrl{{{block_id}}}($truelink, $MainUrl);
                        if($newtruelink -eq $MainUrl) { continue; }
                        if($newtruelink.Length -eq 0) { continue; }

                        if({{{Result}}}.Contains($newtruelink)) { continue; }
                        $urls.Add($newtruelink);
                        {{{Result}}}.Add($newtruelink);
                    } 
                }
                catch
                {
                    continue;
                }
            } 
            $checkurls.Clear();
            $checkurls.AddRange($urls);
            $urls.Clear();
        }   

    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
   
function NormalizeUrl{{{block_id}}}($Param)
{
    try 
    {
        $Url = $Param[0];
        $MainUrl = [System.Uri]::new($Param[1]);
       
        $newurl = [System.Uri]::new($MainUrl, $Url);
    
        if($newurl.Host -ne $MainUrl.Host) { return ""; }
        if($newurl.AbsolutePath -eq "/") { return ""; }
        if($newurl.AbsolutePath.Length -eq 0) { return ""; }

        $ext = [System.IO.Path]::GetExtension($newurl.AbsolutePath).ToString();
        if($ext.Length -eq 0 -or $ext -eq ".html" -or $ext -eq ".php") { return $newurl.ToString(); }
    }
    catch {
        
    }
    return "";
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Url" Tooltip="" CatalogName="Required" Type="Expression" Value="$Url" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding download page" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="UTF8;Ansi" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="UserAgent" Tooltip="Use internal useragent" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="Chrome;IE;Opera;Firefox" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="UseTls12" Tooltip="Use Tls21 for SSL" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="MaxEntry" Tooltip="Max entry in site" CatalogName="Main properties" Type="Expression" Value="2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="List links from site" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Proxy" InternalName="SetProxy" FriendlyName="Set Proxy" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetProxy{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ControlProxy   = "{{{ControlProxy}}}";
    $TypeProxy      = "{{{TypeProxy}}}"; 
    $Address        = {{{Address}}};
    $Port           = {{{Port}}};
    $Authentication = ${{{Authentication}}}; 
    $Username       = {{{Username}}};
    $PasswordObj       = {{{Password}}};
    
        $actionvalue = "";
        
		$Password = _checkpassword($PasswordObj);
		
        if($ControlProxy -eq "No") { $actionvalue += "True"; }
        else { $actionvalue += "False"; }
        $actionvalue += "|||"; 
        
        if($ControlProxy -eq "System") { $actionvalue += "True"; }
        else { $actionvalue += "False"; }
        $actionvalue += "|||"; 
        
        if($ControlProxy -eq "Manual") { $actionvalue += "True"; }
        else { $actionvalue += "False"; }
        $actionvalue += "|||";
       
        $actionvalue += $Address;
        $actionvalue += "|||"; 
        
        $actionvalue += $Port.ToString();
        $actionvalue += "|||"; 
                               
        if($TypeProxy -eq "Socks4") { $actionvalue += "1"; }  
        elseif($TypeProxy -eq "Socks4A") { $actionvalue += "2"; }
        elseif($TypeProxy -eq "Socks5") { $actionvalue += "3"; }  
        else { $actionvalue += "0"; }
        $actionvalue += "|||"; 
        
        $actionvalue += $Authentication.ToString();
        $actionvalue += "|||"; 
        
        $actionvalue += $Username;
        $actionvalue += "|||";
        
        $actionvalue += $Password;
        
        
        Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SetProxy</InternalName><Action>$actionvalue</Action></block>");                     
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ControlProxy" Tooltip="Control proxy" CatalogName="Main properties" Type="Enum" Value="No" EnumVariants="No;System;Manual" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="TypeProxy" Tooltip="Type proxy" CatalogName="Main properties" Type="Enum" Value="HTTP" EnumVariants="HTTP;Socks4;Socks4A;Socks5" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Address" Tooltip="Address proxy" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Port" Tooltip="Port proxy" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Authentication" Tooltip="Authentication proxy" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Username" Tooltip="Username proxy" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password proxy" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Internal Async Browser Get" InternalName="InternalAsyncBrowserGet" FriendlyName="Internal Async Browser Get" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="59">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InternalAsyncBrowserGet{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Url            = {{{Url}}};    
    $Encoding       = "{{{Encoding}}}"; 
    $UserAgent      = "{{{UserAgent}}}"; 
    $UseTls12       = ${{{UseTls12}}};
    $MaxCountThread = {{{MaxCountThread}}}; 
    $MaxCountError  = {{{MaxCountError}}};
    
        {{{Result}}} = ""; 
        {{{CountThread}}} = 0;
                  
        if(!$script:__Async{{{block_id}}})
        {
            $script:__Async{{{block_id}}} = [MainHelpers.ClassAsync]::new($MaxCountThread, $MaxCountError);
        }
        
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        { 
            $script:__Async{{{block_id}}}.StopAll();
        } 
            
        {{{CountThread}}} = $script:__Async{{{block_id}}}.Count;
        
        $thread = $script:__Async{{{block_id}}}.GetAsyncBrowserGet();
        if($null -ne $thread)
        {
            {{{Result}}} = $thread.ResultPageText;
            $__Error.SetErrorMessage($thread.ResultErrorMessage); 
            {{{UrlRequest}}} = $thread.Url; 
            $thread = $null;
            $__Error.Jump("{{{connector-Processed}}}");
            return;
        }
           
        if($script:__Async{{{block_id}}}.IsWait)
        {
            $__Error.Jump("{{{connector-Wait}}}");
            return;
        }
          
        if(-not [string]::IsNullOrEmpty($Url))
        {
            $script:__Async{{{block_id}}}.StartAsyncBrowserGet($Url, $Encoding, $UserAgent, $UseTls12);
        }
    }    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Url" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding download page" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="UTF8;Ansi" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="UserAgent" Tooltip="Use internal useragent" CatalogName="Main properties" Type="Enum" Value="Chrome" EnumVariants="Chrome;IE;Opera;Firefox" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="UseTls12" Tooltip="Use Tls12  for SSL" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="MaxCountThread" Tooltip="Max count thread" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MaxCountError" Tooltip="Max count error" CatalogName="Main properties" Type="Expression" Value="3" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return page text" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UrlRequest" Tooltip="Url request" CatalogName="Output" Type="Variable" Value="$UrlRequest" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CountThread" Tooltip="Return count thread" CatalogName="Output" Type="Variable" Value="$CountThread" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorHttp" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Wait" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Ожидание" Color="#000080" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Processed" Orientation="Bottom" RelativePosition="1,1" MaxInConnections="0" MaxOutConnections="1" Caption="Обработка" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Html SelectSingleNode" InternalName="HtmlSelectSingleNode" FriendlyName="Html SelectSingleNode" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTML).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="38">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HtmlSelectSingleNode{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $PageText      = {{{PageText}}}; 
    $XPath         = {{{XPath}}};
    $ExtractValue  = "{{{ExtractValue}}}";  
    $AttributeName = {{{AttributeName}}}; 
        
        $Document = [HtmlAgilityPack.HtmlDocument]::new();
        $Document.LoadHtml($PageText);
        
        {{{Result}}} = "";

        $node = $Document.DocumentNode.SelectSingleNode($XPath); 
        if(!$node)
        {
            $__Error.Exception("Element not found...");
            return;
        }
              
        if($ExtractValue -eq "Attribute")
        {       
            {{{Result}}} = $node.GetAttributeValue($AttributeName, "");
        } 
        elseif ($ExtractValue -eq "InnerHtml")
        {     
            {{{Result}}} = $node.InnerHtml;
        }
        elseif ($ExtractValue -eq "Raw")
        {   
            {{{Result}}} = $node;
        } 
        else
        {   
            {{{Result}}} = $node.InnerText;
        } 
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="PageText" Tooltip="Page text" CatalogName="Required" Type="Expression" Value="$PageText" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="XPath" Tooltip="XPath for select nodes" CatalogName="Required" Type="Expression" Value="$XPath" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ExtractValue" Tooltip="Extract type value" CatalogName="Main properties" Type="Enum" Value="InnerText" EnumVariants="InnerText;Attribute;InnerHtml;Raw" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="AttributeName" Tooltip="If ExtractValue is Attribute then set value name" CatalogName="Main properties" Type="String" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return node data" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Html SelectNodes" InternalName="HtmlSelectNodes" FriendlyName="Html SelectNodes" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTML).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="76">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HtmlSelectNodes{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $PageText      = {{{PageText}}};
    $XPath         = {{{XPath}}};
    $ExtractValue  = "{{{ExtractValue}}}";
    $AttributeName = {{{AttributeName}}};
        
        $Document = [HtmlAgilityPack.HtmlDocument]::new();
        $Document.LoadHtml($PageText);  
        
        {{{Result}}} = New-Object Collections.Generic.List[object];

        $nodes = $Document.DocumentNode.SelectNodes($XPath);
        
        foreach($node in $nodes)
        {         
            if($ExtractValue -eq "Attribute")
            {
                {{{Result}}}.Add($node.GetAttributeValue($AttributeName, "")); 
            } 
            elseif ($ExtractValue -eq "InnerHtml")
            {
                {{{Result}}}.Add($node.InnerHtml);
            }   
            elseif ($ExtractValue -eq "Raw")
            {   
                {{{Result}}}.Add($node);
            } 
            else
            {
                {{{Result}}}.Add($node.InnerText);
            }  
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="PageText" Tooltip="Page text" CatalogName="Required" Type="Expression" Value="$PageText" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="XPath" Tooltip="XPath for select nodes" CatalogName="Required" Type="Expression" Value="$XPath" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ExtractValue" Tooltip="Extract type value" CatalogName="Main properties" Type="Enum" Value="InnerText" EnumVariants="InnerText;Attribute;InnerHtml;Raw" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="AttributeName" Tooltip="If ExtractValue is Attribute then set value name" CatalogName="Main properties" Type="String" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return list nodes data" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Html Select Tag A" InternalName="HtmlSelectTagA" FriendlyName="Html Select Tag A" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTML).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="24">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HtmlSelectTagA{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $PageText = {{{PageText}}};
    $XPath    = {{{XPath}}}; 
    $PageUrl  = {{{PageUrl}}};
        
        if($XPath.Length -eq 0)
        {
            $XPath = ".//a[@href]";
        }
        
        $Document = [HtmlAgilityPack.HtmlDocument]::new();
        $Document.LoadHtml($PageText);  
        
        {{{Result}}} = @{};

        $nodes = $Document.DocumentNode.SelectNodes($XPath);
        foreach($node in $nodes)
        {         
            $href = $node.GetAttributeValue("href", "");
            $text = $node.InnerText;
               
            if($href.Trim().Length -eq 0) { continue; }
            
            
            if(!$href.Contains("http"))
            {    
                if($PageUrl.Length -ne 0)
                {
                    $uri = [System.Uri]::new($PageUrl);
                    $href = $uri.Scheme + "://" + $uri.Host + $href;    
                }  
                else
                {
                    continue; 
                }
            }
            
            {{{Result}}}[$href] = $text;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="PageText" Tooltip="Page text" CatalogName="Required" Type="Expression" Value="$PageText" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageUrl" Tooltip="Url page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="XPath" Tooltip="XPath for select nodes" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return hashtable tags" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Cookies To DataTable" InternalName="CookiesToDataTable" FriendlyName="Cookies To DataTable" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CookiesToDataTable{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ListCookies = {{{ListCookies}}};
    
        
        if(-not $ListCookies.GetType().Name.Contains("List"))
        {                         
            $__Error.Exception("Variable is not list");
            return;    
        }

        $table = [System.Data.DataTable]::new();
        $_     = $table.Columns.Add("Name", [string]);
        $_     = $table.Columns.Add("Value", [string]);
        $_     = $table.Columns.Add("Domain", [string]);
        $_     = $table.Columns.Add("Path", [string]);
        $_     = $table.Columns.Add("Expires", [string]);
        $_     = $table.Columns.Add("Discard", [string]);
        $_     = $table.Columns.Add("Secure", [string]);
        $_     = $table.Columns.Add("HttpOnly", [string]);
        
        foreach($cookie in $ListCookies)
        {
            if($cookie.Expired) { continue; }
            $newrow = $table.NewRow();

            $newrow["Name"]     = $cookie.Name;
            $newrow["Value"]    = $cookie.Value;
            $newrow["Domain"]   = $cookie.Domain;
            $newrow["Path"]     = $cookie.Path;
            $newrow["Expires"]  = $cookie.Expires.ToString();
            $newrow["Discard"]  = $cookie.Discard.ToString();
            $newrow["Secure"]   = $cookie.Secure.ToString();
            $newrow["HttpOnly"] = $cookie.HttpOnly.ToString();
            
            $table.Rows.Add($newrow);
        }

        {{{ResultDataTable}}} = $table;
               
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ListCookies" Tooltip="List cookies" CatalogName="Required" Type="Variable" Value="$ListCookies" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ResultDataTable" Tooltip="Result table cookies" CatalogName="Output" Type="Variable" Value="$TableCookies" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="DataTable To Cookies" InternalName="DataTableToCookies" FriendlyName="DataTable To Cookies" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (HTTP).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DataTableToCookies{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $TableCookies = {{{TableCookies}}};
    
        
        $list = [System.Collections.Generic.List[System.Net.Cookie]]::new();

        foreach($row in $TableCookies.Rows)
        {
            try 
            {
                $cookie          = [System.Net.Cookie]::new();
                $cookie.Name     = [string]$row["Name"];
                $cookie.Value    = [string]$row["Value"];
                $cookie.Domain   = [string]$row["Domain"];
                $cookie.Path     = [string]$row["Path"];
                $cookie.Expires  = [DateTime]::parse([string]$row["Expires"]);
                $cookie.Discard  = [bool]::parse([string]$row["Discard"]);
                $cookie.Secure   = [bool]::parse([string]$row["Secure"]);
                $cookie.HttpOnly = [bool]::parse([string]$row["HttpOnly"]);
                
                $list.Add($cookie); 
            }
            catch { }
        }

        {{{ResultList}}} = $list;
               
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TableCookies" Tooltip="Table cookies" CatalogName="Required" Type="Variable" Value="$TableCookies" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ResultList" Tooltip="Result list cookies" CatalogName="Output" Type="Variable" Value="$ListCookies" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Soap Client" InternalName="SoapClient" FriendlyName="Soap Client" PathStyle="{StaticResource GreenLightRectangle}" PathStyle_DragThumb="{StaticResource GreenLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Web (Web).png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="33">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SoapClient{{{block_id}}}
{ 
	try
	{
    Add-Type -AssemblyName System.Web      
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $EndPoint              = {{{EndPoint}}};
    $ContractName          = {{{ContractName}}}; 
    $Method                = {{{Method}}}; 
    $Parameters            = {{{Parameters}}}; 
    $Username              = {{{Username}}};
    $PasswordObj              = {{{Password}}};
    $UseSoap12             = ${{{UseSoap12}}};  
    $UseWindowsCredentials = ${{{UseWindowsCredentials}}};
    $UseMtom               = ${{{UseMtom}}};
    $Timeout               = {{{Timeout}}};
    
        {AddTypesSoap}
                       
		$Password = _checkpassword($PasswordObj);
					   
        $client = [SoapHelpers.ClassMain]::new();
        
        $client.EndPoint              = $EndPoint;
        $client.ContractName          = $ContractName;
        $client.Username              = $Username;
        $client.Password              = $Password;
        $client.UseSoap12             = $UseSoap12;
        $client.UseWindowsCredentials = $UseWindowsCredentials;
        $client.UseMtom               = $UseMtom;
        $client.Timeout               = $Timeout;
        
        if([string]::IsNullOrEmpty($Method))
        {
            $client.GetMethods();
            if($client.IsError)
            {
                $__Error.Exception($client.ErrorMessage);
                return;
            } 
            {{{Result}}} = $__BinFormatter.frombin($client.ReturnValue); 
        }
        elseif([string]::IsNullOrEmpty($Parameters))
        {
            $client.GetParams($Method);
            if($client.IsError)
            {
                $__Error.Exception($client.ErrorMessage);
                return;
            } 
            {{{Result}}} = $__BinFormatter.frombin($client.ReturnValue); 
        }  
        else
        {
            $client.InvokeService($Method, $Parameters);
            if($client.IsError)
            {
                $__Error.Exception($client.ErrorMessage);
                return;
            } 
            {{{Result}}} = $client.ReturnValue;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EndPoint" Tooltip="EndPoint" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ContractName" Tooltip="ContractName" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Method" Tooltip="Method" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Parameters" Tooltip="Parameters" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Username" Tooltip="Username" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="UseWindowsCredentials" Tooltip="UseWindowsCredentials" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="UseSoap12" Tooltip="UseSoap12" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseMtom" Tooltip="UseMtom" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result object" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List / Hashtable / Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="OCRToolboxSettings" Name="OCR Automation" ToolboxGridType="List" AliasDescription="Perform OCR on documents or computer screen to extract texts from images">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Recognize Templates" InternalName="RecognizeTemplates" FriendlyName="Recognize Templates" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="119" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeTemplates{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        $FileName                  = {{{FileName}}};  
        $FilePattern               = {{{FilePattern}}};
        $PageIndex_str             = {{{PageIndex}}};  
        $ReplaceModule             = {{{ReplaceModule}}};
        $ReplaceScale_str          = {{{ReplaceScale}}}; 
        $ReplaceLanguages          = {{{ReplaceLanguages}}};
        $ReplaceHorizCellScale_str = {{{ReplaceHorizCellScale}}};
        $ReplaceVertCellScale_str  = {{{ReplaceVertCellScale}}};  
        $AddTableConfidence        = ${{{AddTableConfidence}}};  
        $IgnoreAnchorErrors        = ${{{IgnoreAnchorErrors}}}; 
        $ProcesssingAllPages       = ${{{ProcesssingAllPages}}};
        
        
        $FileName = ExpandConstFilePath $FileName        
                  
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        } 
        
        $patternfiles = New-Object Collections.Generic.List[string];
        $vartype = $FilePattern.GetType().Name;      
        if($vartype.Contains("List") -or $vartype -eq "Object[]" -or $vartype -eq "String[]")
        {        
            foreach($s in $FilePattern)
            {       
                $patternfiles.Add($s);
            }
        }
        else
        {
            $patternfiles.Add($FilePattern);
        }    
        
        $PageIndex = _toint($PageIndex_str);  
        if($null -eq $ReplaceModule) { $ReplaceModule = ""; }
        if($ReplaceModule -eq "Default") { $ReplaceModule = ""; } 
        $ReplaceScale = _todouble($ReplaceScale_str);  
        if($null -eq $ReplaceLanguages) { $ReplaceLanguages = ""; }
        if($ReplaceLanguages -eq "Default") { $ReplaceLanguages = ""; } 
        $ReplaceHorizCellScale = _toint($ReplaceHorizCellScale_str);
        $ReplaceVertCellScale  = _toint($ReplaceVertCellScale_str);
                          
        $__Recognize = [OCRModules.MainRecognizePattern]::new();
        try 
        {
            $__Recognize.ReplaceModule         = $ReplaceModule;  
            if($ReplaceScale -gt 0) { $__Recognize.ReplaceScale = $ReplaceScale; }  
            $__Recognize.ReplaceLanguages      = $ReplaceLanguages;  
            if($ReplaceHorizCellScale -gt 0) { $__Recognize.ReplaceHorizCellScale = $ReplaceHorizCellScale; } 
            if($ReplaceVertCellScale -gt 0) { $__Recognize.ReplaceVertCellScale  = $ReplaceVertCellScale; }
            $__Recognize.AddTableConfidence    = $AddTableConfidence;
            $__Recognize.IgnoreAnchorErrors    = $IgnoreAnchorErrors; 
            $__Recognize.ProcesssingAllPages   = $ProcesssingAllPages;    
        }  
        catch{}
        
        $lastErrorMessage = ""; 
        $success          = $false;
                                 
        for($ind = 0;$ind -lt $patternfiles.Count; $ind++)
        {         
            $file = $patternfiles[$ind];
            
            $filepat = ExpandConstFilePath $file
        
            if(-not [System.IO.File]::Exists($filepat))
            {           
                $lastErrorMessage = "ERRORCONST_PATHNOTFOUND: $filepat";
                continue;
            } 
            
            $__Error.Detailed($filepat); 
            
            
            $psResult = $__Recognize.ProcessedPattern($FileName, $PageIndex, $filepat);
            if($psResult.IsError)
            {       
                $lastErrorMessage = $psResult.ErrorMessage;
                continue;
            }
            
            $success = $true;     
            
            try
            {
                {{{Attributes}}} = $psResult.RawResult; 
                {{{Tables}}} = $psResult.RawResult2; 
                {{{Anchors}}} = $psResult.RawResult3; 
                {{{AreaAttributes}}} = $psResult.RawResult4; 
            }
            catch
            {
                {{{Attributes}}} = $__BinFormatter.frombin($psResult.Result); 
                {{{Tables}}} = $__BinFormatter.frombin($psResult.Result2);
                {{{Anchors}}} = $__BinFormatter.frombin($psResult.Result3);
                {{{AreaAttributes}}} = $__BinFormatter.frombin($psResult.Result4);
            }
            
            {{{IndexPattern}}} = $ind;
            break;
        }  
        
        $__Recognize.Dispose();
        
        if(-not $success)
        {
            $__Error.Exception($lastErrorMessage);
            return;
        }
                              
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilePattern" Tooltip="Filename pattern" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List" />
                                   <core:Property Name="PageIndex" Tooltip="Index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ReplaceModule" Tooltip="Replace ocr module" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ReplaceScale" Tooltip="ReplaceScale" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ReplaceLanguages" Tooltip="Replace languages" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ReplaceHorizCellScale" Tooltip="ReplaceHorizCellScale" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ReplaceVertCellScale" Tooltip="ReplaceVertCellScale" CatalogName="Custom properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AddTableConfidence" Tooltip="AddTableConfidence" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IgnoreAnchorErrors" Tooltip="IgnoreAnchorErrors" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcesssingAllPages" Tooltip="ProcesssingAllPages" CatalogName="Custom properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Tables" Tooltip="Tables" CatalogName="Output" Type="Variable" Value="$Tables" Visible="True" DefaultValue="&quot;&quot;" ValueType="Data Table List" />
                                   <core:Property Name="Anchors" Tooltip="Anchors dictionary" CatalogName="Output" Type="Variable" Value="$Anchors" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="AreaAttributes" Tooltip="AreaAttributes" CatalogName="Output" Type="Variable" Value="$AttributesData" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="IndexPattern" Tooltip="Index pattern" CatalogName="Output" Type="Variable" Value="$IndexPattern" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Click OCR Text" InternalName="ClickOCRText" FriendlyName="Click OCR Text" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Click OCR Text.png" ImageType="LeftImage" Proportional="True" Version="38" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClickOCRText{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $ProcessID          = {{{ProcessID}}};
    $OCRTextX           = {{{OCRTextX}}};   
    $OCRTextY           = {{{OCRTextY}}};
    $OCRTextWidth       = {{{OCRTextWidth}}};    
    $OCRTextHeight      = {{{OCRTextHeight}}};  
    $OCRTextPointX      = {{{OCRTextPointX}}};    
    $OCRTextPointY      = {{{OCRTextPointY}}};  
    $OCRTextFindText    = {{{OCRTextFindText}}}; 
    $OCRTextFindPercent = {{{OCRTextFindPercent}}}; 
    $OCRTextOccurence   = {{{OCRTextOccurence}}};  
    $OCRTextScale       = {{{OCRTextScale}}};
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickOCRText</InternalName><InternalType>Panel</InternalType><Action>{{{Action}}}</Action><ProcessID>$ProcessID</ProcessID><OCRTextX>$OCRTextX</OCRTextX><OCRTextY>$OCRTextY</OCRTextY><OCRTextWidth>$OCRTextWidth</OCRTextWidth><OCRTextHeight>$OCRTextHeight</OCRTextHeight><OCRTextPointX>$OCRTextPointX</OCRTextPointX><OCRTextPointY>$OCRTextPointY</OCRTextPointY><OCRTextLanguages>{{{OCRTextLanguages}}}</OCRTextLanguages><OCRTextModule>{{{OCRTextModule}}}</OCRTextModule><OCRTextFindText>$OCRTextFindText</OCRTextFindText><OCRTextFindPercent>$OCRTextFindPercent</OCRTextFindPercent><OCRTextOccurence>$OCRTextOccurence</OCRTextOccurence><SimulateMove>{{{SimulateMove}}}</SimulateMove>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextX" Tooltip="Left coordinate of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextY" Tooltip="Top coordinate of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextWidth" Tooltip="Width of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextHeight" Tooltip="Height coordinate of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextPointX" Tooltip="Horizontal offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextPointY" Tooltip="Vertical offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextLanguages" Tooltip="Languages to recognize" CatalogName="Main properties" Type="Enum" Value="eng+rus" EnumVariants="eng+rus;eng;rus" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextFindText" Tooltip="Find specified substring within recognized text" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextFindPercent" Tooltip="Text find percent" CatalogName="Main properties" Type="Expression" Value="80" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextOccurence" Tooltip="Find this occurence of OCRTextFindText" CatalogName="Main properties" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Click OCR Text Control" InternalName="ClickOCRTextControl" FriendlyName="Click OCR Text Control" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Click OCR Text.png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClickOCRTextControl{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $ProcessID          = {{{ProcessID}}};
    $OCRTextPointX      = {{{OCRTextPointX}}};    
    $OCRTextPointY      = {{{OCRTextPointY}}};  
    $OCRTextFindText    = {{{OCRTextFindText}}}; 
    $OCRTextFindPercent = {{{OCRTextFindPercent}}}; 
    $OCRTextOccurence   = {{{OCRTextOccurence}}};  
    $OCRTextScale       = {{{OCRTextScale}}}; 
    $WaitTime           = {{{WaitTime}}};
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickOCRTextControl</InternalName><InternalType>Panel</InternalType><Action>{{{Action}}}</Action><ProcessID>$ProcessID</ProcessID><OCRTextPointX>$OCRTextPointX</OCRTextPointX><OCRTextPointY>$OCRTextPointY</OCRTextPointY><OCRTextLanguages>{{{OCRTextLanguages}}}</OCRTextLanguages><OCRTextModule>{{{OCRTextModule}}}</OCRTextModule><OCRTextFindText>$OCRTextFindText</OCRTextFindText><OCRTextFindPercent>$OCRTextFindPercent</OCRTextFindPercent><OCRTextOccurence>$OCRTextOccurence</OCRTextOccurence><SimulateMove>{{{SimulateMove}}}</SimulateMove><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="OCRTextPointX" Tooltip="Horizontal offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextPointY" Tooltip="Vertical offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextLanguages" Tooltip="Languages to recognize" CatalogName="Main properties" Type="Enum" Value="eng+rus" EnumVariants="eng+rus;eng;rus" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="OCRTextFindText" Tooltip="Find specified substring within recognized text" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextFindPercent" Tooltip="Text find percent" CatalogName="Main properties" Type="Expression" Value="80" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextOccurence" Tooltip="Find this occurence of OCRTextFindText" CatalogName="Main properties" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get OCR Text" InternalName="GetOCRText" FriendlyName="Get OCR Text" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Get OCR Text.png" ImageType="LeftImage" Proportional="True" Version="14" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetOCRText{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $ProcessID           = {{{ProcessID}}};
    $OCRTextX            = {{{OCRTextX}}};  
    $OCRTextY            = {{{OCRTextY}}};
    $OCRTextWidth        = {{{OCRTextWidth}}};
    $OCRTextHeight       = {{{OCRTextHeight}}};  
    $OCRTextSplitMethod  = {{{OCRTextSplitMethod}}};    
    $OCRTextInsertSymbol = {{{OCRTextInsertSymbol}}}; 
    $OCRTextCountSymbols = {{{OCRTextCountSymbols}}};
    $OCRTextScale        = {{{OCRTextScale}}};
        

        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetOCRText</InternalName><InternalType>Panel</InternalType><ProcessID>$ProcessID</ProcessID><OCRTextX>$OCRTextX</OCRTextX><OCRTextY>$OCRTextY</OCRTextY><OCRTextWidth>$OCRTextWidth</OCRTextWidth><OCRTextHeight>$OCRTextHeight</OCRTextHeight><OCRTextLanguages>{{{OCRTextLanguages}}}</OCRTextLanguages><OCRTextModule>{{{OCRTextModule}}}</OCRTextModule><OCRTextSplitMethod>$OCRTextSplitMethod</OCRTextSplitMethod><OCRTextInsertSymbol>$OCRTextInsertSymbol</OCRTextInsertSymbol><OCRTextCountSymbols>$OCRTextCountSymbols</OCRTextCountSymbols><OCRTextScale>$OCRTextScale</OCRTextScale>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }

        {{{Result}}} = $psResult.Result;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="OCRTextX" Tooltip="Left coordinate of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextY" Tooltip="Top coordinate of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextWidth" Tooltip="Width of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextHeight" Tooltip="Height coordinate of screen or control region to capture" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextLanguages" Tooltip="Languages to recognize" CatalogName="Main properties" Type="Enum" Value="eng+rus" EnumVariants="eng+rus;eng;rus" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into (string)" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextSplitMethod" Tooltip="Split method" CatalogName="Main properties" Type="String" Value="0,2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextInsertSymbol" Tooltip="Insert symbol" CatalogName="Main properties" Type="String" Value="20" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextCountSymbols" Tooltip="Count symbols" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get OCR Text Control" InternalName="GetOCRTextControl" FriendlyName="Get OCR Text Control" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Get OCR Text.png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetOCRTextControl{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $ProcessID           = {{{ProcessID}}};
    $OCRTextSplitMethod  = {{{OCRTextSplitMethod}}};    
    $OCRTextInsertSymbol = {{{OCRTextInsertSymbol}}}; 
    $OCRTextCountSymbols = {{{OCRTextCountSymbols}}};
    $OCRTextScale        = {{{OCRTextScale}}};  
    $WaitTime           = {{{WaitTime}}};
        

        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetOCRTextControl</InternalName><InternalType>Panel</InternalType><ProcessID>$ProcessID</ProcessID><OCRTextX>$OCRTextX</OCRTextX><OCRTextY>$OCRTextY</OCRTextY><OCRTextWidth>$OCRTextWidth</OCRTextWidth><OCRTextHeight>$OCRTextHeight</OCRTextHeight><OCRTextLanguages>{{{OCRTextLanguages}}}</OCRTextLanguages><OCRTextModule>{{{OCRTextModule}}}</OCRTextModule><OCRTextSplitMethod>$OCRTextSplitMethod</OCRTextSplitMethod><OCRTextInsertSymbol>$OCRTextInsertSymbol</OCRTextInsertSymbol><OCRTextCountSymbols>$OCRTextCountSymbols</OCRTextCountSymbols><OCRTextScale>$OCRTextScale</OCRTextScale><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }

        {{{Result}}} = $psResult.Result;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="OCRTextLanguages" Tooltip="Languages to recognize" CatalogName="Main properties" Type="Enum" Value="eng+rus" EnumVariants="eng+rus;eng;rus" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into (string)" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextSplitMethod" Tooltip="Split method" CatalogName="Main properties" Type="String" Value="0,2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextInsertSymbol" Tooltip="Insert symbol" CatalogName="Main properties" Type="String" Value="20" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextCountSymbols" Tooltip="Count symbols" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="OCR Image" InternalName="OCRImage" FriendlyName="OCR Image" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="42" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OCRImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $FileName            = {{{FileName}}};  
    $OCRTextSplitMethod  = {{{OCRTextSplitMethod}}};    
    $OCRTextInsertSymbol = {{{OCRTextInsertSymbol}}}; 
    $OCRTextCountSymbols = {{{OCRTextCountSymbols}}};
    $OCRTextScale        = {{{OCRTextScale}}}; 
    
        {{{Result}}} = "";   
        $FileName = ExpandConstFilePath $FileName
       
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>OCRImage</InternalName><InternalType>Panel</InternalType><FileName>$FileName</FileName><OCRTextLanguages>{{{OCRTextLanguages}}}</OCRTextLanguages><OCRTextModule>{{{OCRTextModule}}}</OCRTextModule><OCRTextSplitMethod>$OCRTextSplitMethod</OCRTextSplitMethod><OCRTextInsertSymbol>$OCRTextInsertSymbol</OCRTextInsertSymbol><OCRTextCountSymbols>$OCRTextCountSymbols</OCRTextCountSymbols><OCRTextScale>$OCRTextScale</OCRTextScale><AutoRotatedPage>{{{AutoRotatedPage}}}</AutoRotatedPage>{{{Selector}}}</block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }

        {{{Result}}} = $psResult.Result;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextLanguages" Tooltip="Languages to recognize" CatalogName="Main properties" Type="Enum" Value="eng+rus" EnumVariants="eng+rus;eng;rus" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextSplitMethod" Tooltip="Split method" CatalogName="Main properties" Type="String" Value="0,2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextInsertSymbol" Tooltip="Insert symbol" CatalogName="Main properties" Type="String" Value="20" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextCountSymbols" Tooltip="Count symbols" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoRotatedPage" Tooltip="AutoRotatedPage" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into (string)" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize TORG12" InternalName="RecognizeTORG12" FriendlyName="Recognize TORG12" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="38" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeTORG12{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}"; 
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("TORG12");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {      
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize UPD" InternalName="RecognizeUPD" FriendlyName="Recognize UPD" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeUPD{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}"; 
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("UPD");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize Invoice" InternalName="RecognizeInvoice" FriendlyName="Recognize Invoice" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="8" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeInvoice{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}";   
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("Invoice");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize InvoicePayment" InternalName="RecognizeInvoicePayment" FriendlyName="Recognize InvoicePayment" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="7" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeInvoicePayment{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}";   
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("InvoicePayment");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize CertificateCompletion" InternalName="RecognizeCertificateCompletion" FriendlyName="Recognize CertificateCompletion" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeCertificateCompletion{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}";
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("CertificateCompletion");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize TTN" InternalName="RecognizeTTN" FriendlyName="Recognize TTN" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeTTN{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}";   
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("TTN");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize ActReconciliation" InternalName="RecognizeActReconciliation" FriendlyName="Recognize ActReconciliation" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeActReconciliation{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}";  
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("ActReconciliation");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize Passport" InternalName="RecognizePassport" FriendlyName="Recognize Passport" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="23" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizePassport{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                          
        $BlockMode      = "{{{BlockMode}}}";
        $FileName       = {{{FileName}}};  
        $TitlesLanguage = "{{{TitlesLanguage}}}";
        $OCRTextModule  = "{{{OCRTextModule}}}";  
        $OCRTextScale   = {{{OCRTextScale}}};
        
        $FileName = ExpandConstFilePath $FileName
           
        if($BlockMode -eq "Online")
        {
            $cls         = [OCRModules.TemplatesYandexVision]::new();
            $returnvalue = $cls.RecognizePassport($FileName, $OCRTextScale, $TitlesLanguage);
            if(!$returnvalue)
            {
                $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
                return;
            } 
            
            {{{Attributes}}} = $returnvalue; 
        }
        elseif($BlockMode -eq "Offline")
        {
            $cls         = [OCRModules.ClassPassportRecognize]::new(); 
            $returnvalue = $cls.Processed($FileName, $OCRTextScale, $TitlesLanguage, $OCRTextModule); 
            if(!$returnvalue)
            {
                $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT: " + $cls.ErrorMessage);
                return;
            } 
            
            {{{Attributes}}} = $returnvalue;
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BlockMode" Tooltip="BlockMode" CatalogName="Main properties" Type="Enum" Value="Online" EnumVariants="Online;Offline" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize SNILS" InternalName="RecognizeSNILS" FriendlyName="Recognize SNILS" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="12" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeSNILS{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}"; 
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("SNILS");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize 2NDFL" InternalName="Recognize2NDFL" FriendlyName="Recognize 2NDFL" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_OCR Recognize Document .png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Recognize2NDFL{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName       = {{{FileName}}};  
    $TitlesLanguage = "{{{TitlesLanguage}}}";  
    $Timeout        = {{{Timeout}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        $cls         = [NamespaceCorrectSu.ClassMain]::new("2NDFL");
        $returnvalue = $cls.Processed($FileName, $Timeout);
        if(!$returnvalue)
        {
            $__Error.Exception("ERRORCONST_ERRORRECOGNIZEDOCUMENT");
            return;
        } 

        {{{Attributes}}} = $returnvalue.GetAttributes($TitlesLanguage); 
        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage);    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="120" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Attributes" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Attributes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Items" Tooltip="Items" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize Captcha" InternalName="RecognizeCaptchaOCR" FriendlyName="Recognize Captcha" PathStyle="{StaticResource BlueLagoonAllRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonAllRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_UI Get OCR Text.png" ImageType="LeftImage" Proportional="True" Version="23" TextColor="#FFFFFFFF">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeCaptchaOCR{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName = {{{FileName}}};  
        
        $FileName = ExpandConstFilePath $FileName        
                  
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }
        
        $psResult   = [AntiGate.ClassHelper]::RecognizeImageToText($FileName);
        if($__Error.CheckResult($psResult)) { return; }

        {{{Result}}} = $psResult.Result; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result captcha" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Orchestrator" Name="Orchestrator" ToolboxGridType="List" AliasDescription="Work with orchestrator task queues, orchestrator assets, credentials storage, log to orchestrator">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get Text Asset" InternalName="OrchGetTextAsset" FriendlyName="Get Text Asset" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="30">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetTextAsset{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $AssetGuid = {{{AssetGuid}}}; 
    $Timeout   = {{{Timeout}}};
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; } 
 
        $psResult = $script:__Orchestrator.GetAsset($AssetGuid);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        $item = $__BinFormatter.frombin($psResult.Result);
        
        {{{Result}}} = $item.text; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AssetGuid" Tooltip="Asset guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Text Asset" InternalName="OrchSetTextAsset" FriendlyName="Set Text Asset" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="13">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchSetTextAsset{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $AssetGuid = {{{AssetGuid}}}; 
    $TextValue = {{{TextValue}}};
    $Timeout   = {{{Timeout}}};
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
 
        $psResult = $script:__Orchestrator.UpdateAssetText($AssetGuid, $TextValue);
        if($__Error.CheckResult($psResult)) { return; }                
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AssetGuid" Tooltip="Asset guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TextValue" Tooltip="Text value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Credentials Asset" InternalName="OrchGetCredentialsAsset" FriendlyName="Get Credentials Asset" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetCredentialsAsset{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $AssetGuid  = {{{AssetGuid}}}; 
    $Timeout   = {{{Timeout}}};
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }   
        
        $psResult = $script:__Orchestrator.GetAsset($AssetGuid);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        $item = $__BinFormatter.frombin($psResult.Result);
               
        {{{Username}}} = $item.login;
        
        $issecure_password = $false;
        if({{{Password}}})
        {
            $typename = {{{Password}}}.GetType().Name;
            if($typename -eq "SecureString")
            {
                $issecure_password = $true;
                {{{Password}}} = _tosecure($item.password);
            }
        }
        
        if(-not $issecure_password) { {{{Password}}} = $item.password; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AssetGuid" Tooltip="Asset guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Username" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Password" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Credentials Asset" InternalName="OrchSetCredentialsAsset" FriendlyName="Set Credentials Asset" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchSetCredentialsAsset{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $AssetGuid = {{{AssetGuid}}}; 
    $Username  = {{{Username}}};
    $PasswordObj  = {{{Password}}}; 
    $Timeout   = {{{Timeout}}};
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
          
        $Password = _checkpassword($PasswordObj);
        
        $psResult = $script:__Orchestrator.UpdateAssetAuth($AssetGuid, $Username, $Password);
        if($__Error.CheckResult($psResult)) { return; }                
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AssetGuid" Tooltip="Asset guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Username value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create Task" InternalName="OrchCreateTask" FriendlyName="Create Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="58">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchCreateTask{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $QueueGuid      = {{{QueueGuid}}}; 
    $Name           = {{{Name}}}; 
    $Description    = {{{Description}}};
    $Parameters     = {{{Parameters}}};
    $Priority       = "{{{Priority}}}"; 
    $PostponedToObj = {{{PostponedTo}}}; 
    $DeadlineObj    = {{{Deadline}}};
    $Timeout        = {{{Timeout}}}; 
    $TagNames       = {{{TagNames}}};
    $Comment        = {{{Comment}}};
    
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
          
        $PostponedTo = _todatetime($PostponedToObj);
        $Deadline    = _todatetime($DeadlineObj);
                                                
        $psResult = $script:__Orchestrator.CreateTask($QueueGuid, $Name, $Description, $Parameters, $Deadline, $PostponedTo, $Priority, $TagNames, $Comment);
               
        if($__Error.CheckResult($psResult)) { return; } 
               
        $taskitem = $__BinFormatter.frombin($psResult.Result);
        {{{NetTaskGuid}}} = $taskitem.guid;
        
        {{{TaskObject}}} = $taskitem;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="QueueGuid" Tooltip="Queue guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name task" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Description" Tooltip="Description task" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Parameters" Tooltip="Parameters" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time/Text" />
                                   <core:Property Name="PostponedTo" Tooltip="PostponedTo " CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time/Text" />
                                   <core:Property Name="Deadline" Tooltip="Deadline" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DateTime" />
                                   <core:Property Name="Priority" Tooltip="New Priority" CatalogName="Main properties" Type="Enum" Value="Normal" EnumVariants="Low;Normal;High" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TagNames" Tooltip="Tag names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Comment" Tooltip="Comment" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NetTaskGuid" Tooltip="NetTaskGuid" CatalogName="Output" Type="Variable" Value="$NewTaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TaskObject" Caption="" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$TaskObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create Task From Table" InternalName="OrchCreateTaskFromTable" FriendlyName="Create Task From Table" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="50">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchCreateTaskFromTable{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $QueueGuid          = {{{QueueGuid}}}; 
    $NamePrefix         = {{{NamePrefix}}};
    $Description        = {{{Description}}};
    $TableParameters    = {{{TableParameters}}};
    $Priority           = "{{{Priority}}}";  
    $Timeout            = {{{Timeout}}};  
    $AddNameDateTime    = ${{{AddNameDateTime}}};
    $IndexColumnForName = {{{IndexColumnForName}}};
    $TagNames           = {{{TagNames}}}; 
    $PostponedToObj     = {{{PostponedTo}}}; 
    $DeadlineObj        = {{{Deadline}}}; 
    $ParametersType     = "{{{ParametersType}}}";
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }   
            
        $PostponedTo = _todatetime($PostponedToObj);
        $Deadline    = _todatetime($DeadlineObj);
        
        $listresult = New-Object Collections.Generic.List[string];   
        
        if($null -eq $NamePrefix) { $NamePrefix = ""; }
                  
        $indexname = _toint($IndexColumnForName);
        
        $indexTask = 1;
        foreach($row in $TableParameters.Rows)
        {         
            $Name = "";
            
            if($indexname -ge 0)
            {
                $Name = [Convert]::ToString($row[$indexname]);
            } 
            else
            {
                $Name = [Convert]::ToString($indexTask);
            }
            
            if($NamePrefix.Length -gt 0)
            {
                $Name = $NamePrefix + $Name;
            }
            
            if($AddNameDateTime)
            {
                $Name = $Name + " " + [DateTime]::Now.ToString("dd.MM.yyyy HH:mm:ss");
            } 
            
            if($ParametersType -eq "DataTable")
            {
                $temptable = $TableParameters.Clone();
                $newrow    = $temptable.NewRow();
                for($i = 0; $i -lt $row.Table.Columns.Count; $i++)
                {        
                    $newrow[$i] = $row[$i];
                }                
                $temptable.Rows.Add($newrow);
                $parameters = $temptable;
            }
            else
            {
                $tempdict = @{};
                for($i = 0; $i -lt $row.Table.Columns.Count; $i++)
                {       
                    $tempdict.Add($row.Table.Columns[$i].ColumnName, $row[$i]); 
                } 
                $parameters = $tempdict;
            }
                             
            $psResult = $script:__Orchestrator.CreateTask($QueueGuid, $Name, $Description, $parameters, $Deadline, $PostponedTo, $Priority, $TagNames);
            if($__Error.CheckResult($psResult)) { return; } 
               
            $taskitem = $__BinFormatter.frombin($psResult.Result);
            $listresult.Add($taskitem.guid);
            $indexTask++;
        }
        
        {{{ListTaskGuid}}} = $listresult;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="QueueGuid" Tooltip="Queue guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TableParameters" Tooltip="Parameters table" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="NamePrefix" Tooltip="Name prefix task" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexColumnForName" Tooltip="Index column for name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;-1&quot;" ValueType="Number" />
                                   <core:Property Name="AddNameDateTime" Tooltip="Add Name DateTime" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Description" Tooltip="Description task" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PostponedTo" Tooltip="PostponedTo " CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time/Text" />
                                   <core:Property Name="Deadline" Tooltip="Deadline" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DateTime" />
                                   <core:Property Name="Priority" Tooltip="New Priority" CatalogName="Main properties" Type="Enum" Value="Normal" EnumVariants="Low;Normal;High" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TagNames" Tooltip="Tag names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ParametersType" Tooltip="Parameters Type" CatalogName="Main properties" Type="Enum" Value="Hashtable" EnumVariants="Hashtable;DataTable" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ListTaskGuid" Tooltip="ListTaskGuid" CatalogName="Output" Type="Variable" Value="$ListTaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Last Task" InternalName="OrchGetLastTask" FriendlyName="Get Last Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="121">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetLastTask{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
            
        $QueueGuid          = {{{QueueGuid}}}; 
        $FilterTaskGuid     = {{{FilterTaskGuid}}};
        $FilterTaskName     = {{{FilterTaskName}}};
        $FilterTaskStatus   = "{{{FilterTaskStatus}}}"; 
        $FilterTaskPriority = "{{{FilterTaskPriority}}}";  
        $FilterTaskOffset   = {{{FilterTaskOffset}}};
        $MarkInProgress     = ${{{MarkInProgress}}};  
        $FilterTags         = {{{FilterTags}}};
        $Timeout            = {{{Timeout}}};
        $ReWriteParameters  = ${{{ReWriteParameters}}};  
        $ErrorWhenZeroTasks = ${{{ErrorWhenZeroTasks}}}; 
        $CreatedLaterObj    = {{{CreatedLater}}};   
                            
        {{{TaskGuid}}} = "";
        {{{TaskObject}}} = $null; 
           
        if([string]::IsNullOrEmpty($QueueGuid))
        {
            $__Error.Exception("Queue GUID is empty");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; } 
     
        $_filterTaskOffset = _toint($FilterTaskOffset);
        
        if($FilterTaskStatus -eq "Любой статус") { $FilterTaskStatus = ""; }
        if($FilterTaskPriority -eq "Любой приоритет") { $FilterTaskPriority = ""; } 
        if($FilterTaskPriority -eq "Any Priority") { $FilterTaskPriority = ""; }   
        if($null -eq $FilterTaskName) { $FilterTaskName = ""; }
             
        $CreatedLater = $null;
        if($null -ne $CreatedLaterObj)
        {
            $strtype = $CreatedLaterObj.GetType().Name;
            if($strtype -eq "DateTime")
            {
                $CreatedLater = $CreatedLaterObj;
            } 
            elseif($strtype -eq "String")
            {
                $refdt = [DateTime]::Now;
                if([DateTime]::TryParse($CreatedLaterObj, [System.Globalization.CultureInfo]::GetCultureInfo("ru-RU"), [System.Globalization.DateTimeStyles]::None,  [ref] $refdt))
                {
                    $CreatedLater = $refdt;
                }
            }
        } 
                
        $UseCreatedLater = $false;
        if($null -ne $CreatedLater)
        {
            $verifydt        = [DateTime]::new($CreatedLater.Year, $CreatedLater.Month, $CreatedLater.Day, $CreatedLater.Hour, $CreatedLater.Minute, $CreatedLater.Second);
            $UseCreatedLater = $true;
        }
        
        $ErrorMessage = "";
        $taskitem     = $null;
                 
        while($true)
        {
            if($script:__OrchestratorV -ge 141847)
            {        
                $psResult = $script:__Orchestrator.FilterOneTask($QueueGuid, $MarkInProgress, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, $FilterTags, $CreatedLater);
                if($psResult.IsError)
                {
                    $ErrorMessage = $psResult.ErrorMessage;
                    break;
                }
                $taskitem = $__BinFormatter.frombin($psResult.Result);
                break;
            }
            
            if([string]::IsNullOrEmpty($FilterTaskGuid) -and [string]::IsNullOrEmpty($FilterTaskName) -and [string]::IsNullOrEmpty($FilterTaskStatus) -and [string]::IsNullOrEmpty($FilterTaskPriority) -and [string]::IsNullOrEmpty($FilterTags) -and (-not $UseCreatedLater))
            {
                $psResult = $script:__Orchestrator.GetLastTask($QueueGuid, $false); 
                if($psResult.IsError)
                {
                    $ErrorMessage = $psResult.ErrorMessage;
                    break;
                }
                $taskitem = $__BinFormatter.frombin($psResult.Result);
            }
            else
            {       
                $UseWildcard  = $false;
                $WildcardName = "";
                if($FilterTaskName.Contains("*") -or $FilterTaskName.Contains("?"))
                {
                    $UseWildcard    = $true;
                    $WildcardName   = $FilterTaskName.ToLower();
                    $FilterTaskName = "";   
                }  
                            
                if($UseWildcard -or $UseCreatedLater)
                {                           
                    $psResult = $script:__Orchestrator.FilterTask($QueueGuid, $false, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, 0, $FilterTags);
                    if($psResult.IsError)
                    {
                        $ErrorMessage = $psResult.ErrorMessage;
                        break;
                    }
                    $list = $__BinFormatter.frombin($psResult.Result);
                    
                    foreach($item in $list)
                    {          
                        if($UseWildcard)
                        {
                            $str1   = $item.name.ToLower();
                            $result = [MainHelpers.ClassWildcard]::IsMatch($str1, $WildcardName);  
                            if(-not $result) { continue; }
                        }
                            
                        if($UseCreatedLater)
                        {
                            $createddt = $item.created;                    
                            if($createddt.Ticks -lt $verifydt.Ticks) { continue; }
                        }                        
                        
                        $taskitem = $item;
                        break;
                    }  
                    if($null -eq $taskitem)
                    {
                        $ErrorMessage = "Task not found";
                    }
                }
                else
                {
                    $psResult = $script:__Orchestrator.FilterOneTask($QueueGuid, $MarkInProgress, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, $FilterTags);
                    if($psResult.IsError)
                    {
                        $ErrorMessage = $psResult.ErrorMessage;
                        break;
                    }
                    $taskitem = $__BinFormatter.frombin($psResult.Result);            
                }
            } 
           
            break;
        }
        
        if($null -eq $taskitem)
        {        
            if($ErrorWhenZeroTasks)
            {
                $__Error.Exception($ErrorMessage);
                return;
            }
            elseif($ErrorMessage -eq "Task not found")
            {      
                $__Error.Quit();
                return;
            }
            else
            {
                $__Error.Exception($ErrorMessage);
                return;
            }
        } 
        
        if($MarkInProgress)
        {
            $psResult = $script:__Orchestrator.UpdateTask($taskitem.guid, "", "1", "", "", $null, $null, "");
            if($__Error.CheckResult($psResult)) { return; }
        }

        {{{TaskGuid}}} = $taskitem.guid;
        {{{TaskName}}} = $taskitem.name;  

        if(-not $ReWriteParameters -and ({{{Parameters}}} -as [System.Data.DataTable]) -and ($taskitem.parameters -as [System.Data.DataTable]))
        {       
            foreach($column in $taskitem.parameters.Columns)
            {
                if(-not {{{Parameters}}}.Columns.Contains($column.ColumnName))
                {
                    $_ = {{{Parameters}}}.Columns.Add($column.ColumnName, $column.DataType);
                }                    
            }
            
            for($indrow = 0; $indrow -lt $taskitem.parameters.Rows.Count; $indrow++)
            {       
                $oldrow = $taskitem.parameters.Rows[$indrow];
                if($indrow -ge {{{Parameters}}}.Rows.Count)
                {
                    $newrow = {{{Parameters}}}.NewRow();
                    {{{Parameters}}}.Rows.Add($newrow);
                } 
                else { $newrow = {{{Parameters}}}.Rows[$indrow]; }
                foreach($column in $taskitem.parameters.Columns)
                {
                    $newrow[$column.ColumnName] = $oldrow[$column.ColumnName];
                }
            }
            
            while($taskitem.parameters.Rows.Count -lt {{{Parameters}}}.Rows.Count)
            {
                {{{Parameters}}}.Rows.RemoveAt({{{Parameters}}}.Rows.Count - 1);
            }
        }
        else
        {
            {{{Parameters}}} = $taskitem.parameters;
        }
        
                 
        {{{TaskObject}}} = $taskitem;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="QueueGuid" Tooltip="Queue guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskGuid" Tooltip="Task guid" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskName" Tooltip="Task name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskStatus" Tooltip="Status" CatalogName="Main properties" Type="EnumMulti" Value="" EnumVariants="New;InProgress;Success;Failed (Application);Failed (Business);Postponed;Abandoned" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterTaskPriority" Tooltip="New Priority" CatalogName="Main properties" Type="Enum" Value="Any Priority" EnumVariants="Any Priority;Low;Normal;High" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterTaskOffset" Tooltip="Task offset" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FilterTags" Tooltip="Filter Tags" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CreatedLater" Tooltip="Created later" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time/Text" />
                                   <core:Property Name="MarkInProgress" Tooltip="Mark InProgress" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReWriteParameters" Tooltip="ReWriteParameters" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorWhenZeroTasks" Tooltip="ErrorWhenZeroTasks" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="TaskGuid" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$TaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TaskName" Tooltip="Task name" CatalogName="Output" Type="Variable" Value="$TaskName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Parameters" Tooltip="Parameters" CatalogName="Output" Type="Variable" Value="$Parameters" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Table/Hashtable" />
                                   <core:Property Name="TaskObject" Caption="" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$TaskObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get List Task" InternalName="OrchGetListTask" FriendlyName="Get List Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="110">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetListTask{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
            
        $QueueGuid          = {{{QueueGuid}}}; 
        $FilterTaskGuid     = {{{FilterTaskGuid}}};
        $FilterTaskName     = {{{FilterTaskName}}};
        $FilterTaskStatus   = "{{{FilterTaskStatus}}}"; 
        $FilterTaskPriority = "{{{FilterTaskPriority}}}";  
        $FilterTaskOffset   = {{{FilterTaskOffset}}}; 
        $FilterMaxCount     = {{{FilterMaxCount}}};  
        $FilterTags         = {{{FilterTags}}}; 
        $MarkInProgress     = ${{{MarkInProgress}}};
        $CreatedLaterObj    = {{{CreatedLater}}};  
        $Timeout            = {{{Timeout}}};   
        $ErrorWhenZeroTasks = ${{{ErrorWhenZeroTasks}}};
    
        if([string]::IsNullOrEmpty($QueueGuid))
        {
            $__Error.Exception("Queue GUID is empty");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }    
             
        $_filterTaskOffset = _toint($FilterTaskOffset);
        $_filterMaxCount = _toint($FilterMaxCount);
        
        if($FilterTaskStatus -eq "Любой статус") { $FilterTaskStatus = ""; }
        if($FilterTaskPriority -eq "Любой приоритет") { $FilterTaskPriority = ""; } 
        if($FilterTaskPriority -eq "Any Priority") { $FilterTaskPriority = ""; } 
                         
            
        $CreatedLater = $null;
        if($null -ne $CreatedLaterObj)
        {
            $strtype = $CreatedLaterObj.GetType().Name;
            if($strtype -eq "DateTime")
            {
                $CreatedLater = $CreatedLaterObj;
            } 
            elseif($strtype -eq "String")
            {
                $refdt = [DateTime]::Now;
                if([DateTime]::TryParse($CreatedLaterObj, [System.Globalization.CultureInfo]::GetCultureInfo("ru-RU"), [System.Globalization.DateTimeStyles]::None,  [ref] $refdt))
                {
                    $CreatedLater = $refdt;
                }
            }
        }   
                
        $UseCreatedLater = $false;
        if($null -ne $CreatedLater)
        {
            $verifydt        = [DateTime]::new($CreatedLater.Year, $CreatedLater.Month, $CreatedLater.Day, $CreatedLater.Hour, $CreatedLater.Minute, $CreatedLater.Second);
            $UseCreatedLater = $true;
        }
        
        $listguid = New-Object Collections.Generic.List[string];
        $listname = New-Object Collections.Generic.List[string];
        $listobj  = New-Object Collections.Generic.List[object]; 
           
        if($script:__OrchestratorV -ge 141847)
        {
            $psResult = $script:__Orchestrator.FilterTask($QueueGuid, $MarkInProgress, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, $_filterMaxCount, $FilterTags, $CreatedLater);
            if($__Error.CheckResult($psResult)) { return; }
            $list = $__BinFormatter.frombin($psResult.Result);
            $listobj.AddRange($list);
        }    
        else
        {
            
            $UseWildcard  = $false;
            $WildcardName = "";
            if($FilterTaskName.Contains("*") -or $FilterTaskName.Contains("*"))
            {
                $UseWildcard    = $true;
                $WildcardName   = $FilterTaskName.ToLower();
                $FilterTaskName = ""; 
            }
        
            if($UseWildcard -or $UseCreatedLater)
            {
                $_filterTaskOffset = 0;
                while($true)
                {
                    $psResult = $script:__Orchestrator.FilterTask($QueueGuid, $false, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, 0, $FilterTags);
                    if($psResult.IsError) { break; }
                    $list = $__BinFormatter.frombin($psResult.Result);
                          
                    if($list.Count -eq 0) { break; } 
                    
                    foreach($item in $list)
                    {     
                        if($UseWildcard)
                        {
                            $str1   = $item.name.ToLower();
                            $result = [MainHelpers.ClassWildcard]::IsMatch($str1, $WildcardName);  
                            if(-not $result) { continue; }
                        }
                            
                        if($UseCreatedLater)
                        {
                            $createddt = $item.created;                    
                            if($createddt.Ticks -lt $verifydt.Ticks) { continue; }
                        } 
                        
                        $listobj.Add($item); 
                        if($_filterMaxCount -gt 0)
                        {
                            if($listobj.Count -ge $_filterMaxCount)
                            {
                                break;
                            }
                        } 
                    }   
                    
                    if($_filterMaxCount -gt 0)
                    {
                        if($listobj.Count -ge $_filterMaxCount)
                        {
                            break;
                        }
                    } 
                    
                    $_filterTaskOffset += $list.Count;
                }
            }
            else
            {
                $psResult = $script:__Orchestrator.FilterTask($QueueGuid, $false, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, $_filterMaxCount, $FilterTags);
                if($__Error.CheckResult($psResult)) { return; }
                $list = $__BinFormatter.frombin($psResult.Result);
                $listobj.AddRange($list);
            } 
        }
                                  
        foreach($item in $listobj)
        {
            $listguid.Add($item.guid);
            $listname.Add($item.name); 
            
            if($MarkInProgress)
            {
                $psResult = $script:__Orchestrator.UpdateTask($item.guid, "", "1", "", "", $null, $null, "");
                if($__Error.CheckResult($psResult)) { return; }
            }
        } 
        
        if($ErrorWhenZeroTasks)
        {
            if($listobj.Count -eq 0)
            {
                $__Error.Exception("Task not found");
                return;
            }
        }
              
        if({{{ListTaskGuid}}} -as [System.Data.DataTable])
        {
            if(-not {{{ListTaskGuid}}}.Columns.Contains("item_id"))
            {
                $_ = {{{ListTaskGuid}}}.Columns.Add("item_id", [string]);
            } 
                
            for($indrow = 0; $indrow -lt $listguid.Count; $indrow++)
            {            
                $guid = $listguid[$indrow];

                if($indrow -ge {{{ListTaskGuid}}}.Rows.Count)
                {
                    $newrow = {{{ListTaskGuid}}}.NewRow();
                    {{{ListTaskGuid}}}.Rows.Add($newrow);
                } 
                else { $newrow = {{{ListTaskGuid}}}.Rows[$indrow]; }  
                $newrow["item_id"] = $guid;
            }
            
            while($listguid.Count -lt {{{ListTaskGuid}}}.Rows.Count)
            {
                {{{ListTaskGuid}}}.Rows.RemoveAt({{{ListTaskGuid}}}.Rows.Count - 1);
            }
        }
        else
        {
            {{{ListTaskGuid}}} = $listguid;
        }
        
        {{{ListTaskName}}} = $listname;
        {{{ListTaskObject}}} = $listobj; 
        {{{ListTaskCount}}} = $listguid.Count;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="QueueGuid" Tooltip="Queue guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskGuid" Tooltip="Task guid" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskName" Tooltip="Task name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskStatus" Tooltip="Status" CatalogName="Main properties" Type="EnumMulti" Value="" EnumVariants="New;InProgress;Success;Failed (Application);Failed (Business);Postponed;Abandoned" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterTaskPriority" Tooltip="New Priority" CatalogName="Main properties" Type="Enum" Value="Any Priority" EnumVariants="Any Priority;Low;Normal;High" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterTaskOffset" Tooltip="Task offset" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FilterMaxCount" Tooltip="MaxCount " CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FilterTags" Tooltip="Filter Tags" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CreatedLater" Tooltip="Created later" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time/Text" />
                                   <core:Property Name="MarkInProgress" Tooltip="Mark InProgress" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorWhenZeroTasks" Tooltip="ErrorWhenZeroTasks" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ListTaskGuid" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$ListTaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ListTaskName" Tooltip="Task name" CatalogName="Output" Type="Variable" Value="$ListTaskName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ListTaskObject" Caption="" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$ListTaskObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ListTaskCount" Tooltip="ListTaskCount" CatalogName="Output" Type="Variable" Value="$ListTaskCount" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Task" InternalName="OrchSetTaskStatus" FriendlyName="Set Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="69">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchSetTaskStatus{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $TaskGuid       = {{{TaskGuid}}};
    $Name           = {{{Name}}}; 
    $Status         = "{{{Status}}}"; 
    $ParametersObj  = {{{Parameters}}};
    $Priority       = "{{{Priority}}}";
    $PostponedToObj = {{{PostponedTo}}}; 
    $DeadlineObj    = {{{Deadline}}};
    $Comment        = {{{Comment}}};  
    $Timeout        = {{{Timeout}}};  
    $TagNames       = {{{TagNames}}};
        
        if([string]::IsNullOrEmpty($TaskGuid))
        {
            $__Error.Exception("Task GUID is empty");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
          
        if($Status -eq "Не изменять") { $Status = ""; }
        if($Priority -eq "Не изменять") { $Priority = ""; } 
           
        $PostponedTo = _todatetime($PostponedToObj);
        $Deadline    = _todatetime($DeadlineObj);
                             
        $psResult = $script:__Orchestrator.UpdateTask($TaskGuid, $Name, $Status, $ParametersObj, $Priority, $PostponedTo, $Deadline, $Comment, $TagNames);
        if($__Error.CheckResult($psResult)) { return; }                
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TaskGuid" Tooltip="Task guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="New name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Status" Tooltip="Status" CatalogName="Main properties" Type="Enum" Value="Не изменять" EnumVariants="Не изменять;New;InProgress;Success;Failed (Application);Failed (Business);Postponed;Abandoned" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Parameters" Tooltip="Parameters" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Priority" Tooltip="New Priority" CatalogName="Main properties" Type="Enum" Value="Не изменять" EnumVariants="Не изменять;Low;Normal;High" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="PostponedTo" Tooltip="PostponedTo " CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time/Text" />
                                   <core:Property Name="Deadline" Tooltip="Deadline" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time/Text" />
                                   <core:Property Name="TagNames" Tooltip="Tag names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Comment" Tooltip="Comment" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Task" InternalName="OrchRemoveTask" FriendlyName="Remove Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchRemoveTask{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
            
        $QueueGuid          = {{{QueueGuid}}}; 
        $FilterTaskGuid     = {{{FilterTaskGuid}}};
        $FilterTaskName     = {{{FilterTaskName}}};
        $FilterTaskStatus   = "{{{FilterTaskStatus}}}"; 
        $FilterTaskPriority = "{{{FilterTaskPriority}}}";  
        $FilterTags         = {{{FilterTags}}};
        $Timeout            = {{{Timeout}}};
   
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; } 
     
        $_filterTaskOffset = 0;
        
        if($FilterTaskStatus -eq "Любой статус") { $FilterTaskStatus = ""; }
        if($FilterTaskPriority -eq "Любой приоритет") { $FilterTaskPriority = ""; } 
        if($FilterTaskPriority -eq "Any Priority") { $FilterTaskPriority = ""; }   
        if($null -eq $FilterTaskName) { $FilterTaskName = ""; }
                 
        if([string]::IsNullOrEmpty($FilterTaskGuid) -and [string]::IsNullOrEmpty($FilterTaskName) -and [string]::IsNullOrEmpty($FilterTaskStatus) -and [string]::IsNullOrEmpty($FilterTaskPriority) -and [string]::IsNullOrEmpty($FilterTags))
        {
            $__Error.Exception("Filter is empty");
            return;
        }
        
        $ErrorMessage = "";
        $taskitemguid = "";
                 
        while($true)
        {
            $UseWildcard  = $false;
            $WildcardName = "";
            if($FilterTaskName.Contains("*") -or $FilterTaskName.Contains("?"))
            {
                $UseWildcard    = $true;
                $WildcardName   = $FilterTaskName.ToLower();
                $FilterTaskName = "";   
                $clsWild        = [MainHelpers.ClassWildcard]::new();
            }  
                  
            $taskitemguid = "";
            if([string]::IsNullOrEmpty($QueueGuid))
            {
                $taskitemguid = $FilterTaskGuid;
                if([string]::IsNullOrEmpty($taskitemguid))
                {
                    $taskitemguid = $FilterTaskName;
                }
            }                            
            elseif($UseWildcard)
            {                           
                $psResult = $script:__Orchestrator.FilterTask($QueueGuid, $false, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, 0, $FilterTags);
                if($psResult.IsError)
                {
                    $ErrorMessage = $psResult.ErrorMessage;
                    break;
                }
                $list = $__BinFormatter.frombin($psResult.Result);
                    
                foreach($item in $list)
                {
                    $str1   = $item.name.ToLower();
                    $result = $clsWild.IndexOf($str1, $WildcardName, 0, $false, $false, $false);
                    if($result.Success)
                    {
                        $taskitem     = $item;
                        $taskitemguid = $taskitem.guid;
                        break;
                    }
                }
            }
            else
            {
                $psResult = $script:__Orchestrator.FilterOneTask($QueueGuid, $MarkInProgress, $FilterTaskGuid, $FilterTaskName, $FilterTaskStatus, $FilterTaskPriority, $_filterTaskOffset, $FilterTags);
                if($psResult.IsError)
                {
                    $ErrorMessage = $psResult.ErrorMessage;
                    break;
                }
                $taskitem = $__BinFormatter.frombin($psResult.Result);
                $taskitemguid = $taskitem.guid;            
            } 
           
            break;
        }
        
        if([string]::IsNullOrEmpty($taskitemguid))
        {        
            if($ErrorMessage -eq "Task not found")
            {              
                {{{RemovedTaskGuid}}} = "";
                $__Error.Quit();
                return;
            }
            else
            {
                $__Error.Exception($ErrorMessage);
                return;
            }
        }  
        
        $psResult = $script:__Orchestrator.RemoveTask($taskitemguid);
        if($__Error.CheckResult($psResult)) { return; } 

        {{{RemovedTaskGuid}}} = $taskitem.guid;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="QueueGuid" Tooltip="Queue guid" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskGuid" Tooltip="Task guid" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskName" Tooltip="Task name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterTaskStatus" Tooltip="Status" CatalogName="Main properties" Type="EnumMulti" Value="" EnumVariants="New;InProgress;Success;Failed (Application);Failed (Business);Postponed;Abandoned" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterTaskPriority" Tooltip="New Priority" CatalogName="Main properties" Type="Enum" Value="Any Priority" EnumVariants="Any Priority;Low;Normal;High" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterTags" Tooltip="Filter Tags" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RemovedTaskGuid" Tooltip="Removed Task Guid" CatalogName="Output" Type="Variable" Value="$RemovedTaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Task" InternalName="OrchGetTask" FriendlyName="Get Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetTask{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
        $TaskGuid          = {{{TaskGuid}}}; 
    
    
        if([string]::IsNullOrEmpty($TaskGuid))
        {
            $__Error.Exception("Task GUID is empty");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; } 
     
        $psResult = $script:__Orchestrator.GetTask($TaskGuid);
        if($__Error.CheckResult($psResult)) { return; } 
       
        $taskitem = $psResult.RawResult;  
        
        {{{ResultTaskObject}}} = $taskitem;
        {{{ResultTaskGuid}}} = $taskitem.guid;
        {{{ResultTaskName}}} = $taskitem.name;
        {{{ResultTaskParameters}}} = $taskitem.TaskParameters;
        {{{ResultTaskPriority}}} = $taskitem.priority;
        {{{ResultTaskStatus}}} = $taskitem.status;
        {{{ResultTaskRetries}}} = $taskitem.retries;
        {{{ResultTaskCreated}}} = $taskitem.created;
        {{{ResultTaskUpdated}}} = $taskitem.updated;
        {{{ResultTaskPostponed}}} = $taskitem.postponed;
        {{{ResultTaskDeadline}}} = $taskitem.deadline;
        {{{ResultTaskTags}}} = $taskitem.tags;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TaskGuid" Tooltip="Task guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResultTaskObject" Caption="" Tooltip="ResultTaskObject" CatalogName="Output" Type="Variable" Value="$ResultTaskObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ResultTaskGuid" Tooltip="ResultTaskGuid" CatalogName="Output" Type="Variable" Value="$ResultTaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultTaskName" Tooltip="ResultTaskName" CatalogName="Output" Type="Variable" Value="$ResultTaskName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultTaskParameters" Tooltip="ResultTaskParameters" CatalogName="Output" Type="Variable" Value="$ResultTaskParameters" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Table/Hashtable" />
                                   <core:Property Name="ResultTaskPriority" Tooltip="ResultTaskPriority" CatalogName="Output" Type="Variable" Value="$ResultTaskPriority" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResultTaskStatus" Tooltip="ResultTaskStatus" CatalogName="Output" Type="Variable" Value="$ResultTaskStatus" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultTaskRetries" Tooltip="ResultTaskRetries" CatalogName="Output" Type="Variable" Value="$ResultTaskRetries" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultTaskCreated" Tooltip="ResultTaskCreated" CatalogName="Output" Type="Variable" Value="$ResultTaskCreated" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DateTime" />
                                   <core:Property Name="ResultTaskUpdated" Tooltip="ResultTaskUpdated" CatalogName="Output" Type="Variable" Value="$ResultTaskUpdated" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DateTime" />
                                   <core:Property Name="ResultTaskPostponed" Tooltip="ResultTaskPostponed" CatalogName="Output" Type="Variable" Value="$ResultTaskPostponed" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DateTime" />
                                   <core:Property Name="ResultTaskDeadline" Tooltip="ResultTaskDeadline" CatalogName="Output" Type="Variable" Value="$ResultTaskDeadline" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DateTime" />
                                   <core:Property Name="ResultTaskTags" Tooltip="ResultTaskTags" CatalogName="Output" Type="Variable" Value="$ResultTaskTags" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Log" InternalName="OrchAddLog" FriendlyName="Add Log" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="32">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchAddLog{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Message      = {{{Message}}}; 
    $IsScreenshot = ${{{IsScreenshot}}}; 
    $Timeout   = {{{Timeout}}};
        
        $ValueStr = VarToString($Message); 
         
        $val = _shield $ValueStr;
              
        if($IsScreenshot)
        {                      
            if($val.Length -eq 0)
            {
                $val = "Screenshot "+[DateTime]::Now.ToString();
            }
        }
        
        Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>SendLogOrkest</InternalName><UITextValue>$val</UITextValue><UITextType>{{{Level}}}</UITextType><Timeout>$Timeout</Timeout><IsScreenshot>{{{IsScreenshot}}}</IsScreenshot></block>"); 
        Write-Host("<info><ID>{{{block_native_id}}}</ID><InternalName>Log</InternalName><InternalValue>$val</InternalValue></info>");
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Message" Tooltip="Message" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Level" Tooltip="Status" CatalogName="Main properties" Type="Enum" Value="Info" EnumVariants="Info;Critical;Error;Warning;Debug" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsScreenshot" Tooltip="Create screenshot" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Is Need Stop" InternalName="OrchIsNeedStop" FriendlyName="Is Need Stop" PathStyle="{StaticResource BlueLightRhombus}" PathStyle_DragThumb="{StaticResource BlueLightRhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="23">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchIsNeedStop{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>IsNeedStopOrkest</InternalName></block>");                     
        $psResult = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
                             
        $needstop = [bool]::Parse($psresult.Result);
        
        if($needstop)
        {            
            {{{Result}}} = $true;
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {       
            {{{Result}}} = $false;
            $__Error.Jump("{{{connector-No}}}");
            return;
        }    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Result" Tooltip="Result exists" CatalogName="Output" Type="Variable" Value="$NeedStop" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Boolean" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Default Task" InternalName="OrchGetDefaultTask" FriendlyName="Get Default Task" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="16">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetDefaultTask{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
        $psresultstr = Read-Host("<Orkest><CommandName>GetDefaultTask</CommandName></Orkest>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
                    
        $taskitem = $__BinFormatter.frombin($psResult.Result); 
        {{{TaskGuid}}} = $taskitem.guid;  
        {{{TaskName}}} = $taskitem.name;
        
        {{{Parameters}}} = $taskitem.parameters; 
        {{{TaskObject}}} = $taskitem;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TaskGuid" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$TaskGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TaskName" Tooltip="Task name" CatalogName="Output" Type="Variable" Value="$TaskName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="String" />
                                   <core:Property Name="Parameters" Tooltip="Parameters" CatalogName="Output" Type="Variable" Value="$Parameters" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Table/Hashtable" />
                                   <core:Property Name="TaskObject" Caption="" Tooltip="Task object" CatalogName="Output" Type="Variable" Value="$TaskObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Calendar" InternalName="OrchGetCalendar" FriendlyName="Get Calendar" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="13">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetCalendar{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $CalendarGuid  = {{{CalendarGuid}}}; 
    $Timeout   = {{{Timeout}}};
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
 
        $psResult = $script:__Orchestrator.GetAsset($CalendarGuid);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        $item = $__BinFormatter.frombin($psResult.Result);
                                
        $listDays = New-Object 'System.Collections.Generic.List[string]'
        $json = ConvertFrom-Json -InputObject $item.text
        foreach($v in $json) { $listDays.Add($v); }
        
        {{{Result}}} = $listDays; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="CalendarGuid" Tooltip="Calendar asset guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Log Fields" InternalName="OrchAddLogFields" FriendlyName="Add Log Fields" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="33">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchAddLogFields{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Fields      = {{{Fields}}}; 
        
        $fieldsdata = @{};
        
        $vartype = $Fields.GetType().Name;
        
        if($vartype.Contains("List") -or $vartype.Contains("[]"))
        {           
            $ind = 1;
            foreach($s in $Fields)
            {       
                $_str = $s.ToString(); 
                if($_str.Length -gt 0) 
                {     
                    $key  = "Key" + $ind;
                    $ind++;
                    $fieldsdata[$key] = $_str; 
                }
            }
        }  
        elseif($vartype.Contains("Hashtable") -or $vartype.Contains("Dictionary"))
        {
            foreach($key in $Fields.Keys)
            {       
                $fieldsdata[$key] = $Fields[$key];
            }
        } 
        else
        {
            $_str = $Fields.ToString(); 
            if($_str.Length -gt 0) 
            {          
                $fieldsdata["Key"] = $_str; 
            }
        } 
        
        $val = "";
        foreach($key in $fieldsdata.Keys)
        {      
            if($val.Length -gt 0) { $val += "^^^"; }
            $val += $key + "|||" + $fieldsdata[$key];
        }  
        
        $val       = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($val)); 
        $shieldval = _shield($val);
        
        Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>AddLogFields</InternalName><UITextValue>$shieldval</UITextValue></block>"); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Fields" Tooltip="Fields" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List/Array/Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Log Fields" InternalName="OrchRemoveLogFields" FriendlyName="Remove Log Fields" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchRemoveLogFields{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Fields      = {{{Fields}}}; 
        
        $fieldsdata = @{};
        
        $vartype = $Fields.GetType().Name;
        
        if($vartype.Contains("List") -or $vartype.Contains("[]"))
        {           
            $ind = 1;
            foreach($s in $Fields)
            {       
                $_str = $s.ToString(); 
                if($_str.Length -gt 0) 
                {     
                    $key  = "Key" + $ind;
                    $ind++;
                    $fieldsdata[$key] = $_str; 
                }
            }
        }  
        elseif($vartype.Contains("Hashtable") -or $vartype.Contains("Dictionary"))
        {
            foreach($key in $Fields.Keys)
            {       
                $fieldsdata[$key] = $Fields[$key];
            }
        } 
        else
        {
            $_str = $Fields.ToString(); 
            if($_str.Length -gt 0) 
            {          
                $fieldsdata["Key"] = $_str; 
            }
        } 
        
        $val = "";
        foreach($key in $fieldsdata.Keys)
        {      
            if($val.Length -gt 0) { $val += "^^^"; }
            $val += $key + "|||" + $fieldsdata[$key];
        }  
        
        $val       = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($val)); 
        $shieldval = _shield($val);
        
        Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RemoveLogFields</InternalName><UITextValue>$shieldval</UITextValue></block>"); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Fields" Tooltip="Fields" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List/Array/Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Tag" InternalName="OrchAddTag" FriendlyName="Add Tag" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchAddTag{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $TaskGuid = {{{TaskGuid}}};
    $TagNames = {{{TagNames}}}; 
    $Timeout  = {{{Timeout}}};
        
        if([string]::IsNullOrEmpty($TaskGuid))
        {
            $__Error.Exception("Task GUID is empty");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.AddTag($TaskGuid, $TagNames);
        if($__Error.CheckResult($psResult)) { return; }                
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TaskGuid" Tooltip="Task guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TagNames" Tooltip="Tag names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Tag" InternalName="OrchRemoveTag" FriendlyName="Remove Tag" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchRemoveTag{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $TaskGuid = {{{TaskGuid}}};
    $TagNames = {{{TagNames}}}; 
    $Timeout  = {{{Timeout}}};
        
        if([string]::IsNullOrEmpty($TaskGuid))
        {
            $__Error.Exception("Task GUID is empty");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.RemoveTag($TaskGuid, $TagNames);
        if($__Error.CheckResult($psResult)) { return; }                
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TaskGuid" Tooltip="Task guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TagNames" Tooltip="Tag names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Process Version" InternalName="OrchGetProcessVersion" FriendlyName="Get Process Version" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchGetProcessVersion{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
        $ProcessGuid = {{{ProcessGuid}}};  
        $FileName    = {{{FileName}}};  
        $AddFileName = ${{{AddFileName}}};
        $Timeout     = {{{Timeout}}};
                
        $FileName = ExpandConstFilePath $FileName
    
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; } 
 
        $psResult = $script:__Orchestrator.GetProcessVersion($ProcessGuid, $FileName, $AddFileName);
        if($__Error.CheckResult($psResult)) { return; }               
                            
        {{{ResultFileName}}} = $psResult.Result; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessGuid" Tooltip="Process guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="FileName" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AddFileName" Tooltip="AddFileName" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResultFileName" Tooltip="ResultFileName" CatalogName="Output" Type="Variable" Value="$ResultFileName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Create File Group" InternalName="OrchStorageCreateFileGroup" FriendlyName="Orch Storage Create File Group" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageCreateFileGroup{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGroupName = {{{FileGroupName}}};
    $FileGroupDescription = {{{FileGroupDescription}}}; 
    $Timeout  = {{{Timeout}}};
        
        if([string]::IsNullOrEmpty($FileGroupName))
        {
            $__Error.Exception("File Group Name is empty");
            return;
        }   
        
        if($FileGroupName.Length -gt 128)
        {
            $__Error.Exception("File Group Name is longer than 128 characters");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageCreateFileGroup($FileGroupName, $FileGroupDescription);
        if($__Error.CheckResult($psResult)) { return; } 
                                                 
        $thisitem = $__BinFormatter.frombin($psResult.Result);
        {{{NewFileGroupGuid}}} = $thisitem.guid;
        
        {{{NewFileGroupObject}}} = $thisitem;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGroupName" Tooltip="FileGroup name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileGroupDescription" Tooltip="FileGroup description" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewFileGroupGuid" Caption="" Tooltip="FileGroup guid" CatalogName="Output" Type="Variable" Value="$NewFileGroupGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileGroupObject" Caption="" Tooltip="NewFileGroupObject" CatalogName="Output" Type="Variable" Value="$NewFileGroupObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Update File Group" InternalName="OrchStorageUpdateFileGroup" FriendlyName="Orch Storage Update File Group" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageUpdateFileGroup{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGroupGUID           = {{{FileGroupGUID}}};
    $NewFileGroupName        = {{{NewFileGroupName}}}; 
    $NewFileGroupDescription = {{{NewFileGroupDescription}}};
    $Timeout                 = {{{Timeout}}};
        
   
        $NewFileGroupNameStr = _tostring($NewFileGroupName);
        if($NewFileGroupNameStr.Length -gt 128)
        {
            $__Error.Exception("File Group Name is longer than 128 characters");
            return;
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageUpdateFileGroup($FileGroupGUID, $NewFileGroupNameStr, $NewFileGroupDescription);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGroupGUID" Tooltip="FileGroup guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileGroupName" Tooltip="New FileGroup name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileGroupDescription" Tooltip="New FileGroup description" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Delete File Group" InternalName="OrchStorageDeleteFileGroup" FriendlyName="Orch Storage Delete File Group" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageDeleteFileGroup{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGroupGUID = {{{FileGroupGUID}}};   
    $Timeout       = {{{Timeout}}};
        
           
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageDeleteFileGroup($FileGroupGUID);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGroupGUID" Tooltip="FileGroup guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Read File Group" InternalName="OrchStorageReadFileGroup" FriendlyName="Orch Storage Read File Group" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageReadFileGroup{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGroupGUID = {{{FileGroupGUID}}};
    $Timeout       = {{{Timeout}}};
        
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageReadFileGroup($FileGroupGUID);
        if($__Error.CheckResult($psResult)) { return; } 
                                                 
        $thisitem = $__BinFormatter.frombin($psResult.Result);
        
        {{{FileGroupObject}}} = $thisitem;  
        {{{Files}}} = $thisitem.files;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGroupGUID" Tooltip="FileGroup guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileGroupObject" Caption="" Tooltip="FileGroupObject" CatalogName="Output" Type="Variable" Value="$FileGroupObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="Files" Tooltip="Files" CatalogName="Output" Type="Variable" Value="$Files" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Create File" InternalName="OrchStorageCreateFile" FriendlyName="Orch Storage Create File" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageCreateFile{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        $FileGroupGUID   = {{{FileGroupGUID}}};
        $FileName        = {{{FileName}}};
        $FileDescription = {{{FileDescription}}}; 
        $FilePath        = {{{FilePath}}};   
        $FilePathName    = {{{FilePathName}}};
        $Timeout         = {{{Timeout}}};
                     
        $FileName = _tostring($FileName);
        if($FileName.Length -gt 128)
        {
            $__Error.Exception("File Name is longer than 128 characters");
            return;
        } 
        
        if(-not [string]::IsNullOrEmpty($FilePath))
        {
            $FilePath = ExpandConstFilePath $FilePath
            
            if(-not [System.IO.File]::Exists($FilePath))
            {
                $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FilePath");
                return;
            }  
            
            if([string]::IsNullOrEmpty($FilePathName)) { $FilePathName = [System.IO.Path]::GetFileName($FilePath); }
        } 
                
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageCreateFile($FileGroupGUID, $FileName, $FileDescription, $FilePath, $FilePathName);
        if($__Error.CheckResult($psResult)) { return; } 

        $thisitem = $__BinFormatter.frombin($psResult.Result);
        {{{NewFileGuid}}} = $thisitem.guid;
        
        {{{NewFileObject}}} = $thisitem;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGroupGUID" Tooltip="FileGroup guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="FileGroup name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilePath" Tooltip="File path" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilePathName" Tooltip="FilePathName" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileDescription" Tooltip="FileGroup description" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewFileGuid" Tooltip="File GUID" CatalogName="Output" Type="Variable" Value="$NewFileGuid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileObject" Tooltip="NewFileObject" CatalogName="Output" Type="Variable" Value="$NewFileObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Update File" InternalName="OrchStorageUpdateFile" FriendlyName="Orch Storage Update File" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageUpdateFile{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                      
    $FileGUID           = {{{FileGUID}}};
    $NewFileGroupGUID   = {{{NewFileGroupGUID}}};
    $NewFileName        = {{{NewFileName}}};
    $NewFileDescription = {{{NewFileDescription}}}; 
    $NewFilePath        = {{{NewFilePath}}};   
    $NewFilePathName    = {{{NewFilePathName}}};
    $Timeout            = {{{Timeout}}};
        
            
        $NewFileName = _tostring($NewFileName);
        if($NewFileName.Length -gt 128)
        {
            $__Error.Exception("File Name is longer than 128 characters");
            return;
        } 
          
        if(-not [string]::IsNullOrEmpty($NewFilePath))
        {
            $NewFilePath = ExpandConstFilePath $NewFilePath
            
            if(-not [System.IO.File]::Exists($NewFilePath))
            {
                $__Error.Exception("ERRORCONST_PATHNOTFOUND: $NewFilePath");
                return;
            }  
            
            if([string]::IsNullOrEmpty($NewFilePathName)) { $NewFilePathName = [System.IO.Path]::GetFileName($NewFilePath); }
        }
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageUpdateFile($FileGUID, $NewFileGroupGUID, $NewFileName, $NewFileDescription, $NewFilePath, $NewFilePathName);
        if($__Error.CheckResult($psResult)) { return; } 

    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGUID" Tooltip="FileGUID" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileGroupGUID" Tooltip="FileGroup guid" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileName" Tooltip="FileGroup name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFilePath" Tooltip="File path" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFilePathName" Tooltip="FilePathName" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileDescription" Tooltip="FileGroup description" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Delete File" InternalName="OrchStorageDeleteFile" FriendlyName="Orch Storage Delete File" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageDeleteFile{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGUID = {{{FileGUID}}};   
    $Timeout       = {{{Timeout}}};
        
           
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageDeleteFile($FileGUID);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGUID" Tooltip="FileGroup guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Read File" InternalName="OrchStorageReadFile" FriendlyName="Orch Storage Read File" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageReadFile{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGUID    = {{{FileGUID}}};  
    $TargetPath  = {{{TargetPath}}};   
    $AddFileName = ${{{AddFileName}}};
    $Timeout     = {{{Timeout}}};
        
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageReadFile($FileGUID);
        if($__Error.CheckResult($psResult)) { return; } 
                                                 
        $thisitem = $__BinFormatter.frombin($psResult.Result);
        
        {{{FileObject}}} = $thisitem;  
        
        if(-not [string]::IsNullOrEmpty($TargetPath))
        {
            $TargetPath = ExpandConstFilePath $TargetPath
            if($AddFileName)
            {
                $TargetPath = [System.IO.Path]::Combine($TargetPath, $thisitem.file_name);                 
            } 
            
            [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($TargetPath));
                
            $thisitem.Save($TargetPath);        
            {{{ResultFilePath}}} = $TargetPath;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGUID" Tooltip="File guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TargetPath" Tooltip="TargetPath" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AddFileName" Tooltip="AddFileName" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileObject" Caption="" Tooltip="FileObject" CatalogName="Output" Type="Variable" Value="$FileObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ResultFilePath" Tooltip="ResultFilePath" CatalogName="Output" Type="Variable" Value="$FilePath" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Write Text" InternalName="OrchStorageWriteText" FriendlyName="Orch Storage Write Text" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="12">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageWriteText{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGUID = {{{FileGUID}}};  
    $Text     = {{{Text}}};   
    $Timeout  = {{{Timeout}}};
        
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageWriteText($FileGUID, $Text);
        if($__Error.CheckResult($psResult)) { return; }      
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGUID" Tooltip="File guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Text" Tooltip="Text" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Orch Storage Read Text" InternalName="OrchStorageReadText" FriendlyName="Orch Storage Read Text" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_orchestrator.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OrchStorageReadText{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileGUID = {{{FileGUID}}};  
    $Timeout  = {{{Timeout}}};
        
        
        if($null -eq $script:__Orchestrator) { $script:__Orchestrator = [MainHelpers.ClassOrchestrator]::new(); }
        try 
        { 
            $script:__Orchestrator.Timeout = $Timeout;
            $script:__Orchestrator.OrchestratorV = $script:__OrchestratorV;  
            $script:__Orchestrator.JobGuid = $script:__JobGuid;
        } 
        catch{}
        $psresult = $script:__Orchestrator.Initialize();   
        if($__Error.CheckResult($psResult)) { return; }  
                  
        $psResult = $script:__Orchestrator.StorageReadText($FileGUID);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{FileText}}} = $psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileGUID" Tooltip="File guid" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileText" Tooltip="FileText" CatalogName="Output" Type="Variable" Value="$FileText" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="SAPToolboxSettings" Name="SAP Automation" ToolboxGridType="List" AliasDescription="Work with SAP Logon applications via SAP GUI Scripting">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Create Connection" InternalName="SAPCreateConnection" FriendlyName="Create Connection" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="40" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPCreateConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $Server         = {{{Server}}};
    $NumberInstance = {{{NumberInstance}}};
    $SID            = {{{SID}}};
    $ClientID       = {{{ClientID}}};
    $User           = {{{User}}};
    $PasswordObj       = {{{Password}}};
    $Language       = "{{{Language}}}";
    $Timeout        = {{{Timeout}}};    
  
        {AddTypesSAP}
        
		$Password = _checkpassword($PasswordObj);
		
        $SAP = [SAPhelpers.ClassSAP]::new(); 
                                            
        $Server        = $Server + " " + $NumberInstance;
        $sapconnection = $SAP.CreateConnection($Server, $SID, $ClientID, $User, $Password, $Language, $Timeout); 
        
        if(!$sapconnection)
        {
            $__Error.Exception("ERRORCONST_ERRORSAPCONNECT: sapconnection is null");
            return;
        } 
        
        if(-not $sapconnection.GetSession(0))
        {
            $__Error.Exception("ERRORCONST_ERRORSAPCONNECT: session not found");
            return;
        } 
        
        if(-not $sapconnection.GetWindow(0))
        {
            $__Error.Exception("ERRORCONST_ERRORSAPCONNECT: window not found");
            return;
        }

        {{{Connection}}} = $sapconnection;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="Server for connect. Domain or IP address" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NumberInstance" Tooltip="Number instance" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SID" Tooltip="System id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ClientID" Tooltip="Client id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Language" Tooltip="Language GUI" CatalogName="Main properties" Type="Enum" Value="EN" EnumVariants="EN;RU" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout wait in second" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Connection" Tooltip="Return object SAP connection" CatalogName="Output" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Connection" InternalName="SAPCloseConnection" FriendlyName="Close Connection" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPCloseConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}};
  
        {AddTypesSAP}
        
        $sapconnection.CloseConnection(); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Connect Connection" InternalName="SAPConnectConnection" FriendlyName="Connect Connection" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPConnectConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $IndexConnection = {{{IndexConnection}}};
    $IndexSession    = {{{IndexSession}}};
    $IndexWindow     = {{{IndexWindow}}};
  
        {AddTypesSAP}
        
        $SAP = [SAPhelpers.ClassSAP]::new(); 
                                                  
        $sapconnection = $SAP.GetSAPConnection($IndexConnection); 
        
        if(!$sapconnection)
        {
            $__Error.Exception("ERRORCONST_ERRORSAPCONNECT");
            return;
        } 
        
        if(-not $sapconnection.GetSession($IndexSession))
        {
            $__Error.Exception("ERRORCONST_ERRORSAPCONNECT");
            return;
        } 
        
        if(-not $sapconnection.GetWindow($IndexWindow))
        {
            $__Error.Exception("ERRORCONST_ERRORSAPCONNECT");
            return;
        }

        {{{Connection}}} = $sapconnection;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="IndexConnection" Tooltip="Index connection" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexSession" Tooltip="Index session in connection" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexWindow" Tooltip="Index window in session" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Connection" Tooltip="Return object SAP connection" CatalogName="Output" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Window" InternalName="SAPSelectWindow" FriendlyName="Select Window" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="10" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPConnectConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}};
    $IndexWindow     = {{{IndexWindow}}};
  
        {AddTypesSAP} 
        
        {{{NewConnection}}} = $sapconnection;
          
        if(!$sapconnection.GetWindow($IndexWindow))
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK");
            return;
        }

        {{{NewConnection}}} = $sapconnection;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="IndexWindow" Tooltip="Index window in session" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewConnection" Tooltip="Return object SAP connection" CatalogName="Output" Type="Variable" Value="$NewSAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="NewConnection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Click Element" InternalName="SAPClick" FriendlyName="Click Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="27" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPClick{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};  
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
  
        {AddTypesSAP}
            
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "Click"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }  
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Press Enter Element" InternalName="SAPPressEnter" FriendlyName="Press Enter Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPPressEnter{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}}; 
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
  
        {AddTypesSAP}
                
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "PressEnter"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Double Click Element" InternalName="SAPDoubleClick" FriendlyName="Double Click Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPDoubleClick{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "DoubleClick"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Element" InternalName="SAPSelect" FriendlyName="Select Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPSelect{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                 
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "Select"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="UnSelect Element" InternalName="SAPUnSelect" FriendlyName="UnSelect Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="10" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPUnSelect{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
               
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "UnSelect"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Check State Element" InternalName="SAPState" FriendlyName="Check State Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="16" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPState{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
               
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "State"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        {{{Value}}} = [System.Convert]::ToBoolean($result.Value); 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Result state" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Logical" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Collapse Element" InternalName="SAPCollapse" FriendlyName="Collapse Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPCollapse{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
             
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "Collapse"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Expand Element" InternalName="SAPExpand" FriendlyName="Expand Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPExpand{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
               
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "Expand"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Text Element" InternalName="SAPGetText" FriendlyName="Get Text Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="14" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPGetText{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
              
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "GetText"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        {{{Value}}} = [string]$result.Value;  
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Logical" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Text Element" InternalName="SAPSetText" FriendlyName="Set Text Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="14" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPSetText{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}}; 
    $Value         = {{{SAPValue}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
               
        Start-Sleep -Seconds $DelayBefore;
               
        $parameters = New-Object Collections.Generic.List[object];
        $parameters.Add($Value);
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "SetText"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPValue" Tooltip="Value to set element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Column Count" InternalName="SAPColumnCount" FriendlyName="Get Column Count" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPColumnCount{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                 
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "ColumnCount"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }  
        
        {{{Value}}} = [int]$result.Value;   
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Row Count" InternalName="SAPRowCount" FriendlyName="Get Row Count" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPRowCount{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
            
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "RowCount"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }    
        
        {{{Value}}} = [int]$result.Value;   
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Count Child Elements" InternalName="SAPCount" FriendlyName="Get Count Child Elements" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPCount{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "Count"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }   
        
        {{{Value}}} = [int]$result.Value;
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="HTML Events" InternalName="SAPSapEvent" FriendlyName="HTML Events" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPSapEvent{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};  
    $FrameName     = {{{SAPFrameName}}};
    $PostData      = {{{SAPPostData}}};
    $Url           = {{{SAPUrl}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
             
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object]; 
        $parameters.Add($FrameName);
        $parameters.Add($PostData);
        $parameters.Add($Url);
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "SapEvent"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPFrameName" Tooltip="Frame name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPPostData" Tooltip="Post data" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPUrl" Tooltip="Url" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Export Table" InternalName="SAPExportTable" FriendlyName="Export Table" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="17" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPExportTable{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
             
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "ExportTable"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        $returnvalue = [string]$result.Value;
        {{{Result}}} = $__BinFormatter.frombin($returnvalue);  
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return DataTable result" CatalogName="Output" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Import Table" InternalName="SAPImportTable" FriendlyName="Import Table" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="13" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPImportTable{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}}; 
    $Table         = {{{Table}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        $parameters.Add($__BinFormatter.tobin($Table));
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "ImportTable"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="DataTable to import" CatalogName="Required" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Cell Value" InternalName="SAPGetCellValue" FriendlyName="Get Cell Value" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="19" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPGetCellValue{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $Column        = {{{SAPColumn}}};   
    $Row           = {{{SAPRow}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        $parameters.Add([Convert]::ToInt32($Column));  
        $parameters.Add([Convert]::ToInt32($Row));
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "GetCellValue"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray(); 
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        } 
        
        {{{Value}}} = [string]$result.Value;  
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPColumn" Tooltip="Index column. Start zero" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SAPRow" Tooltip="Index row. Start zero" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Value" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Cell Value" InternalName="SAPSetCellValue" FriendlyName="Set Cell Value" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="13" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPSetCellValue{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $Column        = {{{SAPColumn}}};   
    $Row           = {{{SAPRow}}};
    $Value         = {{{SAPValue}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
              
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        $parameters.Add([Convert]::ToInt32($Column));  
        $parameters.Add([Convert]::ToInt32($Row));
        $parameters.Add($Value);
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "SetCellValue"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }
 
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPColumn" Tooltip="Index column. Start zero" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SAPRow" Tooltip="Index row. Start zero" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SAPValue" Tooltip="Result value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Current Date From Calendar" InternalName="SAPCurrentDate" FriendlyName="Get Text Element" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPCurrentDate{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
            
        Start-Sleep -Seconds $DelayBefore;
        
        $parameters = New-Object Collections.Generic.List[object];
        
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "CurrentDate"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }  
        
        {{{Value}}} = [DateTime]::ParseExact([string]$result.Value, "yyyyMMdd", [System.Globalization.CultureInfo]::InvariantCulture); 
            
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Result DateTime value" CatalogName="Output" Type="Variable" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Range Calendar" InternalName="SAPSelectRange" FriendlyName="Select Range Calendar" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_SAP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="20" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPSelectRange{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $SAPDateFrom   = {{{SAPDateFrom}}};   
    $SAPDateTo     = {{{SAPDateTo}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
    
        {AddTypesSAP}
                
        Start-Sleep -Seconds $DelayBefore;
        
        if($SAPDateFrom.GetType().Name -eq "String") { $SAPDateFrom = [datetime]::Parse($SAPDateFrom); }
        if($SAPDateTo.GetType().Name -eq "String") { $SAPDateTo = [datetime]::Parse($SAPDateTo); }
        
        $parameters = New-Object Collections.Generic.List[object];
        $parameters.Add($SAPDateFrom.ToString("yyyyMMdd"));  
        $parameters.Add($SAPDateTo.ToString("yyyyMMdd"));
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "SelectRange"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
        if($result.IsError)
        {
            $__Error.Exception("ERRORCONST_SAPERRORBLOCK: " + [string]$result.Value);
            return;
        }
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SAPDateFrom" Tooltip="DateTime value from" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time/Text" />
                                   <core:Property Name="SAPDateTo" Tooltip="DateTime value to" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time/Text" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="SAP Element Exists" InternalName="SAPElementExists" FriendlyName="SAP Element Exists" PathStyle="{StaticResource BlueStrongRhombus}" PathStyle_DragThumb="{StaticResource BlueStrongRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_SAP.png" ImageType="NoImage" Proportional="True" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SAPElementExists{{{block_id}}}
{                   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $sapconnection = {{{Connection}}}; 
    $ElementId     = {{{ElementId}}};
    $DelayBefore   = {{{DelayBefore}}}; 
    $DelayAfter    = {{{DelayAfter}}};
    $WaitTime      = {{{WaitTime}}};
        
        {AddTypesSAP}   
        
        $parameters = New-Object Collections.Generic.List[object];
        
        $sapBlock            = [SAPhelpers.SAPBlock]::new();
        $sapBlock.Action     = "ElementExists"; 
        $sapBlock.ElementId  = $ElementId;       
        $sapBlock.Parameters = $parameters.ToArray();  
        $sapBlock.WaitTime   = $WaitTime;
        
        $result = $sapconnection.InvokeBlock($sapBlock); 
      
        if(!$result.IsError)
        {         
            {{{Result}}} = $true;
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {    
            {{{Result}}} = $false;
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object SAP connection" CatalogName="Required" Type="Variable" Value="$SAPConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ElementId" Tooltip="Element id" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result exists" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Boolean" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Dialogs" Name="Dialogs" ToolboxGridType="List" AliasDescription="Show message boxes to user, ask for user input via message box, get file path using Open File Dialog or Save File Dialog, browser for folders, communicate with user during automation">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Show Window" InternalName="InvokeShowWindow" FriendlyName="Show Window" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="150" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\ico_Window.png" ImageType="TopImage " Proportional="True" Version="76" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InvokeShowWindow{{{block_id}}}
{         
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
            
    $Configuration      = {{{Configuration}}}; 
    $ExistsWindowObject = {{{ExistsWindowObject}}};
    $IsModal            = ${{{IsModal}}}; 
    $AngleBinding       = "{{{AngleBinding}}}"; 
    $OffsetXObj         = {{{OffsetX}}};
    $OffsetYObj         = {{{OffsetY}}};  
    $ProcessID          = {{{ProcessID}}};
    
        {AddTypesInvokeShowWindow}
          
        if($null -eq $Configuration) { $Configuration = ""; }
        if($null -eq $ExistsWindowObject) { $ExistsWindowObject = ""; }
               
        $IsSelector   = $false;        
        $SelectorRect = [System.Drawing.Rectangle]::Empty;
        if('{{{Selector}}}'.Length -gt 0)
        {
            $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>BaseSelector</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Panel</InternalType>{{{Selector}}}</block>");                       
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; }               
                    
            $SelectorRect = $__BinFormatter.frombin($psResult.Result); 
            $IsSelector   = $true;
        } 
        
        if($null -eq $OffsetXObj) { $OffsetXObj = ""; }
        if($null -eq $OffsetYObj) { $OffsetYObj = ""; }
                       
        $typename = $ExistsWindowObject.GetType().Name;
        if($typename -ne "ClassWindowEditorObject")
        {
            $obj = [WindowEditor.ClassWindowEditorObject]::LoadJsonConf($Configuration);  
            if($null -eq $obj)
            {
                $__Error.Exception("ERRORCONST_CONFIGURATIONERROR");
                return;
            }
        }  
        else
        {
            $obj = $ExistsWindowObject;
        }
        
        $obj.Config.IsModal = $IsModal;
        
        foreach($prop in $obj.Config.Properties)
        {
            $varname = "";
            if($prop.IsName2Variable) { $varname = $prop.Name2; }
            elseif($prop.IsSameDirection)
            {
                if($prop.IsName1Variable) { $varname = $prop.Name1; }
                elseif($prop.IsName2Variable) { $varname = $prop.Name2; }
            }
            if([string]::IsNullOrEmpty($varname)) { continue; }

            if($__thisClass)
            {               
                $_yeslocalvar = $false;
                $_varname = $__thisClass + "." + $varname;
                $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                Invoke-Expression $checkVarCommand

                if($_yeslocalvar)
                {
                    $prop.Value = $_thisvar;
                    continue;
                }
            }

            $thisvar = Get-Variable -Scope Script -Name $varname -ErrorAction SilentlyContinue;
            if($null -eq $thisvar) { continue; }
            $prop.Value = $thisvar.Value;
        } 
           
        $obj.ShowScreenCenter = $false; 
        $obj.ShowScreenTopLeft = $false;
        $obj.ShowScreenTopRight = $false;
        $obj.ShowScreenBottomRight = $false;
        $obj.ShowScreenBottomLeft = $false;
        
        $ShowX                = -1000;
        $ShowY                = -1000;   
        
        if($IsSelector)
        {
            if(-not $SelectorRect.IsEmpty)
            {
                $OffsetX = _toint($OffsetXObj);
                $OffsetY = _toint($OffsetYObj); 
                if($AngleBinding -eq "TopLeft")
                {
                    $ShowX = $SelectorRect.Left + $OffsetX;
                    $ShowY = $SelectorRect.Top + $OffsetY;
                }
                elseif($AngleBinding -eq "TopRight")
                {
                    $ShowX = $SelectorRect.Right + $OffsetX;
                    $ShowY = $SelectorRect.Top + $OffsetY;
                }
                elseif($AngleBinding -eq "BottomRight")
                {
                    $ShowX = $SelectorRect.Right + $OffsetX;
                    $ShowY = $SelectorRect.Bottom + $OffsetY;
                }
                elseif($AngleBinding -eq "BottomLeft")
                {
                    $ShowX = $SelectorRect.Left + $OffsetX;
                    $ShowY = $SelectorRect.Bottom + $OffsetY;
                }
                else
                {
                    $ShowX = $SelectorRect.Left + $SelectorRect.Width / 2 + $OffsetX;
                    $ShowY = $SelectorRect.Top + $SelectorRect.Height / 2 + $OffsetY;
                }
            }
            else
            {
                $obj.ShowScreenCenter = $true;
            }
        }
        else
        {
            if($AngleBinding -eq "TopLeft")
            {
                $obj.ShowScreenTopLeft = $true; 
                $ShowX = _toint($OffsetXObj);
                $ShowY = _toint($OffsetYObj);
            }
            elseif($AngleBinding -eq "TopRight")
            {
                $obj.ShowScreenTopRight = $true; 
                $ShowX = _toint($OffsetXObj);
                $ShowY = _toint($OffsetYObj);
            }
            elseif($AngleBinding -eq "BottomRight")
            {
                $obj.ShowScreenBottomRight = $true; 
                $ShowX = _toint($OffsetXObj);
                $ShowY = _toint($OffsetYObj);
            }
            elseif($AngleBinding -eq "BottomLeft")
            {
                $obj.ShowScreenBottomLeft = $true; 
                $ShowX = _toint($OffsetXObj);
                $ShowY = _toint($OffsetYObj);
            }
            elseif($OffsetXObj.Length -gt 0 -or $OffsetYObj.Length -gt 0)
            {      
                
                $ShowX = _toint($OffsetXObj);
                $ShowY = _toint($OffsetYObj);
            }
        }
               
        $obj.ShowX = $ShowX;
        $obj.ShowY = $ShowY;
        
        $obj.ShowWindow();
        
        foreach($prop in $obj.Config.Properties)
        {          
            try
            {
                $varname = "";
                if($prop.IsName1Variable) { $varname = $prop.Name1; }
                elseif($prop.IsSameDirection)
                {
                    if($prop.IsName1Variable) { $varname = $prop.Name1; }
                    elseif($prop.IsName2Variable) { $varname = $prop.Name2; }
                }
                if([string]::IsNullOrEmpty($varname)) { continue; }

                $varvalue = $prop.Value;
                if($__thisClass)
                {
                    $_yeslocalvar = $false;
                    $_varname = $__thisClass + "." + $varname;
                    $checkVarCommand = 'if($' + $__thisClass + '.ExistsVariable("'+ $varname +'")) { $_yeslocalvar = $true; $_thisvar = $'+$_varname+'; }';
                    Invoke-Expression $checkVarCommand

                    if($_yeslocalvar)
                    {
                        $setVarCommand = '$' + $_varname + ' = $varvalue';
                        Invoke-Expression $setVarCommand
                        continue;
                    }
                }

                Set-Variable -Name $varname -Value $varvalue -Scope Script;  
            }
            catch{}
        }
        
        {{{ControlEvent}}} = $obj.ControlEvent;
        {{{WindowObject}}} = $obj;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }       
    $__Error.Quit();  
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Configuration" Tooltip="Configuration json code" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Object" />
                                   <core:Property Name="ExistsWindowObject" Tooltip="ExistsWindowObject" CatalogName="Main properties" Type="Expression" Value="$WindowObject" EnumVariants="" Visible="True" DefaultValue="" ValueType="Object" />
                                   <core:Property Name="IsModal" Caption="" Tooltip="IsModal" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AngleBinding" Tooltip="AngleBinding" CatalogName="Main properties" Type="Enum" Value="Default" EnumVariants="Default;TopLeft;TopRight;BottomRight;BottomLeft" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OffsetX" Tooltip="OffsetX" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="OffsetY" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ControlEvent" Tooltip="Control Event" CatalogName="Output" Type="Variable" Value="$ControlEvent" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowObject" Tooltip="Window object" CatalogName="Output" Type="Variable" Value="$WindowObject" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Message Box" InternalName="MessageBox" FriendlyName="Message Box" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Dialogs.png" ImageType="LeftImage" Proportional="True" Version="65">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MessageBox{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
          
        $Title       = {{{Title}}};
        $Message     = {{{Message}}}; 
        $WaitTimeObj = {{{WaitTime}}};
    
        $form = [PSHelpers.ClassMessageBox]::new();
       
        try { $form.WaitTime = _toint($WaitTimeObj); }
        catch{}
        
        $Message = VarToString($Message);
        $result  = $form.Show($Title, $Message, "{{{Buttons}}}", "{{{MessageImage}}}");
        if($result.IsError)
        {           
            $__Error.Exception($result.ErrorMessage);
            return;
        } 
           
        {{{Result}}} = $result.Value;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Title" Tooltip="Shows this string or variable in the titile of message box" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Message" Tooltip="Shows this string or variable in the message box" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Buttons" Tooltip="What buttons to display" CatalogName="Main properties" Type="Enum" Value="OK" EnumVariants="OK;OKCancel;YesNo;YesNoCancel" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="MessageImage" Tooltip="What image to display" CatalogName="Main properties" Type="Enum" Value="None" EnumVariants="None;Error;Exclamation;Hand;Information;Question;Warning;Stop;Asterisk" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="WaitTime" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Input Box" InternalName="InputBox" FriendlyName="Input Box" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Input box.png" ImageType="LeftImage" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InputBox{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
             
        $Title        = {{{Title}}};
        $Message      = {{{Message}}};  
        $DefaultValue = {{{DefaultValue}}};
        $WaitTimeObj  = {{{WaitTime}}};
    
        $form = [PSHelpers.ClassInputBox]::new(); 
        
        try { $form.WaitTime = _toint($WaitTimeObj); }
        catch{}
        
        $Message      = VarToString($Message); 
        
        $result = $form.Show($Title, $Message, $DefaultValue);
        if($result.IsError)
        {           
            $__Error.Exception($result.ErrorMessage);
            return;
        } 
        if($result.IsCancel)
        {           
            {{{Result}}} = $DefaultValue;
        } 
        else
        {
            {{{Result}}} = $result.Value; 
        }                                           
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Title" Tooltip="Shows this string or variable in the titile of message box" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Message" Tooltip="Shows this string or variable in the message box" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DefaultValue" Caption="" Tooltip="DefaultValue" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WaitTime" Tooltip="WaitTime" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Folder Browser Dialog" InternalName="FolderBrowserDialog" FriendlyName="Folder Browser Dialog" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Open.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FolderBrowserDialog{{{block_id}}}
{      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $Title  = {{{Title}}};
    
        $form = [PSHelpers.ClassFolderBrowserDialog]::new(); 
        
        $InitialDirectory = $__MainSetting.LoadInitialDirectory();
        
        $result = $form.Show($Title, $InitialDirectory);
        if($result.IsError)
        {           
            $__Error.Exception($result.ErrorMessage);
            return;
        } 
        if($result.IsCancel)
        {           
            $__Error.Jump("{{{connector-Cancel}}}");
            return;
        } 
        
        $__MainSetting.SaveInitialDirectory($result.Value);
        {{{Result}}} = $result.Value;       
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Title" Tooltip="Shows this string or variable in the titile of dialog" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Selected file name" CatalogName="Output" Type="Variable" Value="$PathName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Cancel" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Отмена" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Open File Dialog" InternalName="OpenFileDialog" FriendlyName="Open File Dialog" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Open.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="43" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OpenFileDialog{{{block_id}}}
{      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $Title  = {{{Title}}};
    $Filter = {{{Filter}}};
    
        $form = [PSHelpers.ClassOpenFileDialog]::new(); 
        
        $InitialDirectory = $__MainSetting.LoadInitialDirectory();
        
        $result = $form.Show($Title, $Filter, $InitialDirectory);
        if($result.IsError)
        {           
            $__Error.Exception($result.ErrorMessage);
            return;
        } 
        if($result.IsCancel)
        {           
            $__Error.Jump("{{{connector-Cancel}}}");
            return;
        } 
        
        $__MainSetting.SaveInitialDirectory([System.IO.Path]::GetDirectoryName($result.Value));
        {{{Result}}} = $result.Value;       
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Title" Tooltip="Shows this string or variable in the titile of dialog" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Filter" Tooltip="Filter files" CatalogName="Main properties" Type="Expression" Value="&quot;All files (*.*)|*.*&quot;" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Selected file name" CatalogName="Output" Type="Variable" Value="$FileName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Cancel" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Отмена" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save File Dialog" InternalName="SaveFileDialog" FriendlyName="Save File Dialog" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Save.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveFileDialog{{{block_id}}}
{      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $Title        = {{{Title}}};
    $Filter       = {{{Filter}}}; 
    $DefaultValue = {{{DefaultValue}}};
    
        $form = [PSHelpers.ClassSaveFileDialog]::new(); 
        
        $InitialDirectory = $__MainSetting.LoadInitialDirectory();
        
        $result = $form.Show($Title, $Filter, $InitialDirectory, $DefaultValue);
        if($result.IsError)
        {           
            $__Error.Exception($result.ErrorMessage);
            return;
        } 
        if($result.IsCancel)
        {           
            $__Error.Jump("{{{connector-Cancel}}}");
            return;
        } 
        
        $__MainSetting.SaveInitialDirectory([System.IO.Path]::GetDirectoryName($result.Value));
        {{{Result}}} = $result.Value;       
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Title" Tooltip="Shows this string or variable in the titile of dialog" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Filter" Tooltip="Filter files" CatalogName="Main properties" Type="Expression" Value="&quot;All files (*.*)|*.*&quot;" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DefaultValue" Tooltip="DefaultValue" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Selected file name" CatalogName="Output" Type="Variable" Value="$FileName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Cancel" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Отмена" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Man in the loop" InternalName="ManLoop" FriendlyName="Man in the loop" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_ManLoop.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Proportional="True" Version="9" ProtoName="ManInTheLoop">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ManLoop{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                     
    $FileName           = {{{FileName}}};  
    $InList             = {{{InList}}}; 
    $InHashtable        = {{{InHashtable}}}; 
    $InTable            = {{{InTable}}};   
    $ButtonsNames       = "{{{ButtonsNames}}}"; 
    $CustomButtonsNames = {{{CustomButtonsNames}}};
            
        {AddTypesManLoop}
          
        {{{OutList}}} = $InList;
        {{{OutHashtable}}} = $InHashtable; 
        {{{OutTable}}} = $InTable; 
        {{{OutButtonName}}} = "";
            
        if($ButtonsNames -ne "Custom") { $CustomButtonsNames = $ButtonsNames; } 
                                        
        $binInList = $__BinFormatter.tobin($InList);
        $binInHashtable = $__BinFormatter.tobin($InHashtable);
        $binInTable = $__BinFormatter.tobin($InTable);
                               
        $FileName = ExpandConstFilePath $FileName
        
        $manloop = [ManLoop.ClassManLoop]::new();
        $resultdata  = $manloop.Processed($FileName,$binInList,$binInHashtable,$binInTable,$CustomButtonsNames); 
        if(!$resultdata)
        {           
            $__Error.Exception("Error processed block...");
            return;
        }  
        
        if($resultdata.IsList)
        {
            {{{OutList}}} = $__BinFormatter.frombin($resultdata.List); 
        } 
        
        if($resultdata.IsHashtable)
        {
            {{{OutHashtable}}} = $__BinFormatter.frombin($resultdata.Hashtable); 
        }
        
        if($resultdata.IsTable)
        {
            {{{OutTable}}} = $__BinFormatter.frombin($resultdata.Table); 
        }
        
        {{{OutButtonName}}} = $resultdata.OutButtonName;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="File name" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InList" Tooltip="In List" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="InHashtable" Tooltip="In Hashtable" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="InTable" Tooltip="In Table" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ButtonsNames" Tooltip="Buttons Names" CatalogName="Main properties" Type="Enum" Value="OK/Cancel" EnumVariants="OK/Cancel;Accept/Reject;Custom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CustomButtonsNames" Tooltip="Custom Buttons Names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OutList" Tooltip="Out List" CatalogName="Output" Type="Variable" Value="$OutList" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="OutHashtable" Tooltip="Out Hashtable" CatalogName="Output" Type="Variable" Value="$OutHashtable" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="OutTable" Tooltip="Out Table" CatalogName="Output" Type="Variable" Value="$OutTable" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="OutButtonName" Tooltip="Out Button Name" CatalogName="Output" Type="Variable" Value="$ButtonName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="MediaPlayer" InternalName="MediaPlayer" FriendlyName="MediaPlayer" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Music.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="34">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MediaPlayer{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $FileName       = {{{FileName}}}; 
    $PlayBackground = ${{{PlayBackground}}};
    $PlayType       = "{{{PlayType}}}";
          
        
        if($PlayType -eq "Asterisk") {
            [System.Media.SystemSounds]::Asterisk.Play();
            $__Error.Quit();
            return;
        }
        elseif ($PlayType -eq "Beep") {
            [System.Media.SystemSounds]::Beep.Play();
            $__Error.Quit();
            return;
        }
        elseif ($PlayType -eq "Exclamation") {
            [System.Media.SystemSounds]::Exclamation.Play();  
            $__Error.Quit();
            return;
        }
        elseif ($PlayType -eq "Hand") {
            [System.Media.SystemSounds]::Hand.Play(); 
            $__Error.Quit();
            return;
        }
        elseif ($PlayType -eq "Question") {
            [System.Media.SystemSounds]::Question.Play(); 
            $__Error.Quit();
            return;
        }
        
        $FileName = ExpandConstFilePath $FileName $true
             
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }
        
        Add-Type -AssemblyName PresentationCore;
        $_MediaPlayer = New-Object System.Windows.Media.MediaPlayer;
        [uri]$_song = $FileName;
        $_MediaPlayer.Open($_song);
        $_time = [DateTime]::Now;
        while(-not $_MediaPlayer.NaturalDuration.HasTimeSpan)
        {     
            if(([DateTime]::Now - $_time).TotalMilliseconds -gt 5000)
            {
                $__Error.Exception("Error get duration...");
                return;
            }
            Start-Sleep -Milliseconds 100; 
            if($__CurrentRunMode -eq 3) 
            {
                $__Error.Quit();
                return;
            } 
        }
        $_songDuration = [int]$_MediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds;
        $_MediaPlayer.Play();
        if(-not $PlayBackground)
        {      
            $_time = [DateTime]::Now;
            while(([DateTime]::Now - $_time).TotalMilliseconds -lt $_songDuration)
            {
                Start-Sleep -Milliseconds 100; 
                if($__CurrentRunMode -eq 3) 
                {
                    $__Error.Quit();
                    return;
                } 
                _GetState;
            }
            $_MediaPlayer.Stop();
        }                         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }

    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="PlayType" Tooltip="Play type" CatalogName="Main properties" Type="Enum" Value="File" EnumVariants="File;Asterisk;Beep;Exclamation;Hand;Question" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PlayBackground" Tooltip="Play in background" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="WordToolboxSettings" Name="Word Automation" ToolboxGridType="List" AliasDescription="Use Word">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Create Document" InternalName="CreateWordDocument" FriendlyName="Create Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="66">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CreateWordDocument{{{block_id}}}
{        
    try
    {
    {AddTypesDOCX}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $usecom = ${{{UseCOM}}};
    
        
        if($usecom)
        {              
            Add-Type -AssemblyName 'Microsoft.Office.Interop.Word'
            
            if(!$script:__WordInstances) { $script:__WordInstances = [MainHelpers.ClassWordInstances]::new(); }
            
            {{{WordInstance}}} = New-Object -ComObject Word.Application;  
            {{{WordInstance}}}.DisplayAlerts = 0;
            {{{WordInstance}}}.Visible = ${{{Visible}}};
                        
            {{{WordDocumentInstance}}} = {{{WordInstance}}}.Documents.Add();  
            
            $script:__WordInstances.Assign({{{WordInstance}}}.ActiveWindow.hWnd);
        }
        else
        {   
            $tempname = [System.IO.Path]::GetRandomFileName();                                           
            $tempfile = [System.IO.Path]::Combine($__WorkPath, $tempname);
            $tempfile = [System.IO.Path]::ChangeExtension($tempfile, ".tmp");
            {{{WordInstance}}} = [DocumentFormat.OpenXml.Packaging.WordprocessingDocument]::Create($tempfile, [DocumentFormat.OpenXml.WordprocessingDocumentType]::Document);
            $mainPart = {{{WordInstance}}}.AddMainDocumentPart();
            $mainPart.Document = New-Object DocumentFormat.OpenXml.Wordprocessing.Document;
            {{{WordDocumentInstance}}} = $mainPart.Document.AppendChild([DocumentFormat.OpenXml.Wordprocessing.Body]::new());
        }
        
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Output" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Output" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="UseCOM" Tooltip="Use COM interface" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Visible" Tooltip="If Word window is visible" CatalogName="Main properties" Type="Bool" Value="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Open Document" InternalName="OpenWordDocument" FriendlyName="Open Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="88">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OpenWordDocument{{{block_id}}}
{        
	try
	{
    {AddTypesDOCX}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
          
    $fileword = {{{Path}}};
    $usecom   = ${{{UseCOM}}};
    $readonly = ${{{ReadOnly}}};
        
        $fileword = ExpandConstFilePath $fileword
                
        if($fileword[1] -ne ':')
        {
            $fileword = [System.IO.Path]::GetFullPath([System.IO.Path]::Combine("", $fileword));
        }
        
        if(-not [System.IO.File]::Exists($fileword))
        {        
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $fileword");
            return;
        }
        
        if($usecom)
        {                
            Add-Type -AssemblyName 'Microsoft.Office.Interop.Word'
                    
            if(!$script:__WordInstances) { $script:__WordInstances = [MainHelpers.ClassWordInstances]::new(); }
            
            {{{WordInstance}}} = New-Object -ComObject Word.Application; 
            {{{WordInstance}}}.DisplayAlerts = 0;
            {{{WordInstance}}}.Visible = ${{{Visible}}};
                         
            if($readonly)
            {
                {{{WordDocumentInstance}}} = {{{WordInstance}}}.Documents.Open($fileword, $false, $true);
            }
            else
            {
                {{{WordDocumentInstance}}} = {{{WordInstance}}}.Documents.Open($fileword);
            }  
            
            $script:__WordInstances.Assign({{{WordInstance}}}.ActiveWindow.hWnd);
        }    
        else
        {     
            $ext = [System.IO.Path]::GetExtension($fileword);
            if($ext -ne ".docx")
            {
                $__Error.Exception("ERRORCONST_ONLYSUPPORTDOCXFILE"); 
                return;
            }
            $tempname = [System.IO.Path]::GetRandomFileName();                                           
            $tempfile = [System.IO.Path]::Combine($__WorkPath, $tempname);
            $tempfile = [System.IO.Path]::ChangeExtension($tempfile, ".tmp");
            [System.IO.File]::Copy($fileword, $tempfile, $true);
            {{{WordInstance}}} = [DocumentFormat.OpenXml.Packaging.WordprocessingDocument]::Open($tempfile, $true);
            {{{WordDocumentInstance}}} = {{{WordInstance}}}.MainDocumentPart.Document.Body;
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Output" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Output" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="UseCOM" Tooltip="Use COM interface" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Visible" Tooltip="If Word window is visible" CatalogName="Main properties" Type="Bool" Value="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReadOnly" Tooltip="Read only" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Path" Tooltip="Path to Word document" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Connect Document" InternalName="ConnectWordDocument" FriendlyName="Connect Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="21" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ConnectWordDocument{{{block_id}}}
{        
    try
    {
    {AddTypesDOCX}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
          
        Add-Type -AssemblyName 'Microsoft.Office.Interop.Word'
                
        $foundWord = $null;
        $foundWordDocument = $null;
        
        try {
            $foundWord = [System.Runtime.InteropServices.Marshal]::GetActiveObject("Word.Application")
        }
        catch {
        }  
        
        if($null -eq $foundWord)
        {
            $__Error.Exception("No open Word instance found");
            return;
        } 
        
        $foundWordDocument = $foundWord.ActiveDocument; 
        if($null -eq $foundWordDocument)
        {
            $__Error.Exception("No open Word instance found");
            return;
        }  
        
        if(!$script:__WordInstances) { $script:__WordInstances = [MainHelpers.ClassWordInstances]::new(); }
            
        $script:__WordInstances.Connect($foundWord.ActiveWindow.hWnd);

        {{{WordInstance}}} = $foundWord;
        {{{WordDocumentInstance}}} = $foundWordDocument;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Output" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Output" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Document" InternalName="SaveWordDocument" FriendlyName="Save Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="67">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveWordDocument{{{block_id}}}
{          
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $WordPath = {{{Path}}};
    $typename = {{{WordDocumentInstance}}}.GetType().Name;
    
        $WordPath = ExpandConstFilePath $WordPath
               
        $WordInstance         = {{{WordInstance}}};
        $WordDocumentInstance = {{{WordDocumentInstance}}};
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        if($WordPath.Length -eq 0)
        {
            if($typename -ne "Body")
            {        
                $NoPrompt = $True;
                $OriginalFormat = [Microsoft.Office.Interop.Word.WdOriginalFormat]::wdOriginalDocumentFormat;
                
                $WordDocumentInstance.Save();
            }
            else
            {          
                $WordInstance.Save();
            }
        }
        else
        {      
            try { [System.IO.File]::Delete($WordPath); }
            catch { }
            
            if($typename -ne "Body")
            {    
                $saveformat = [Microsoft.Office.Interop.Word.WdSaveFormat]::wdFormatDocumentDefault;    
                $ext        = [System.IO.Path]::GetExtension($WordPath).ToLower();
                if($ext -eq ".pdf") 
                {
                    $saveformat = [Microsoft.Office.Interop.Word.WdSaveFormat]::wdFormatPDF;
                } 
                
                $WordDocumentInstance.SaveAs($WordPath, $saveformat);
            }
            else
            {
                $newword = $WordInstance.SaveAs($WordPath);
                $WordInstance.Close();
                $WordInstance.Dispose();
                {{{WordInstance}}} = $newword;
            } 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="Path" Tooltip="Path to Word document" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Document" InternalName="CloseWordDocument" FriendlyName="Close Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CloseWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        
        $WordInstance         = {{{WordInstance}}};
        $WordDocumentInstance = {{{WordDocumentInstance}}};
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {         
            if(!$script:__WordInstances) { $script:__WordInstances = [MainHelpers.ClassWordInstances]::new(); }
            $thispid = $script:__WordInstances.GetAndRemove($WordInstance.ActiveWindow.hWnd);
            
            $WordDocumentInstance.Close($false);
            $WordInstance.Quit() 
            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($WordDocumentInstance);
            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($WordInstance); 
                   
            try 
            {     
                if($thispid -gt 0) 
                {
                    $proc = [System.Diagnostics.Process]::GetProcessById($thispid);
                    $proc.Kill();   
                }
            }
            catch{}
        }
        else
        {   
            $WordInstance.Close();
            $WordInstance.Dispose();
        } 
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Text Document" InternalName="GetTextWordDocument" FriendlyName="Get Text Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetTextWordDocument{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        
        if($typename -ne "Body")
        {
            {{{Result}}} = {{{WordDocumentInstance}}}.Content.Text;
        }
        else
        {
            $sb = [System.Text.StringBuilder]::new();
            $paragraphs = {{{WordDocumentInstance}}}.ChildElements;
            foreach($paragraph in $paragraphs)
            {
                if($paragraph -is [DocumentFormat.OpenXml.Wordprocessing.Paragraph])
                {
                    $sb.AppendLine($paragraph.InnerText);
                }
            }
            
            {{{Result}}} = $sb.ToString();
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="Result" Tooltip="Return text document" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Text Document" InternalName="SetTextWordDocument" FriendlyName="Set Text Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="21">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetTextWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Value = {{{Value}}}
    
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        if($typename -ne "Body")
        {
            {{{WordDocumentInstance}}}.Content.Text = $Value;
        }
        else
        {
            {{{WordDocumentInstance}}}.RemoveAllChildren();
            $para = {{{WordDocumentInstance}}}.AppendChild([DocumentFormat.OpenXml.Wordprocessing.Paragraph]::new());
            $run = $para.AppendChild([DocumentFormat.OpenXml.Wordprocessing.Run]::new());
            $newtext = [DocumentFormat.OpenXml.Wordprocessing.Text]::new($Value);
            $run.AppendChild($newtext);
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="Value" Tooltip="New text document" CatalogName="Required" Type="Expression" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Paragraph" InternalName="AddParagraphWordDocument" FriendlyName="Add Paragraph Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="59">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AddParagraphWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $fontname        = {{{FontName}}};
    $fontsize        = {{{FontSize}}}; 
    $FontStyle       = "{{{FontStyle}}}"; 
    $ForegroundColor = {{{ForegroundColor}}}; 
    $BackgroundColor = {{{BackgroundColor}}};
        
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
          
        if($fontname.Length  -eq 0) {$fontname="Arial";} 
        if($fontsize.Length  -eq 0) {$fontsize="12";}
            
        if($typename -ne "Body")
        {
            $para = {{{WordDocumentInstance}}}.Paragraphs.Add();
            if($fontname.Length  -ne 0) {$para.Range.Font.Name = $fontname;}
            if($fontsize.Length  -ne 0) {$para.Range.Font.Size = [int]$fontsize;} 
            if($ForegroundColor.Length -ne 0)
            {                     
                $color = [System.Drawing.ColorTranslator]::FromHtml($ForegroundColor);
                $para.Range.Font.Color = ($color.R + 0x100 * $color.G + 0x10000 * $color.B);
            } 
            if($BackgroundColor.Length -ne 0)
            {
                $color = [System.Drawing.ColorTranslator]::FromHtml($BackgroundColor);
                $para.Range.Font.Shading.BackgroundPatternColor = ($color.R + 0x100 * $color.G + 0x10000 * $color.B);
            } 
            if($FontStyle.Contains("Bold")) {$para.Range.Font.Bold = $true;} 
            if($FontStyle.Contains("Italic")) {$para.Range.Font.Italic = $true;}
            if($FontStyle.Contains("Underline")) {$para.Range.Font.Underline = [Microsoft.Office.Interop.Word.WdUnderline]::wdUnderlineSingle;}
            $para.Range.Text = {{{Value}}};
            $para.Range.InsertParagraphAfter();
        }
        else
        {      
            
            $fontsize = [int]$fontsize;
            $fontsize*=2;
                
            $para           = {{{WordDocumentInstance}}}.AppendChild([DocumentFormat.OpenXml.Wordprocessing.Paragraph]::new());
            $run            = $para.AppendChild([DocumentFormat.OpenXml.Wordprocessing.Run]::new());
            $runProp        = [DocumentFormat.OpenXml.Wordprocessing.RunProperties]::new();
            $runfonts       = [DocumentFormat.OpenXml.Wordprocessing.RunFonts]::new();
            $runfonts.Ascii = $fontname;
            $size           = [DocumentFormat.OpenXml.Wordprocessing.FontSize]::new();
            $size.Val       = [DocumentFormat.OpenXml.StringValue]::new([string]$fontsize);
            $runProp.Append($runfonts);
            $runProp.Append($size);    
            if($ForegroundColor.Length -ne 0)
            {                     
                $forecolor = [DocumentFormat.OpenXml.Wordprocessing.Color]::new();
                $forecolor.Val       = [DocumentFormat.OpenXml.StringValue]::new($ForegroundColor.Trim("#"));
                $runProp.Append($forecolor);
            } 
            if($BackgroundColor.Length -ne 0)
            {                     
                $BackgroundColor = $BackgroundColor.ToLower();          
                $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::None;
                if($BackgroundColor -eq "black") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Black; }
                elseif($BackgroundColor -eq "blue") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Blue; }
                elseif($BackgroundColor -eq "cyan") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Cyan; }
                elseif($BackgroundColor -eq "darkblue") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkBlue; }
                elseif($BackgroundColor -eq "darkcyan") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkCyan; }
                elseif($BackgroundColor -eq "darkgray") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkGray; }
                elseif($BackgroundColor -eq "darkgreen") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkGreen; }
                elseif($BackgroundColor -eq "darkmagenta") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkMagenta; }
                elseif($BackgroundColor -eq "darkred") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkRed; }
                elseif($BackgroundColor -eq "darkyellow") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::DarkYellow; }
                elseif($BackgroundColor -eq "green") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Green; }
                elseif($BackgroundColor -eq "lightgray") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::LightGray; }
                elseif($BackgroundColor -eq "magenta") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Magenta; }
                elseif($BackgroundColor -eq "red") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Red; }
                elseif($BackgroundColor -eq "white") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::White; }
                elseif($BackgroundColor -eq "yellow") { $indBackgroundColor = [DocumentFormat.OpenXml.Wordprocessing.HighlightColorValues]::Yellow; }
                $backcolor = [DocumentFormat.OpenXml.Wordprocessing.Highlight]::new();
                $backcolor.Val = $indBackgroundColor;
                $runProp.Append($backcolor);
            } 
            if($FontStyle.Contains("Bold")) 
            {
                $bold = [DocumentFormat.OpenXml.Wordprocessing.Bold]::new();
                $runProp.Append($bold);
            } 
            if($FontStyle.Contains("Italic")) 
            {
                $italic = [DocumentFormat.OpenXml.Wordprocessing.Italic]::new();
                $runProp.Append($italic);
            }
            if($FontStyle.Contains("Underline")) 
            {
                $undeline = [DocumentFormat.OpenXml.Wordprocessing.Underline]::new();
                $undeline.Val = [DocumentFormat.OpenXml.Wordprocessing.UnderlineValues]::Single;
                $runProp.Append($undeline);
            }
            $run.PrependChild($runProp);
            $newtext = [DocumentFormat.OpenXml.Wordprocessing.Text]::new({{{Value}}});
            $run.AppendChild($newtext);
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="Value" Tooltip="New text document" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FontName" Tooltip="Font name paragraph" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FontSize" Tooltip="Font size paragraph" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FontStyle" Tooltip="FontStyle" CatalogName="Main properties" Type="EnumMulti" Value="" EnumVariants="Bold;Italic;Underline" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ForegroundColor" Tooltip="ForegroundColor" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BackgroundColor" Tooltip="BackgroundColor" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Replace Text" InternalName="ReplaceTextWordDocument" FriendlyName="Replace Text Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="71">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReplaceTextWordDocument{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $findtext    = {{{FindText}}};
    $replacetext = {{{ReplaceText}}};
            
        
        $WordInstance         = {{{WordInstance}}};
        $WordDocumentInstance = {{{WordDocumentInstance}}};
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {
            $matchCase = $false;
               
            $objSelection = $WordInstance.Selection; 
            #$objSelection.Find.ClearFormatting();

            $wdReplaceNone     = 0; 
            $wdFindContinue    = 1;  
            $wdReplaceAll      = 2;
            $MatchCase         = $False; 
            $MatchWholeWord    = $true;
            $MatchWildcards    = $False; 
            $MatchSoundsLike   = $False; 
            $MatchAllWordForms = $False; 
            $Forward           = $True; 
            $Wrap              = $wdFindContinue; 
            $Format            = $False; 
            
            $replacetext = $replacetext.Replace("`n", "");
            
            $ind      = 0;
            $subcount = 200;
            $substr   = "";
            $count    = $replacetext.Length;
            while($count -gt 0)
            {
                $mincount = [Math]::Min($count, $subcount);
                $substr   = $replacetext.Substring($ind, $mincount);
                $ind += $mincount;
                $count -= $substr.Length;
                if($count -gt 0)
                {
                    $substr += $findtext;
                }  
                $_ = $objSelection.Find.Execute($findtext,$MatchCase,$MatchWholeWord, $MatchWildcards,$MatchSoundsLike,$MatchAllWordForms,$Forward,$Wrap,$Format,$substr,$wdReplaceAll);
                
            }

        }
        else
        {
            $body = $WordDocumentInstance;
            foreach($paragraph in $body)
            {
                $strtype = $paragraph.GetType().Name;
                if($strtype -eq "Paragraph")
                {
                    foreach($run in $paragraph)
                    {
                        $strtype = $run.GetType().Name;
                        if($strtype -eq "Run")
                        {
                            foreach($text in $run)
                            {
                                $strtype = $text.GetType().Name;
                                if($strtype -eq "Text")
                                {              
                                    $str1 = $text.Text;
                                    $ind1 = $str1.IndexOf($findtext, [StringComparison]::InvariantCultureIgnoreCase);
                                    if($ind1 -ge 0)
                                    {
                                        $str1      = $str1.Remove($ind1, $findtext.Length);
                                        $str1      = $str1.Insert($ind1, $replacetext);
                                        $text.Text = $str1;
                                    }
                                }
                            }
                        }
                    }                    
                }
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="FindText" Tooltip="Find text for replace" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ReplaceText" Tooltip="Replace text " CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Full Replace Text With Variable" InternalName="FullReplaceTextWordDocument" FriendlyName="Full Replace Text Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="81" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FullReplaceTextWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $InHashtable = {{{InHashtable}}};
    
        
        $WordInstance         = {{{WordInstance}}};
        $WordDocumentInstance = {{{WordDocumentInstance}}};
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {         
            $objSelection = $WordInstance.Selection; 

            $wdReplaceNone     = 0; 
            $wdFindContinue    = 1;  
            $wdReplaceAll      = 2;
            $MatchCase         = $False; 
            $MatchWholeWord    = $true;
            $MatchWildcards    = $False; 
            $MatchSoundsLike   = $False; 
            $MatchAllWordForms = $False; 
            $Forward           = $True; 
            $Wrap              = $wdFindContinue; 
            $Format            = $False; 
                  
            if($InHashtable)
            {
                foreach($key in $InHashtable.Keys)
                {          
                    $varval      = $InHashtable[$key];
                    $findtext    = "%" + $key + "%";
                    $replacetext = $varval.ToString();                        
                    
                    $replacetext = $replacetext.Replace("`n", "");
                    
                    $ind = 0;
                    $subcount = 200;
                    $substr = "";
                    $count = $replacetext.Length;
                    while($count -gt 0)
                    {
                        $mincount = [Math]::Min($count, $subcount);
                        $substr = $replacetext.Substring($ind, $mincount);
                        $ind += $mincount;
                        $count -= $substr.Length;
                        if($count -gt 0)
                        {
                            $substr += $findtext;
                        }  
                        $a = $objSelection.Find.Execute($findtext,$MatchCase,$MatchWholeWord, $MatchWildcards,$MatchSoundsLike,$MatchAllWordForms,$Forward,$Wrap,$Format,$substr,$wdReplaceAll);
                    }
                }
            }
            else
            {
                foreach($varname in $script:__VarsList.Keys)
                {          
                    $variable = $script:__VarsList[$varname]; 
                    $vartype = $variable.GetType().Name;             
                      
                    if($vartype -ne "String") #as string
                    {
                        continue;
                    }
                                  
                    $varval      = Get-Variable $varname -ValueOnly;
                    $findtext    = "%" + $varname + "%";
                    $replacetext = $varval.ToString();                        
                    
                    $replacetext = $replacetext.Replace("`n", "");
                    
                    $ind = 0;
                    $subcount = 200;
                    $substr = "";
                    $count = $replacetext.Length;
                    while($count -gt 0)
                    {
                        $mincount = [Math]::Min($count, $subcount);
                        $substr = $replacetext.Substring($ind, $mincount);
                        $ind += $mincount;
                        $count -= $substr.Length;
                        if($count -gt 0)
                        {
                            $substr += $findtext;
                        }  
                        $a = $objSelection.Find.Execute($findtext,$MatchCase,$MatchWholeWord, $MatchWildcards,$MatchSoundsLike,$MatchAllWordForms,$Forward,$Wrap,$Format,$substr,$wdReplaceAll);
                    }
                }  
            }
        }
        else
        {
            $body = $WordDocumentInstance;
            foreach($paragraph in $body)
            {
                $strtype = $paragraph.GetType().Name;
                if($strtype -eq "Paragraph")
                {
                    foreach($run in $paragraph)
                    {
                        $strtype = $run.GetType().Name;
                        if($strtype -eq "Run")
                        {
                            foreach($text in $run)
                            {
                                $strtype = $text.GetType().Name;
                                if($strtype -eq "Text")
                                {           
                                    if($InHashtable)
                                    {
                                        foreach($key in $InHashtable.Keys)
                                        {          
                                            $varval      = $InHashtable[$key];
                                            $findtext    = "%" + $key + "%";
                                            $replacetext = $varval.ToString();                        
                                        
                                            $text.Text = [System.Text.RegularExpressions.Regex]::Replace($text.Text, $findtext, $replacetext, [System.Text.RegularExpressions.RegexOptions]::IgnoreCase);
                                        }
                                    }
                                    else
                                    {
                                        foreach($varname in $script:__VarsList.Keys)
                                        {          
                                            $variable = $script:__VarsList[$varname]; 
                                            $vartype = $variable.GetType().Name;             
                                              
                                            if($vartype -ne "String") #as string
                                            {
                                                continue;
                                            }
                                                          
                                            $varval      = Get-Variable $varname -ValueOnly;
                                            $findtext    = "%" + $varname + "%";
                                            $replacetext = $varval.ToString();                        
                                        
                                            $text.Text = [System.Text.RegularExpressions.Regex]::Replace($text.Text, $findtext, $replacetext, [System.Text.RegularExpressions.RegexOptions]::IgnoreCase);
                                        } 
                                    }
                                }
                            }
                        }
                    }                    
                }
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
} 

                 
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="InHashtable" Tooltip="Hashtable for replace" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Print Document" InternalName="PrintWordDocument" FriendlyName="Print Word Document" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="21">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PrintWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $WordInstance         = {{{WordInstance}}};
        $WordDocumentInstance = {{{WordDocumentInstance}}};
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {
            $WordInstance.PrintOut();
        }
        else
        {   
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;        
        } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Tables" InternalName="GetTablesWordDocument" FriendlyName="Get Tables" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="43">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetTablesWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $startindexpagestr    = {{{StartIndexPage}}};
    $endindexpagestr      = {{{EndIndexPage}}};
    
        {{{Result}}} = New-Object 'System.Collections.Generic.List[System.Data.DataTable]';
        
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        
        if($typename -ne "Body")
        {                         
            $startindexpage = 0;
            $endindexpage   = 0;
            
            $_ = [int]::TryParse($startindexpagestr, [ref] $startindexpage); 
            $_ = [int]::TryParse($endindexpagestr, [ref] $endindexpage);
                                   
            $pageNumbers = {{{WordDocumentInstance}}}.Content.Information([Microsoft.Office.Interop.Word.WdInformation]::wdNumberOfPagesInDocument);
            if($startindexpage -gt $pageNumbers) { $startindexpage = $pageNumbers; }
            if($endindexpage -gt $pageNumbers) { $endindexpage = $pageNumbers; }
            
        
            $tables = {{{WordDocumentInstance}}}.Tables;
            for($it = 1; $it -le $tables.Count; $it++)
            {
                $range = $tables[$it].Range;  
                
                if($startindexpage -gt 0 -or $endindexpage -gt 0)
                {
                    $pagenum = $range.Information([Microsoft.Office.Interop.Word.WdInformation]::wdActiveEndAdjustedPageNumber);
                    if($startindexpage -gt 0 -and $pagenum -lt $startindexpage) { continue; } 
                    if($endindexpage -gt 0 -and $pagenum -gt $endindexpage) { continue; }
                }
                     
                $resulttable           = New-Object System.Data.DataTable;
                $resulttable.TableName = [string]$it;
                
                for ($i = 1; $i -le $range.Cells.Count; $i++)
                {
                    $cell = $range.Cells[$i];
                    $text = $cell.Range.Text;

                    $indexCol = $cell.ColumnIndex;
                    $indexRow = $cell.RowIndex;
                    $indexCol--;
                    $indexRow--;

                    while ($indexCol -ge $resultTable.Columns.Count)
                    {
                        $_ = $resultTable.Columns.Add([System.Guid]::NewGuid().ToString());
                    }

                    while ($indexRow -ge $resultTable.Rows.Count)
                    {
                        $arr = $null;
                        for ($iarr = 0; $iarr -lt $resultTable.Columns.Count; $iarr++) 
                        { 
                            $arr += @(""); 
                        }
                        $_ = $resultTable.Rows.Add($arr);
                    }
                                 
                    $text = $text -replace '\r', '';
                    $text = $text -replace '\a', '';
                    $resultTable.Rows[$indexRow][$indexCol] = $text;
                }

                for ($i = 0; $i -lt $resultTable.Columns.Count; $i++)
                {
                    $resultTable.Columns[$i].ColumnName = "column" + ($i + 1);
                    $resultTable.Columns[$i].Caption = "column" + ($i + 1);
                }

                {{{Result}}}.Add($resulttable);
            }
        }
        else
        {
            $body = {{{WordDocumentInstance}}};
            foreach($table in $body)
            {
                $strtype = $table.GetType().Name;
                if($strtype -eq "Table")
                {
                    $resulttable = New-Object System.Data.DataTable;
                    foreach($tableitem in $table)
                    {
                        $strtype = $tableitem.GetType().Name;
                        if($strtype -eq "TableGrid")
                        {
                            $i = 0;
                            foreach($column in $tableitem)
                            {
                                $c = $resultTable.Columns.Add([System.Guid]::NewGuid().ToString());
                                $c.ColumnName = "column" + ($i + 1);
                                $c.Caption = "column" + ($i + 1);
                                $i++;
                            }
                        }
                        elseif ($strtype -eq "TableRow")
                        {
                            $r = $resultTable.NewRow();
                            $i = 0;
                            foreach($cell in $tableitem)
                            {
                                if($cell.GetType().Name -eq "TableCell")
                                {
                                    $r[$i] = $cell.InnerText;
                                    $i++;
                                }
                            }
                            $resultTable.Rows.Add($r);
                        }
                    } 
                    {{{Result}}}.Add($resulttable);                 
                }
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="StartIndexPage" Tooltip="Start index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexPage" Tooltip="End index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="List objects DataTable" CatalogName="Output" Type="Variable" Value="$Tables" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Data Table List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Tables" InternalName="SetTablesWordDocument" FriendlyName="Set Tables" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="44">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetTablesWordDocument{{{block_id}}}
{          
	try
	{
    {AddTypesPS1GenericMethods}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $WordDocumentInstance = {{{WordDocumentInstance}}}; 
    $startindexpagestr    = {{{StartIndexPage}}};
    $endindexpagestr      = {{{EndIndexPage}}};
    $ListTables = {{{Tables}}};
    
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {         
            $startindexpage = 0;
            $endindexpage   = 0;  
            
            $_ = [int]::TryParse($startindexpagestr, [ref] $startindexpage); 
            $_ = [int]::TryParse($endindexpagestr, [ref] $endindexpage);
                
            $pageNumbers = {{{WordDocumentInstance}}}.Content.Information([Microsoft.Office.Interop.Word.WdInformation]::wdNumberOfPagesInDocument);
            if($startindexpage -gt $pageNumbers) { $startindexpage = $pageNumbers; }
            if($endindexpage -gt $pageNumbers) { $endindexpage = $pageNumbers; }
                        
            $indextable = 0;
            $tables     = {{{WordDocumentInstance}}}.Tables;
            for($it = 1; $it -le $tables.Count; $it++)
            {      
                if($indextable -ge $ListTables.Count) { break; }
                        
                $newTable = $tables[$it];
                if($startindexpage -gt 0 -or $endindexpage -gt 0)
                {      
                    $range = $newTable.Range; 
                    $pagenum = $range.Information([Microsoft.Office.Interop.Word.WdInformation]::wdActiveEndAdjustedPageNumber);
                    if($startindexpage -gt 0 -and $pagenum -lt $startindexpage) { continue; } 
                    if($endindexpage -gt 0 -and $pagenum -gt $endindexpage) { continue; }
                }
                
                $resulttable = $ListTables[$indextable];
                
                for($irow = 0; $irow -lt $resulttable.Rows.Count; $irow++)
                {
                    $ito = $irow + 1;
                    if($ito -gt $newTable.Rows.Count) 
                    {
                        $newTable.Rows.Add();   
                    } 
                    
                    for($icol = 0; $icol -lt $resulttable.Columns.Count; $icol++)
                    {
                        $newTable.Cell($ito, $icol+1).Range.Text = $resulttable.Rows[$irow][$icol].ToString(); 
                    }
                }
                
                $indextable++;
            }
        }
        else
        {          
            for($insind = 1; $insind -le $ListTables.Count; $insind++)
            {                    
                $InsertTable = $ListTables[$insind - 1];
                $psResult    = [OpenXmlHelpers.Word]::InsertWordDataTable([ref] $WordDocumentInstance, $InsertTable, $insind, $false);
                if($__Error.CheckResult($psResult)) { return; }              
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="StartIndexPage" Tooltip="Start index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexPage" Tooltip="End index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Tables" Tooltip="List objects DataTable" CatalogName="Required" Type="Variable" Value="$Tables" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Data Table List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get One Table" InternalName="GetOneTableWordDocument" FriendlyName="Get One Table" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="22">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetOneTableWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $startindexpagestr = {{{StartIndexPage}}};
    $endindexpagestr   = {{{EndIndexPage}}};    
    $tableindexstr     = {{{TableIndex}}};
    
        $tableindex = 0;
        $_          = [int]::TryParse($tableindexstr, [ref] $tableindex);
        if($tableindex -eq 0) { $tableindex = 1; }     
        
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        
        if($typename -ne "Body")
        {                         
            $startindexpage = 0;
            $endindexpage   = 0;
            
            $_ = [int]::TryParse($startindexpagestr, [ref] $startindexpage); 
            $_ = [int]::TryParse($endindexpagestr, [ref] $endindexpage);
                                   
            $pageNumbers = {{{WordDocumentInstance}}}.Content.Information([Microsoft.Office.Interop.Word.WdInformation]::wdNumberOfPagesInDocument);
            if($startindexpage -gt $pageNumbers) { $startindexpage = $pageNumbers; }
            if($endindexpage -gt $pageNumbers) { $endindexpage = $pageNumbers; }
            
                  
            $currentindex = 0;
            $tables       = {{{WordDocumentInstance}}}.Tables;
            for($it = 1; $it -le $tables.Count; $it++)
            {
                $range = $tables[$it].Range;  
                
                if($startindexpage -gt 0 -or $endindexpage -gt 0)
                {
                    $pagenum = $range.Information([Microsoft.Office.Interop.Word.WdInformation]::wdActiveEndAdjustedPageNumber);
                    if($startindexpage -gt 0 -and $pagenum -lt $startindexpage) { continue; } 
                    if($endindexpage -gt 0 -and $pagenum -gt $endindexpage) { continue; }
                } 
                
                $currentindex++;
                if($currentindex -ne $tableindex) { continue; }
                     
                $resulttable           = New-Object System.Data.DataTable; 
                $resulttable.TableName = [string]$it;
                
                for ($i = 1; $i -le $range.Cells.Count; $i++)
                {
                    $cell = $range.Cells[$i];
                    $text = $cell.Range.Text;

                    $indexCol = $cell.ColumnIndex;
                    $indexRow = $cell.RowIndex;
                    $indexCol--;
                    $indexRow--;

                    while ($indexCol -ge $resultTable.Columns.Count)
                    {
                        $_ = $resultTable.Columns.Add([System.Guid]::NewGuid().ToString());
                    }

                    while ($indexRow -ge $resultTable.Rows.Count)
                    {
                        $arr = $null;
                        for ($iarr = 0; $iarr -lt $resultTable.Columns.Count; $iarr++) 
                        { 
                            $arr += @(""); 
                        }
                        $_ = $resultTable.Rows.Add($arr);
                    }
                                 
                    $text = $text -replace '\r', '';
                    $text = $text -replace '\a', '';
                    $resultTable.Rows[$indexRow][$indexCol] = $text;
                }

                for ($i = 0; $i -lt $resultTable.Columns.Count; $i++)
                {
                    $resultTable.Columns[$i].ColumnName = "column" + ($i + 1);
                    $resultTable.Columns[$i].Caption = "column" + ($i + 1);
                }

                {{{Result}}} = $resulttable;
                break;
            }
        }
        else
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return; 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="TableIndex" Tooltip="Table index" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="StartIndexPage" Tooltip="Start index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexPage" Tooltip="End index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return One DataTable" CatalogName="Output" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set One Table" InternalName="SetOneTableWordDocument" FriendlyName="Set One Table" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetOneTableWordDocument{{{block_id}}}
{          
	try
	{
    {AddTypesPS1GenericMethods}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $WordDocumentInstance = {{{WordDocumentInstance}}}; 
    $startindexpagestr    = {{{StartIndexPage}}};
    $endindexpagestr      = {{{EndIndexPage}}};
    $tableindexstr        = {{{TableIndex}}};
    $table                = {{{Table}}};
    
        $tableindex = 0;
        $_ = [int]::TryParse($tableindexstr, [ref] $tableindex);
        if($tableindex -eq 0) { $tableindex = 1; }    
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {         
            $startindexpage = 0;
            $endindexpage   = 0;  
            
            $_ = [int]::TryParse($startindexpagestr, [ref] $startindexpage); 
            $_ = [int]::TryParse($endindexpagestr, [ref] $endindexpage);
                
            $pageNumbers = {{{WordDocumentInstance}}}.Content.Information([Microsoft.Office.Interop.Word.WdInformation]::wdNumberOfPagesInDocument);
            if($startindexpage -gt $pageNumbers) { $startindexpage = $pageNumbers; }
            if($endindexpage -gt $pageNumbers) { $endindexpage = $pageNumbers; }
                        
            $currentindex = 0;
            $tables     = {{{WordDocumentInstance}}}.Tables;
            for($it = 1; $it -le $tables.Count; $it++)
            {      
                $newTable = $tables[$it];
                if($startindexpage -gt 0 -or $endindexpage -gt 0)
                {      
                    $range = $newTable.Range; 
                    $pagenum = $range.Information([Microsoft.Office.Interop.Word.WdInformation]::wdActiveEndAdjustedPageNumber);
                    if($startindexpage -gt 0 -and $pagenum -lt $startindexpage) { continue; } 
                    if($endindexpage -gt 0 -and $pagenum -gt $endindexpage) { continue; }
                } 
                
                $currentindex++;
                if($currentindex -ne $tableindex) { continue; }
                
                $resulttable = $table;
                
                for($irow = 0; $irow -lt $resulttable.Rows.Count; $irow++)
                {
                    $ito = $irow + 1;
                    if($ito -gt $newTable.Rows.Count) 
                    {
                        $newTable.Rows.Add();   
                    } 
                    
                    for($icol = 0; $icol -lt $resulttable.Columns.Count; $icol++)
                    {       
                        if($icol -ge $newTable.Columns.Count) { break; }
                        $newTable.Cell($ito, $icol+1).Range.Text = $resulttable.Rows[$irow][$icol].ToString(); 
                    }
                } 
                break;
            }
        }
        else
        {          
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return; 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="TableIndex" Tooltip="Table index" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="StartIndexPage" Tooltip="Start index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexPage" Tooltip="End index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Table" Tooltip="One DataTable" CatalogName="Required" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert DataTable" InternalName="InsertWordDataTable" FriendlyName="Insert DataTable" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="40">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertWordDataTable{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $InsertTable          = {{{InsertTable}}};
    $InsertIndexObj       = {{{InsertIndex}}};  
    $ReplaceText          = {{{ReplaceText}}};
    $FirstAsCaption       = ${{{FirstAsCaption}}};
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {            
            $InsertIndex = _toint($InsertIndexObj);
            
            if($InsertIndex -gt 0)
            {    
                $tables = $WordDocumentInstance.Tables;
                $InsertIndex = [int]$InsertIndex;
                $newTable = $tables[$InsertIndex];
                       
                $ito = 1;
                for($irow = 0; $irow -lt $InsertTable.Rows.Count; $irow++, $ito++)
                {
                    if($FirstAsCaption) { $FirstAsCaption = $false; $ito++;}
                    if($ito -gt $newTable.Rows.Count) 
                    {
                        $newTable.Rows.Add();   
                    } 
                    
                    for($icol = 0; $icol -lt $InsertTable.Columns.Count; $icol++)
                    {         
                        if($icol -ge $newTable.Columns.Count) { break; }
                        $newTable.Cell($ito, $icol+1).Range.Text = $InsertTable.Rows[$irow][$icol].ToString(); 
                    }
                }
                
                {{{IndexTable}}} = $InsertIndex; 
            }
            else
            {      
                if([string]::IsNullOrEmpty($ReplaceText))
                {
                    $oEndOfDoc                         = "\endofdoc";
                    $wrdRng                            = $WordDocumentInstance.Bookmarks[[ref] $oEndOfDoc].Range;
                }
                else
                {
                    $wrdRng            = $WordDocumentInstance.Application.ActiveDocument.Content;
                    $wdFindContinue    = 1;  
                    $wdReplaceOne      = 1;
                    $MatchCase         = $False; 
                    $MatchWholeWord    = $true;
                    $MatchWildcards    = $False; 
                    $MatchSoundsLike   = $False; 
                    $MatchAllWordForms = $False; 
                    $Forward           = $True; 
                    $Wrap              = $wdFindContinue; 
                    $Format            = $False;
                    $thisreplacetext   = "";
                    $res               = $wrdRng.Find.Execute($ReplaceText,$MatchCase,$MatchWholeWord, $MatchWildcards,$MatchSoundsLike,$MatchAllWordForms,$Forward,$Wrap,$Format,$thisreplacetext,$wdReplaceOne);
                    if(-not $res)
                    {
                        $__Error.Exception("Text not found");
                        return;
                    }
                }
                               
                $newTable                          = $WordDocumentInstance.Tables.Add($wrdRng, 1, $InsertTable.Columns.Count);
                $newTable.Borders.InsideLineStyle  = [Microsoft.Office.Interop.Word.WdLineStyle]::wdLineStyleSingle;
                $newTable.Borders.OutsideLineStyle = [Microsoft.Office.Interop.Word.WdLineStyle]::wdLineStyleSingle;
                $newTable.AllowAutoFit             = $true;
                      
                if(-not $FirstAsCaption)
                {
                    for($icol = 0; $icol -lt $InsertTable.Columns.Count; $icol++)
                    {
                        $newTable.Cell($newTable.Rows.Count, $icol+1).Range.Text = $InsertTable.Columns[$icol].Caption;
                    } 
                    $newTable.Rows.Add();
                }

                for($irow = 0; $irow -lt $InsertTable.Rows.Count; $irow++)
                {     
                    if ($irow -gt 0) { $newTable.Rows.Add(); }
                    for($icol = 0; $icol -lt $InsertTable.Columns.Count; $icol++)
                    {
                        $newTable.Cell($newTable.Rows.Count, $icol+1).Range.Text = $InsertTable.Rows[$irow][$icol].ToString(); 
                    }
                } 
                
                {{{IndexTable}}} = $WordDocumentInstance.Tables.Count; 
            }
        }
        else
        {   
            $insind = -1;
            if($InsertIndex) { $insind = [int]$InsertIndex; }

            $psResult = [OpenXmlHelpers.Word]::InsertWordDataTable([ref] $WordDocumentInstance, $InsertTable, $insind, $FirstAsCaption);
            if($__Error.CheckResult($psResult)) { return; }        
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="InsertTable" Tooltip="Insert Table" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="InsertIndex" Tooltip="Insert index" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ReplaceText" Tooltip="ReplaceText" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FirstAsCaption" Tooltip="FirstAsCaption " CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IndexTable" Tooltip="Return index table" CatalogName="Output" Type="Variable" Value="$IndexTable" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert Image Cell" InternalName="InsertWordImageCell" FriendlyName="Insert Image Cell" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="25">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertWordImageCell{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $IndexTable           = {{{IndexTable}}}; 
    $IndexRow             = {{{IndexRow}}};
    $IndexCol             = {{{IndexCol}}}; 
    $ImagePath            = {{{ImagePath}}};
    $NewWidth             = {{{NewWidth}}};
    $NewHeight            = {{{NewHeight}}};
    $DeleteContent        = ${{{DeleteContent}}};
        
        $ImagePath = ExpandConstFilePath $ImagePath
        
        if(![System.IO.File]::Exists($ImagePath))
        { 
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $ImagePath");
            return;
        } 
        
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        
        if($typename -ne "Body")
        {
            if([string]::IsNullOrEmpty($NewWidth)) { $NewWidth = 0; }
            if([string]::IsNullOrEmpty($NewHeight)) { $NewHeight = 0; }
            
            $table = $WordDocumentInstance.Tables[$IndexTable];
            $rng1 = $table.Cell($IndexRow, $IndexCol).Range; 
            
            if($DeleteContent)
            {
                $rng1.Delete();
            }
            
            $s1 = $rng1.InlineShapes.AddPicture($ImagePath);
            
            if($NewWidth -gt 0 -and $NewHeight -eq 0)
            {
                $delta = $NewWidth / $s1.Width;
                $NewHeight = $s1.Height * $delta;
            }

            if($NewWidth -eq 0 -and $NewHeight -gt 0)
            {
                $delta = $NewHeight / $s1.Height;
                $NewWidth = $s1.Width * $delta;
            }

            if($NewWidth -eq 0 -and $NewHeight -eq 0)
            {
                $NewWidth = $s1.Width;
                $NewHeight = $s1.Height;
            }

            $s1.Width = $NewWidth;
            $s1.Height = $NewHeight;
        }
        else
        {   
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;        
        }         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="IndexTable" Tooltip="Index table" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexRow" Tooltip="Index row" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexCol" Tooltip="Index col" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DeleteContent" Tooltip="Delete Content" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImagePath" Tooltip="Image path" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewWidth" Tooltip="New width" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewHeight" Tooltip="New height" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert Text Cell" InternalName="InsertWordTextCell" FriendlyName="Insert Text Cell" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="16">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertWordTextCell{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $IndexTable           = {{{IndexTable}}}; 
    $IndexRow             = {{{IndexRow}}};
    $IndexCol             = {{{IndexCol}}}; 
    $InsertText           = {{{InsertText}}};  
    $DeleteContent        = ${{{DeleteContent}}};
    $fontname             = {{{FontName}}};
    $fontsize             = {{{FontSize}}};
        
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        
        if($typename -ne "Body")
        {
            if([string]::IsNullOrEmpty($NewWidth)) { $NewWidth = 0; }
            if([string]::IsNullOrEmpty($NewHeight)) { $NewHeight = 0; }
            
            $table = $WordDocumentInstance.Tables[$IndexTable];
            $rng1 = $table.Cell($IndexRow, $IndexCol).Range;
                         
            if($rng1.Paragraphs.Count -gt 0)
            {
                if($fontname.Length  -eq 0) {$fontname=$rng1.Paragraphs[1].Range.Font.Name;} 
                if($fontsize.Length  -eq 0) {$fontsize=$rng1.Paragraphs[1].Range.Font.Size;}
            }
            
            if($DeleteContent)
            {
                $rng1.Delete();
            }
                                     
            if($fontname.Length  -eq 0) {$fontname="Arial";} 
            if($fontsize.Length  -eq 0) {$fontsize="12";}
            
            $para = $rng1.Paragraphs.Add();
            if($fontname.Length  -ne 0) {$para.Range.Font.Name = $fontname;}
            if($fontsize.Length  -ne 0) {$para.Range.Font.Size = [int]$fontsize;}
            $para.Range.Text = $InsertText;
        }
        else
        {   
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;        
        }         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="IndexTable" Tooltip="Index table" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexRow" Tooltip="Index row" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexCol" Tooltip="Index col" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DeleteContent" Tooltip="Delete Content" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsertText" Tooltip="Insert text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FontName" Tooltip="Font name paragraph" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FontSize" Tooltip="Font size paragraph" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Font Cell" InternalName="SetWordFontCell" FriendlyName="Set Font Cell" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="20">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetWordFontCell{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $WordInstance         = {{{WordInstance}}};
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $IndexTable           = {{{IndexTable}}}; 
    $IndexRow             = {{{IndexRow}}};
    $IndexCol             = {{{IndexCol}}}; 
    $FontName             = {{{FontName}}};
    $FontSize             = {{{FontSize}}};
    $FontBold             = ${{{FontBold}}};
    $FontItalic           = ${{{FontItalic}}}; 
    $FontUnderline        = ${{{FontUnderline}}};
        
          
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {
            if([string]::IsNullOrEmpty($FontSize)) { $FontSize = 0; }
        
            $table = $WordDocumentInstance.Tables[$IndexTable];
            $table.Cell($IndexRow, $IndexCol).Range.Select();
            
            if(![string]::IsNullOrEmpty($FontName))
            {
                $WordInstance.Selection.Font.Name = $FontName;
            }
            
            if($FontSize -gt 0)
            {
                $WordInstance.Selection.Font.Size = $FontSize;
            } 
            
            if($FontBold)
            {
                $WordInstance.Selection.Font.Bold = 1;
            } 
            
            if($FontItalic)
            {
                $WordInstance.Selection.Font.Italic = 1;
            } 
            
            if($FontUnderline)
            {
                $WordInstance.Selection.Font.Underline = 1;
            }
            
            $WordInstance.Selection.Move();
        }
        else
        {   
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;        
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="IndexTable" Tooltip="Index table" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexRow" Tooltip="Index row" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexCol" Tooltip="Index col" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FontName" Tooltip="Font name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FontSize" Tooltip="Font size" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FontBold" Tooltip="Font bold" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FontItalic" Tooltip="Font italic" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FontUnderline" Tooltip="Font underline" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Search Ranges" InternalName="SearchRangesWordDocument" FriendlyName="Search Ranges" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SearchRangesWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $WordDocumentInstance = {{{WordDocumentInstance}}}; 
    $searchtext           = {{{SearchText}}};
    $startindexpagestr    = {{{StartIndexPage}}};
    $endindexpagestr      = {{{EndIndexPage}}};
    $startindexcharstr    = {{{StartIndexChar}}};
    $endindexcharstr      = {{{EndIndexChar}}};
    
        {{{Result}}} = New-Object 'System.Collections.Generic.List[object]';
        
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -eq "Body")
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return; 
        }
        
        $startindexpage = 0;
        $endindexpage   = 0;
        $startindexchar = 0;
        $endindexchar   = 0;
        
        $_ = [int]::TryParse($startindexpagestr, [ref] $startindexpage); 
        $_ = [int]::TryParse($endindexpagestr, [ref] $endindexpage);
        $_ = [int]::TryParse($startindexcharstr, [ref] $startindexchar);
        $_ = [int]::TryParse($endindexcharstr, [ref] $endindexchar);   
        
        $startRange = $startindexchar;
        $endRange   = $endindexchar;  
        
        if($endRange -eq 0) { $endRange = $WordDocumentInstance.Content.End; }
        
        $pageNumbers = $WordDocumentInstance.Content.Information([Microsoft.Office.Interop.Word.WdInformation]::wdNumberOfPagesInDocument);
        
        if($startindexpage -gt 0)
        {                 
            if($startindexpage -gt $pageNumbers) { $startindexpage = $pageNumbers; }
            $rangePage  = $WordDocumentInstance.GoTo([Microsoft.Office.Interop.Word.WdGoToItem]::wdGoToPage, [Microsoft.Office.Interop.Word.WdGoToDirection]::wdGoToAbsolute, $startindexpage);
            $startRange = $rangePage.Start;
        } 
        
        if($endindexpage -gt 0)
        {       
            $endindexpage++;          
            if($endindexpage -gt $pageNumbers) { $endindexpage = $pageNumbers; }
            $rangePage  = $WordDocumentInstance.GoTo([Microsoft.Office.Interop.Word.WdGoToItem]::wdGoToPage, [Microsoft.Office.Interop.Word.WdGoToDirection]::wdGoToAbsolute, $endindexpage);
            $endRange = $rangePage.End;
        } 
 
        $searchRange = $WordDocumentInstance.Range($startRange, $endRange);   
        
        $searchRange.Find.ClearFormatting();  
        $searchRange.Find.Text = $searchtext; 
        
        $_ = $searchRange.Find.Execute();
        while($searchRange.Find.Found)
        {
            if($searchRange.End -ge $endRange) { break; } 
            
            {{{Result}}}.Add($WordDocumentInstance.Range($searchRange.Start, $searchRange.End));

            $searchRange.Find.Execute();
        }
          
        if({{{Result}}}.Count -eq 0)
        {  
            $__Error.Exception("ERRORCONST_NOTFOUNDRANGES");
            return;
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="SearchText" Tooltip="Search text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="StartIndexPage" Tooltip="Start index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexPage" Tooltip="End index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="StartIndexChar" Tooltip="Start index char" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexChar" Tooltip="End index char" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="List objects Range" CatalogName="Output" Type="Variable" Value="$ListRanges" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Range" InternalName="SelectRangeWordDocument" FriendlyName="Select Range" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="27">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SelectRangeWordDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $startindexpagestr    = {{{StartIndexPage}}};
    $endindexpagestr      = {{{EndIndexPage}}};
    $startindexcharstr    = {{{StartIndexChar}}};
    $endindexcharstr      = {{{EndIndexChar}}};
    
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -eq "Body")
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return; 
        }
           
        $startindexpage = 0;
        $endindexpage   = 0;
        $startindexchar = 0;
        $endindexchar   = 0;
        
        $_ = [int]::TryParse($startindexpagestr, [ref] $startindexpage); 
        $_ = [int]::TryParse($endindexpagestr, [ref] $endindexpage);
        $_ = [int]::TryParse($startindexcharstr, [ref] $startindexchar);
        $_ = [int]::TryParse($endindexcharstr, [ref] $endindexchar);   
        
        $startRange = $startindexchar;
        $endRange   = $endindexchar;  
        
        if($endRange -eq 0) { $endRange = $WordDocumentInstance.Content.End; }
        
        $pageNumbers = $WordDocumentInstance.Content.Information([Microsoft.Office.Interop.Word.WdInformation]::wdNumberOfPagesInDocument);
        
        if($startindexpage -gt 0)
        {                 
            if($startindexpage -gt $pageNumbers) { $startindexpage = $pageNumbers; }
            $rangePage  = $WordDocumentInstance.GoTo([Microsoft.Office.Interop.Word.WdGoToItem]::wdGoToPage, [Microsoft.Office.Interop.Word.WdGoToDirection]::wdGoToAbsolute, $startindexpage);
            $startRange = $rangePage.Start;
        } 
        
        if($endindexpage -gt 0)
        {       
            $endindexpage++;          
            if($endindexpage -gt $pageNumbers) { $endindexpage = $pageNumbers; }
            $rangePage  = $WordDocumentInstance.GoTo([Microsoft.Office.Interop.Word.WdGoToItem]::wdGoToPage, [Microsoft.Office.Interop.Word.WdGoToDirection]::wdGoToAbsolute, $endindexpage);
            $endRange = $rangePage.End;
        } 
 
        {{{Range}}} = $WordDocumentInstance.Range($startRange, $endRange); 
        {{{PageNumber}}} = {{{Range}}}.Information([Microsoft.Office.Interop.Word.WdInformation]::wdActiveEndAdjustedPageNumber);
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="StartIndexPage" Tooltip="Start index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexPage" Tooltip="End index page" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="StartIndexChar" Tooltip="Start index char" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="EndIndexChar" Tooltip="End index char" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Range" Tooltip="Object Range" CatalogName="Output" Type="Variable" Value="$Range" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PageNumber" Tooltip="Page Number" CatalogName="Output" Type="Variable" Value="$PageNumber" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Copy Table" InternalName="CopyTableWordDocument" FriendlyName="Copy Table" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="56" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CopyTableWordDocument{{{block_id}}}
{          
	try
	{
    {AddTypesPS1GenericMethods}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FromWordDocumentInstance = {{{FromWordDocumentInstance}}}; 
    $tableindexstr            = {{{TableIndex}}};
    $ToWordDocumentInstance   = {{{ToWordDocumentInstance}}};
    
        
        $typename = $FromWordDocumentInstance.GetType().Name;
        if($typename -eq "Body")
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM: From");
            return; 
        }  
        
        $typename = $ToWordDocumentInstance.GetType().Name;
        if($typename -eq "Body")
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM: To");
            return; 
        } 
                 
        $tableindex = 0;
        [int]::TryParse($tableindexstr, [ref] $tableindex);
        if($tableindex -eq 0) { $tableindex = 1; }
                   
        $currentindex = 0;
        $tables       = $FromWordDocumentInstance.Tables;
        for($it = 1; $it -le $tables.Count; $it++)
        {      
            $currentindex++;
            if($currentindex -ne $tableindex) { continue; }
                 
            $fromTable = $tables[$it];
            
            $range = $fromTable.Range;
            $range.Copy();  
              
            $timewait       = 20;
            $countBookmarks = -1;
            $countTables = -1;
            while ($timewait -gt 0)
            {      
                [System.Threading.Thread]::Sleep(1000);
                try { $countBookmarks = $ToWordDocumentInstance.Bookmarks.Count; }
                catch { }  
                
                try { $countTables = $ToWordDocumentInstance.Tables.Count; }
                catch { }

                $timewait--;
                if ($countBookmarks -ge 0 -And $countTables -ge 0) { break; }
            }
                    
            $oEndOfDoc = "\endofdoc";
            $wrdRng    = $ToWordDocumentInstance.Bookmarks[[ref] $oEndOfDoc].Range;
            $tableCopy = $ToWordDocumentInstance.Tables.Add($wrdRng, 1, 1); 
            
            $timewait = 3;
            while ($timewait -gt 0)
            {      
                [System.Threading.Thread]::Sleep(1000);
                try 
                { 
                    $tableCopy.Range.Paste();
                    break;
                }
                catch { }  
                [System.Threading.Thread]::Sleep(4000);
                $timewait--;
            }  
            
            try 
            {
                $tableCopy.Rows[$tableCopy.Rows.Count].Delete(); 
            }
            catch { }  
                                                                
            break;
        }       
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FromWordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="FromWordDocumentInstance" />
                                   <core:Property Name="TableIndex" Tooltip="Table index" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ToWordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="ToWordDocumentInstance" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert Word Table Range" InternalName="InsertWordTableRange" FriendlyName="Insert Word Table Range" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="55">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertWordTableRange{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $WordInstance         = {{{WordInstance}}};
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $IndexTable           = {{{IndexTable}}}; 
    $InsertType           = "{{{InsertType}}}";
    $BeforeIndex          = {{{BeforeIndex}}}; 
    $AutoFitColumns       = "{{{AutoFitColumns}}}";
        
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $_beforeindex = 0;
        [int]::TryParse($BeforeIndex, [ref] $_beforeindex);
        if($_beforeindex -lt 0) { $_beforeindex = 0; }
            
        $typename = $WordDocumentInstance.GetType().Name;
        
        if($typename -ne "Body")
        {
            $table = $WordDocumentInstance.Tables[$IndexTable];
                              
            $isTableNormal = $true;
            try 
            {
                $temprow = $table.Rows[1];
                $tempcol = $table.Columns[1];       
            }
            catch { $isTableNormal = $false;}
            
            if($InsertType -eq "Row")
            {
                if($isTableNormal)
                {
                    $beforerow = [System.Reflection.Missing]::Value;
                    if($_beforeindex -gt 0 -And $_beforeindex -le $table.Rows.Count)
                    {
                        $beforerow = $table.Rows[$_beforeindex];
                    } 
                    $newitem = $table.Rows.Add($beforerow); 
                    {{{NewIndex}}} = $newitem.Index;
                }
                else 
                {
                    $_beforeindex--;    
                    $table.Cell(1, 1).Select();
                    $rows = $WordInstance.Selection.Information([Microsoft.Office.Interop.Word.WdInformation]::wdMaximumNumberOfRows);
                    if($_beforeindex -gt 0 -And $_beforeindex -le $rows)
                    {
                        $rows = $_beforeindex;
                    }
                    $table.Cell($rows, 1).Select();
                    $WordInstance.Selection.Next([Microsoft.Office.Interop.Word.WdUnits]::wdLine, 1).Select();
                    $WordInstance.Selection.InsertCells([Microsoft.Office.Interop.Word.WdInsertCells]::wdInsertCellsShiftDown);

                    $table.Cell(1, 1).Select();
                    $rows = $WordInstance.Selection.Information([Microsoft.Office.Interop.Word.WdInformation]::wdMaximumNumberOfRows);
                    {{{NewIndex}}} = $rows;
                }
            }
            elseif($InsertType -eq "Column") 
            {
                if($isTableNormal)
                {
                    $beforecol = [System.Reflection.Missing]::Value;                
                    if($_beforeindex -gt 0 -And $_beforeindex -le $table.Columns.Count)
                    {
                        $beforecol = $table.Columns[$_beforeindex];
                    } 
                    $newitem = $table.Columns.Add($beforecol);
                    {{{NewIndex}}} = $newitem.Index;
                }
                else
                {
                    $_beforeindex--;
                    $table.Cell(1, 1).Select();
                    $cols = $WordInstance.Selection.Information([Microsoft.Office.Interop.Word.WdInformation]::wdMaximumNumberOfColumns);
                    $table.Cell(1, $cols).Select();
                    $rows = $WordInstance.Selection.Information([Microsoft.Office.Interop.Word.WdInformation]::wdMaximumNumberOfRows);
                    for($r = 1; $r -le $rows; $r++)
                    {          
                        try
                        {
                            $table.Cell($r, 1).Select();
                            $cols = $WordInstance.Selection.Information([Microsoft.Office.Interop.Word.WdInformation]::wdMaximumNumberOfColumns);
                            if($_beforeindex -gt 0 -And $_beforeindex -le $cols)
                            {
                                $cols = $_beforeindex;
                            }
                            $table.Cell($r, $cols).Select();
                            $WordInstance.Selection.Next([Microsoft.Office.Interop.Word.WdUnits]::wdWord, 1).Select();
                            $WordInstance.Selection.InsertCells([Microsoft.Office.Interop.Word.WdInsertCells]::wdInsertCellsShiftRight);
                        }
                        catch{}
                    }

                    $table.Cell(1, 1).Select();
                    $cols = $WordInstance.Selection.Information([Microsoft.Office.Interop.Word.WdInformation]::wdMaximumNumberOfColumns);
                    {{{NewIndex}}} = $cols;
                } 
                
                if($AutoFitColumns -eq "Contents")
                {
                    $_autofit = [Microsoft.Office.Interop.Word.WdAutoFitBehavior]::wdAutoFitContent;
                    $table.AutoFitBehavior($_autofit); 
                }
                elseif ($AutoFitColumns -eq "Window")
                {
                    $_autofit = [Microsoft.Office.Interop.Word.WdAutoFitBehavior]::wdAutoFitWindow;
                    $table.AutoFitBehavior($_autofit);
                } 
                else
                {
                    $_autofit = [Microsoft.Office.Interop.Word.WdAutoFitBehavior]::wdAutoFitFixed;
                    $table.AutoFitBehavior($_autofit);
                }
            }
        }
        else
        {   
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;        
        }         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" Visible="True" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="IndexTable" Tooltip="Index table" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="InsertType" Tooltip="Insert type" CatalogName="Main properties" Type="Enum" Value="Row" EnumVariants="Row;Column" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="BeforeIndex" Tooltip="Before index row or col" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoFitColumns" Tooltip="Auto fit columns" CatalogName="Main properties" Type="Enum" Value="Window" EnumVariants="None;Contents;Window" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="NewIndex" Tooltip="New index row or col" CatalogName="Output" Type="Variable" Value="$NewIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Delete Word Table Range" InternalName="DeleteWordTableRange" FriendlyName="Delete Word Table Range" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DeleteWordTableRange{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $WordDocumentInstance = {{{WordDocumentInstance}}};
    $IndexTable           = {{{IndexTable}}}; 
    $DeleteType           = "{{{DeleteType}}}";
    $Index                = {{{Index}}}; 
    $AutoFitColumns       = "{{{AutoFitColumns}}}";
        
        $_index = 0;
        [int]::TryParse($Index, [ref] $_index);
            
        $typename = {{{WordDocumentInstance}}}.GetType().Name;
        
        if($typename -ne "Body")
        {
            $table = $WordDocumentInstance.Tables[$IndexTable];
            
            if($DeleteType -eq "Row")
            {
                if($_index -gt 0 -And $_index -le $table.Rows.Count)
                {
                    $table.Rows[$_index].Delete();
                } 
            }
            elseif($DeleteType -eq "Column") 
            {
                if($_index -gt 0 -And $_index -le $table.Columns.Count)
                {
                    $table.Columns[$_index].Delete();
                }  
                if($AutoFitColumns -eq "Contents")
                {
                    $_autofit = [Microsoft.Office.Interop.Word.WdAutoFitBehavior]::wdAutoFitContent;
                    $table.AutoFitBehavior($_autofit); 
                }
                elseif ($AutoFitColumns -eq "Window")
                {
                    $_autofit = [Microsoft.Office.Interop.Word.WdAutoFitBehavior]::wdAutoFitWindow;
                    $table.AutoFitBehavior($_autofit);
                } 
                else
                {
                    $_autofit = [Microsoft.Office.Interop.Word.WdAutoFitBehavior]::wdAutoFitFixed;
                    $table.AutoFitBehavior($_autofit);
                }
            }
        }
        else
        {   
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;        
        }         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" Visible="True" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="IndexTable" Tooltip="Index table" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DeleteType" Tooltip="Delete type" CatalogName="Main properties" Type="Enum" Value="Row" EnumVariants="Row;Column" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Index" Tooltip="Index row or col" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoFitColumns" Tooltip="Auto fit columns" CatalogName="Main properties" Type="Enum" Value="Window" EnumVariants="None;Contents;Window" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Run Macro" InternalName="RunWordMacro" FriendlyName="Run Word Macro" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_word.png" ImageType="LeftImage" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RunWordMacro{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $MacroName     = {{{MacroName}}};
    $MacroArgs     = {{{MacroArgs}}};
    $MacroFileName = {{{MacroFileName}}};
    $AddRef        = ${{{AddRef}}}; 
    
        
        $WordInstance         = {{{WordInstance}}};
        $WordDocumentInstance = {{{WordDocumentInstance}}};
        if($null -eq $WordInstance) { $WordInstance = $WordDocumentInstance.Application; }
        
        $MacroFileName = ExpandConstFilePath $MacroFileName
  
        $typename = $WordDocumentInstance.GetType().Name;
            
        $listargs = New-Object Collections.Generic.List[object];
        
        $vartype = $MacroArgs.GetType().Name;
        
        if($vartype.Contains("List") -or $vartype -eq "Object[]" -or $vartype -eq "String[]")
        {        
            foreach($s in $MacroArgs)
            {       
                $listargs.Add($s);
            }
        }
        elseif($vartype -eq "String")
        {      
            if($MacroArgs.Length -gt 0)
            {
                $listargs.Add($MacroArgs);
            }
        }
        else
        {
            $listargs.Add($MacroArgs);
        }
          
        
        if($typename -ne "Body")
        {              
            $importdata = $null;
            
            if([System.IO.File]::Exists($MacroFileName))
            {
                $importdata = $WordInstance.VBE.ActiveVBProject.VBComponents.Import($MacroFileName);
            } 
               
            $strref = "";
            if($AddRef) { $strref = "[ref]"; }
            
            $expr = '$result = $WordInstance.Run($MacroName';
            for($i = 0; $i -lt $listargs.Count; $i++)
            {
                $expr += ', '+ $strref +' $listargs[' + $i.ToString() + ']';
            }

            $expr += ')';
            
            Invoke-Expression $expr;
            
            {{{MacroResult}}} = $result;
                                          
            if($null -ne $importdata)
            {
                $WordInstance.VBE.ActiveVBProject.VBComponents.Remove($importdata);    
            }
        }
        else
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return; 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="WordInstance" Tooltip="Word Instance Variable" CatalogName="Required" Type="Variable" Value="$Word1" DefaultValue="&quot;&quot;" ValueType="WordInstance" />
                                   <core:Property Name="WordDocumentInstance" Tooltip="Word Document Instance Variable" CatalogName="Required" Type="Variable" Value="$WordDocument1" DefaultValue="&quot;&quot;" ValueType="WordDocumentInstance" />
                                   <core:Property Name="MacroName" Tooltip="Macro name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MacroArgs" Tooltip="Macro args" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number/Text/List" />
                                   <core:Property Name="MacroFileName" Tooltip="Macro file name .bas" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AddRef" Tooltip="AddRef" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="MacroResult" Tooltip="Macro result" CatalogName="Output" Type="Variable" Value="$MacroResult" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="ExcelToolboxSettings" Name="Excel Automation" ToolboxGridType="List" AliasDescription="Use Excel">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Create Document" InternalName="CreateExcelDocument" FriendlyName="Create Excel Document" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="100">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CreateExcelDocument{{{block_id}}}
{        
	try
	{
    {AddTypesXSLX}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $usecom = ${{{UseCOM}}};
        
        if($usecom)
        {           
            Add-Type -AssemblyName 'Microsoft.Office.Interop.Excel'
            
            if(!$script:__ExcelInstances) { $script:__ExcelInstances = [MainHelpers.ClassExcelInstances]::new(); }
            
            {{{ExcelInstance}}} = New-Object -ComObject Excel.Application;  
            {{{ExcelInstance}}}.DisplayAlerts = $false;
            {{{ExcelInstance}}}.Visible = ${{{Visible}}};
                        
            {{{ExcelWorkbookInstance}}} = {{{ExcelInstance}}}.Workbooks.Add(); 
           
            {{{Worksheet}}} = {{{ExcelWorkbookInstance}}}.WorkSheets.Count;  
            {{{ExcelWorkbookInstance}}}.WorkSheets.item({{{Worksheet}}}).Name = {{{WorksheetName}}}; 
            
            $script:__ExcelInstances.Assign({{{ExcelInstance}}}.hWnd);
        }
        else
        {   
            {{{ExcelInstance}}} = New-Object OfficeOpenXml.ExcelPackage;            
            {{{ExcelWorkbookInstance}}} = {{{ExcelInstance}}}.Workbook;
            $sheet = {{{ExcelWorkbookInstance}}}.Worksheets.Add({{{WorksheetName}}});
            {{{Worksheet}}} = {{{ExcelWorkbookInstance}}}.Worksheets.Count;
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelInstance" Tooltip="Excel Instance Variable" CatalogName="Output" Type="Variable" Value="$Excel1" DefaultValue="&quot;&quot;" ValueType="ExcelInstance" />
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Output" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="UseCOM" Tooltip="Use COM interface" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Visible" Tooltip="If Excel window is visible" CatalogName="Main properties" Type="Bool" Value="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Worksheet" Tooltip="Return ID worksheet" CatalogName="Output" Type="Variable" Value="$Worksheet1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WorksheetName" Tooltip="Name of worksheet" CatalogName="Required" Type="Expression" Value="&quot;List1&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Open Document" InternalName="OpenExcelDocument" FriendlyName="Open Excel Document" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="103">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OpenExcelDocument{{{block_id}}}
{        
	try
	{
    {AddTypesXSLX}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                    
    $ReadOnly         = ${{{ReadOnly}}};
    $fileexcel        = {{{Path}}};
    $usecom           = ${{{UseCOM}}}; 
    $ReadPasswordObj  = {{{ReadPassword}}};
    $WritePasswordObj = {{{WritePassword}}};  
    $UpdateLinks      = ${{{UpdateLinks}}};
        
        $fileexcel = ExpandConstFilePath $fileexcel
        
        $ReadPassword = _checkpassword($ReadPasswordObj);
        $WritePassword = _checkpassword($WritePasswordObj);
        
        if($fileexcel[1] -ne ':')
        {
            $fileexcel = [System.IO.Path]::GetFullPath([System.IO.Path]::Combine("", $fileexcel));
        }

        if(-not [System.IO.File]::Exists($fileexcel))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $fileexcel");
            return;
        }
        
        if($usecom)
        {          
            Add-Type -AssemblyName 'Microsoft.Office.Interop.Excel'
            
            if(!$script:__ExcelInstances) { $script:__ExcelInstances = [MainHelpers.ClassExcelInstances]::new(); }
            
            {{{ExcelInstance}}} = New-Object -ComObject Excel.Application;
            {{{ExcelInstance}}}.DisplayAlerts = $false;
            {{{ExcelInstance}}}.Visible = ${{{Visible}}};
                        
            if([string]::IsNullOrEmpty($ReadPassword))
            {
                $ReadPassword_com = [System.Reflection.Missing]::Value;
            } 
            else
            {
                $ReadPassword_com = $ReadPassword;
            }
            if([string]::IsNullOrEmpty($WritePassword))
            {
                $WritePassword_com = [System.Reflection.Missing]::Value;
            } 
            else
            {
                $WritePassword_com = $WritePassword;
            }
            
            $UpdateLinksObj = [Microsoft.Office.Interop.Excel.XlUpdateLinks]::xlUpdateLinksNever;
            if($UpdateLinks) { $UpdateLinksObj = [Microsoft.Office.Interop.Excel.XlUpdateLinks]::xlUpdateLinksAlways; }
            
            {{{ExcelWorkbookInstance}}} = {{{ExcelInstance}}}.Workbooks.Open($fileexcel, $UpdateLinksObj, $ReadOnly, [System.Reflection.Missing]::Value, $ReadPassword_com, $WritePassword_com, $true); 

                        
            $script:__ExcelInstances.Assign({{{ExcelInstance}}}.hWnd);
        }
        else
        {        
            $ext = [System.IO.Path]::GetExtension($fileexcel);
            if($ext -ne ".xlsx" -and $ext -ne ".xlsm")
            {
                $__Error.Exception("ERRORCONST_ONLYSUPPORTXLSXFILE"); 
                return;
            }   
        
            {{{ExcelInstance}}} = [OfficeOpenXml.ExcelPackage]::new($fileexcel);
            
            {{{ExcelWorkbookInstance}}} = {{{ExcelInstance}}}.Workbook;
           
            {{{ExcelWorkbookInstance}}}.CalcMode = [OfficeOpenXml.ExcelCalcMode]::Automatic; 
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelInstance" Tooltip="Excel Instance Variable" CatalogName="Output" Type="Variable" Value="$Excel1" DefaultValue="&quot;&quot;" ValueType="ExcelInstance" />
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Output" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="UseCOM" Tooltip="Use COM interface" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Visible" Tooltip="If Excel window is visible" CatalogName="Main properties" Type="Bool" Value="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReadOnly" Tooltip="Read only" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Path" Tooltip="Path to Excel document" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ReadPassword" Tooltip="Read Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="WritePassword" Tooltip="Write Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="UpdateLinks" Tooltip="UpdateLinks" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Connect Document" InternalName="ConnectExcelDocument" FriendlyName="Connect Excel Document" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="26" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ConnectExcelDocument{{{block_id}}}
{        
    try
    {
    {AddTypesXSLX}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
             
    $TimeWait           = {{{TimeWait}}};
    
        Add-Type -AssemblyName 'Microsoft.Office.Interop.Excel'
        
        $foundExcel         = $null;
        $foundExcelWorkbook = $null;
        $foundActiveSheet   = 0;  
                            
        $watch = [System.Diagnostics.Stopwatch]::StartNew();
        
        while($true)
        {
        
            try 
            {
                $foundExcel = [System.Runtime.InteropServices.Marshal]::GetActiveObject("Excel.Application");
                
                if($null -ne $foundExcel)
                {
                    $foundExcelWorkbook = $foundExcel.ActiveWorkbook;
                    if($null -ne $foundExcelWorkbook)
                    {
                        break;
                    }
                }
            }
            catch 
            {
            }  
            
            Start-Sleep -Seconds 2;
          
            if ($watch.Elapsed.TotalSeconds -gt $TimeWait) { break; }  
        
        }  
        
        $watch.Stop();
        
        if($null -eq $foundExcel)
        {
            $__Error.Exception("No open Excel instance found");
            return;
        }
        if($null -eq $foundExcelWorkbook)
        {
            $__Error.Exception("No open Excel instance found");
            return;
        }    
            
        
        $foundActiveSheet = $foundExcel.ActiveSheet.Index;
                
        if(!$script:__ExcelInstances) { $script:__ExcelInstances = [MainHelpers.ClassExcelInstances]::new(); }
            
        $script:__ExcelInstances.Connect($foundExcel.hWnd);
            
        {{{ExcelInstance}}} = $foundExcel;
        {{{ExcelWorkbookInstance}}} = $foundExcelWorkbook;
        {{{Worksheet}}} = $foundActiveSheet;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TimeWait" Tooltip="TimeWait" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ExcelInstance" Tooltip="Excel Instance Variable" CatalogName="Output" Type="Variable" Value="$Excel1" DefaultValue="&quot;&quot;" ValueType="ExcelInstance" />
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Output" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="Out Worksheet index" CatalogName="Output" Type="Variable" Value="$WorksheetIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Document" InternalName="SaveExcelDocument" FriendlyName="Save Excel Document" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="97">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveExcelDocument{{{block_id}}}
{          
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $ExcelPath     = {{{Path}}};  
    $ReadPasswordObj  = {{{ReadPassword}}};
    $WritePasswordObj = {{{WritePassword}}};
    
        $ExcelPath = ExpandConstFilePath $ExcelPath
             
        $ReadPassword = _checkpassword($ReadPasswordObj);
        $WritePassword = _checkpassword($WritePasswordObj);  
        
        $ExcelInstance         = {{{ExcelInstance}}};
        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};
        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }
             
        $typename = $ExcelWorkbookInstance.GetType().Name; 
            
        if($ExcelPath.Length -eq 0)
        {
            if($typename -ne "ExcelWorkbook")
            {                                    
                $ExcelInstance.DisplayAlerts = $false;
                $ExcelInstance.EnableEvents = $false;
                $ExcelWorkbookInstance.Save(); 
                $ExcelInstance.DisplayAlerts = $true;
                $ExcelInstance.EnableEvents = $true;
            }
            else
            {          
                $ExcelInstance.Save();
            }
        }
        else
        {          
            try { [System.IO.File]::Delete($ExcelPath); }
            catch { }
            
            if($typename -ne "ExcelWorkbook")
            {                        
                $ext = [System.IO.Path]::GetExtension($ExcelPath).ToLower(); 
                if($ext -eq ".pdf")
                {
                    $ExcelWorkbookInstance.ExportAsFixedFormat([Microsoft.Office.Interop.Excel.XlFixedFormatType]::xlTypePDF, $ExcelPath, [Microsoft.Office.Interop.Excel.XlFixedFormatQuality]::xlQualityStandard, $false, $true);
                }
                else
                {
                    $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbook;
                    if($ext -eq ".xlsm") 
                    {
                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlOpenXMLWorkbookMacroEnabled;
                    } 
                    if($ext -eq ".xls") 
                    {
                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlExcel8;
                    } 
                    if($ext -eq ".csv") 
                    {
                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlCSV;
                    }
                    if($ext -eq ".xml") 
                    {
                        $saveformat = [Microsoft.Office.Interop.Excel.XlFileFormat]::xlXMLSpreadsheet;
                    }  
                    
                    if([string]::IsNullOrEmpty($ReadPassword))
                    {
                        $ReadPassword_com = [System.Reflection.Missing]::Value;
                    } 
                    else
                    {
                        $ReadPassword_com = $ReadPassword;
                    }
                    if([string]::IsNullOrEmpty($WritePassword))
                    {
                        $WritePassword_com = [System.Reflection.Missing]::Value;
                    } 
                    else
                    {
                        $WritePassword_com = $WritePassword;
                    }
                          
                    $ExcelInstance.DisplayAlerts = $false;
                    $ExcelInstance.EnableEvents = $false;
                    $ExcelWorkbookInstance.SaveAs($ExcelPath, $saveformat, $ReadPassword_com, $WritePassword_com);
                    $ExcelInstance.DisplayAlerts = $true;
                    $ExcelInstance.EnableEvents = $true;  
                }
            }
            else
            {         
                if(-not [string]::IsNullOrEmpty($ReadPassword))
                {     
                    $ExcelInstance.Encryption.Password = $ReadPassword;
                } 
                elseif(-not [string]::IsNullOrEmpty($WritePassword))
                {     
                    $ExcelInstance.Encryption.Password = $WritePassword;
                }
                $ExcelInstance.SaveAs($ExcelPath);
            } 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelInstance" Tooltip="Excel Instance Variable" CatalogName="Required" Type="Variable" Value="$Excel1" DefaultValue="&quot;&quot;" ValueType="ExcelInstance" />
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Path" Tooltip="Path to Excel document" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ReadPassword" Tooltip="Read Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="WritePassword" Tooltip="Write Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Document" InternalName="CloseExcelDocument" FriendlyName="Close Excel Document" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="73">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CloseExcelDocument{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $ExcelInstance         = {{{ExcelInstance}}};
        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};
        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }
        
        $typename = $ExcelWorkbookInstance.GetType().Name;
        
        if($typename -ne "ExcelWorkbook")
        {           
            if(!$script:__ExcelInstances) { $script:__ExcelInstances = [MainHelpers.ClassExcelInstances]::new(); }
            $thispid = $script:__ExcelInstances.GetAndRemove($ExcelInstance.hWnd);
            
            $ExcelWorkbookInstance.Saved = $true;
            $ExcelWorkbookInstance.Close($true);
            $ExcelInstance.Quit();
            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($ExcelWorkbookInstance);
            [System.Runtime.Interopservices.Marshal]::ReleaseComObject($ExcelInstance); 
                   
            try 
            {     
                if($thispid -gt 0) 
                {
                    $proc = [System.Diagnostics.Process]::GetProcessById($thispid);
                    $proc.Kill();   
                }
            }
            catch{}
        }
        else
        {
            $ExcelWorkbookInstance.Dispose(); 
            $ExcelInstance.Dispose();  
        } 
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelInstance" Tooltip="Excel Instance Variable" CatalogName="Required" Type="Variable" Value="$Excel1" DefaultValue="&quot;&quot;" ValueType="ExcelInstance" />
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Cell Value" InternalName="GetExcelCellValue" FriendlyName="Get Excel Cell Value" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="100">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetExcelCellValue{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
             
        $Worksheet = {{{Worksheet}}};
        $Row       = {{{Row}}};
        $Col       = {{{Col}}}; 
        $Cell      = {{{Cell}}}; 
        $GetGroups = ${{{GetGroups}}};
    
        $listGroup = New-Object Collections.Generic.List[string];
        
        if($Cell.Length -gt 0)
        {       
            if($Cell.StartsWith("R"))
            {
                $Cell = $Cell.TrimStart("R");
                $CellArr = $Cell.Split("C");
                $Row = [int]$CellArr[0];
                $Col = [int]$CellArr[1];
            }
            else
            {
                $Row     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $Row.ToString() , '';
                $Col     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $Col += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }  
            }
        }    
            
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                      
            $rangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
            $cellValue = $rangecell.Value2;
                               
            if($GetGroups)
            {
                $OutlineLevel = [string]$rangecell.EntireRow.OutlineLevel;
                $OutlineLevelInt = _toint($OutlineLevel);
                if($OutlineLevelInt -gt 1)
                {
                    $temprow = $Row;
                    $styleOutline = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Outline.SummaryRow;
                    while($OutlineLevelInt -gt 1)
                    {
                        while($true)
                        {
                            if($styleOutline -eq 0) { $temprow--; }
                            else { $temprow++; }
                            $tempOutlineLevel = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($temprow,$Col).EntireRow.OutlineLevel;
                            $tempOutlineLevelInt = _toint($tempOutlineLevel);
                            if($tempOutlineLevelInt -lt $OutlineLevelInt) { break; }
                        }
                        if($styleOutline -eq 0) { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($temprow,$Col); }
                        else { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($temprow,$Col); }
                        $tempcellValue = $temprangecell.Value2;
                        if($null -eq $tempcellValue) { $tempcellValue = ""; }
                        $listGroup.Add($tempcellValue.ToString());
                        $OutlineLevel = [string]$temprangecell.EntireRow.OutlineLevel;
                        $OutlineLevelInt = _toint($OutlineLevel);
                    }
                } 
            }        
        }
        else
        {        
            if($numtemp -gt 0) { $worksheetvalue-- ; } 
            
            $rangecell = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$Row,$Col];
            $cellValue = $rangecell.Value;

            if($GetGroups)
            {
                $OutlineLevel = [string]$rangecell.EntireRow.OutlineLevel;
                $OutlineLevelInt = _toint($OutlineLevel);
                if($OutlineLevelInt -gt 0)
                {
                    $temprow = $Row;
                    $styleOutline = 0;
                    if({{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].OutLineSummaryBelow) { $styleOutline = 1; }
                    while($OutlineLevelInt -gt 0)
                    {
                        while($true)
                        {
                            if($styleOutline -eq 0) { $temprow--; }
                            else { $temprow++; }
                            $tempOutlineLevel = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$temprow,$Col].EntireRow.OutlineLevel;
                            $tempOutlineLevelInt = _toint($tempOutlineLevel);
                            if($tempOutlineLevelInt -lt $OutlineLevelInt) { break; }
                        }
                        if($styleOutline -eq 0) { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$temprow,$Col]; }
                        else { $temprangecell = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$temprow,$Col]; }
                        $tempcellValue = $temprangecell.Value;
                        if($null -eq $tempcellValue) { $tempcellValue = ""; }
                        $listGroup.Add($tempcellValue.ToString());
                        $OutlineLevel = [string]$temprangecell.EntireRow.OutlineLevel;
                        $OutlineLevelInt = _toint($OutlineLevel);
                    }
                }
            }
        }  
           
        if($null -ne {{{Result}}})
        {
            $resultType = {{{Result}}}.GetType().Name;
            if($null -eq $cellValue) { $cellValue = ""; }
            
            if($resultType -eq "Int32") { $resultValue = _toint($cellValue); }
            elseif($resultType -eq "Double") { $resultValue = _todouble($cellValue); }
            elseif($resultType -eq "Decimal") { $resultValue = _todecimal($cellValue); }
            elseif($resultType -eq "Boolean") { $resultValue = _tobool($cellValue); }
            elseif($columnType -eq "DateTime") 
            { 
                $tempval = 0; 
                if([double]::TryParse($cellValue.ToString(), [ref] $tempval)) { $resultValue = [DateTime]::FromOADate($tempval); } 
                else { $resultValue = [DateTime]::Parse($cellValue.ToString()); }
            } 
            else { $resultValue = $cellValue.ToString(); }  
        }
        else
        {
            $resultValue = $cellValue;
        }
            

        {{{Result}}} = $resultValue; 
        {{{ResultGroups}}} = $listGroup; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Cell" Tooltip="Cell name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="GetGroups" Tooltip="GetGroups" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into" CatalogName="Output" Type="Variable" Value="$Result" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ResultGroups" Tooltip="Result groups for value" CatalogName="Output" Type="Variable" Value="$ResultGroups" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Cell Value" InternalName="SetExcelCellValue" FriendlyName="Set Excel Cell Value" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="177">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetExcelCellValue{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                         
    $Worksheet = {{{Worksheet}}};
    $Row       = {{{Row}}};
    $Col       = {{{Col}}};
    $Cell      = {{{Cell}}};
    $Value     = {{{Value}}};
    $TypeValue = "{{{TypeValue}}}";
    
        if($Cell.Length -gt 0)
        {
            if($Cell.StartsWith("R") -and $Cell.Contains("C"))
            {
                $Cell = $Cell.TrimStart("R");
                $CellArr = $Cell.Split("C");
                $Row = [int]$CellArr[0];
                $Col = [int]$CellArr[1];
            }
            else
            {
                $Row     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $Row.ToString() , '';
                $Col     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $Col += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }  
            }
        } 
           
        if([string]::IsNullOrEmpty($Value)) { $Value = ""; }
              
        if($TypeValue -eq "Number")
        {                         
            $value_str  = $Value.ToString();
            $writeValue = [float]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
        }
        elseif($TypeValue -eq "Money")
        {         
            $value_str  = $Value.ToString();
            $valmoney   = [decimal]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
            $writeValue = [decimal][Math]::Round($valmoney, 2);
        } 
        elseif($TypeValue -eq "Text") 
        {
            $writeValue = $Value.ToString();
        }  
        else
        {
            $writeValue = $Value;
        }
           
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
          
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {      
            $worksheetobj = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue);
            if($TypeValue -eq "Image")
            {        
                $range = $worksheetobj.cells.item($Row,$Col);
                $Left = [float]$range.Left;
                $Top = [float]$range.Top;
                $worksheetobj.Shapes.AddPicture($writeValue, [Microsoft.Office.Core.MsoTriState]::msoFalse, [Microsoft.Office.Core.MsoTriState]::msoCTrue, $Left, $Top, -1, -1);
            } 
            else
            {
                if($TypeValue -eq "Text")
                {   
                    $isformula = $false; 
                    if($writeValue.Length -gt 0)
                    {
                        if($writeValue[0] -eq "=") { $isformula=$true; }
                    } 
                    if(!$isformula) { try { $worksheetobj.cells.item($Row,$Col).NumberFormat = "@"; } catch{} }
                }
                $worksheetobj.cells.item($Row,$Col) = $writeValue;
            }
        }
        else
        {    
            if($numtemp -gt 0) { $worksheetvalue-- ; }
            $worksheetobj = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];
            if($TypeValue -eq "Image")
            {
                $image = [System.Drawing.Image]::FromFile($writeValue);
                $excelImage = $worksheetobj.Drawings.AddPicture("My image", $image);
                $excelImage.SetPosition($Row-1, 0, $Col-1, 0);
            }
            else
            {
                $isformula = $false;            
                if($writeValue.GetType().Name -eq "String")
                {
                    if($writeValue.Length -gt 0)
                    {
                        if($writeValue[0] -eq "=") { $isformula=$true; }
                    }    
                }

                if($isformula)
                {
                    $writeValue = $writeValue.TrimStart("=");
                    $worksheetobj.Cells[$Row,$Col].Formula = $writeValue;
                }
                else 
                {       
                    $worksheetobj.Cells[$Row,$Col].Value = $writeValue;
                }            
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Cell" Tooltip="Cell name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="New value, variable or expression" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="TypeValue" Tooltip="Type value" CatalogName="Main properties" Type="Enum" Value="Any" EnumVariants="Any;Text;Number;Money;Image" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Load DataTable" InternalName="LoadDataTable" FriendlyName="Load DataTable" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="112">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LoadDataTable{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ExcelPath       = {{{Path}}};
    $hasHeader       = ${{{HasHeader}}};        
    $Worksheet       = {{{Worksheet}}};
    $ReadPasswordObj = {{{ReadPassword}}};  
    $OutTable        = {{{Table}}};
        
        $ExcelPath = ExpandConstFilePath $ExcelPath 
        
        if(![System.IO.File]::Exists($ExcelPath))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $ExcelPath");
            return;
        } 
         
        $stream = [System.IO.FileStream]::new($ExcelPath, [System.IO.FileMode]::Open, [System.IO.FileAccess]::Read, [System.IO.FileShare]::ReadWrite);
        
        $readerconf = $null;   
        
        $ReadPassword = _checkpassword($ReadPasswordObj);
            
        if(-not [string]::IsNullOrEmpty($ReadPassword))
        {    
            $readerconf          = [ExcelDataReader.ExcelReaderConfiguration]::new();
            $readerconf.Password = $ReadPassword;
        }
        
        $reader = [ExcelDataReader.ExcelReaderFactory]::CreateReader($stream, $readerconf);

        $datasetconf = [ExcelDataReader.ExcelDataSetConfiguration]::new();
        $datatableconf = [ExcelDataReader.ExcelDataTableConfiguration]::new();
        $datatableconf.UseHeaderRow = $hasHeader;
        $datasetconf.UseColumnDataType = $false;
        $datasetconf.ConfigureDataTable = [System.Func[ExcelDataReader.IExcelDataReader, ExcelDataReader.ExcelDataTableConfiguration]]{param($x) $datatableconf };

        $ds = [ExcelDataReader.ExcelDataReaderExtensions]::AsDataSet($reader, $datasetconf);
               
        [System.Data.DataTable]$tableresult = $null;
        if($Worksheet.GetType().Name -eq "String")
        {
            foreach($table in $ds.Tables)
            {
                if($table.TableName -eq $Worksheet)
                {
                    $tableresult = $table;
                    break;
                }
            }
        }
        else
        {     
            $Worksheet--;
            if($Worksheet -lt 0) { $Worksheet = 0; }
            if($Worksheet -ge $ds.Tables.Count) { $Worksheet = $ds.Tables.Count - 1; }
            for($ind = 0; $ind -lt $ds.Tables.Count; $ind++)
            {
                $tableresult = $ds.Tables[$ind];
                $propvalue = [string]$tableresult.ExtendedProperties["visiblestate"];
                if($propvalue.Contains("hidden"))
                {
                    continue;
                }
                $Worksheet--;
                if($Worksheet -lt 0) { break; }
            }
        } 
        
        $ds.Dispose();
        $reader.Dispose();
        $stream.Dispose();
        
        if(!$tableresult)
        {
            $__Error.Exception("Not found Worksheet: " + $Worksheet);
            return;
        } 
        
        if($OutTable)
        {        
            try
            {
                $dtCloned = $tableresult.Clone();
                foreach($column in $OutTable.Columns)
                {
                    if($dtCloned.Columns.Contains($column.ColumnName))
                    {
                        $dtCloned.Columns[$column.ColumnName].DataType = $column.DataType;
                    }
                }

                foreach($row in $tableresult.Rows)
                {
                    $dtCloned.ImportRow($row);
                }

                $OutTable = $dtCloned; 
            } 
            catch
            {
                $OutTable = $tableresult;
            }
        }
        else 
        {
            $OutTable = $tableresult;
        }
        
        {{{Table}}} = $OutTable; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable from excel" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Path" Tooltip="Path to Excel document" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="HasHeader" Tooltip="Load first row as header" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="ReadPassword" Tooltip="Read Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save DataTable" InternalName="SaveDataTable" FriendlyName="Save DataTable" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="75">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveDataTable{{{block_id}}}
{       
	try
	{
    {AddTypesXSLX} 
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
            
    $TableObj      = {{{Table}}};
    $ExcelPath     = {{{Path}}}; 
    $OverwriteFile = ${{{OverwriteFile}}}; 
    $AddToFile     = ${{{AddToFile}}};
    $WorksheetObj  = {{{Worksheet}}};  
    $InsertHeaders = ${{{InsertHeaders}}};
    
        $ExcelPath = ExpandConstFilePath $ExcelPath  
              
        if([System.IO.Path]::GetExtension($ExcelPath).ToLower() -ne ".xlsx")
        {
            $__Error.Exception("The block does not work with this file type");
            return;
        }
        
        if($OverwriteFile)
        {
            try{ [System.IO.File]::Delete($ExcelPath); }
            catch{}  
        } 
        
        if($null -eq $WorksheetObj) { $WorksheetObj = 1; }
        
        if([System.IO.File]::Exists($ExcelPath))
        {
            $package = [OfficeOpenXml.ExcelPackage]::new($ExcelPath);
            $numtemp = 0;
            if([int]::TryParse($WorksheetObj, [ref] $numtemp))
            {
                $worksheetvalue = $numtemp - 1;
            }
            else
            {
                $worksheetvalue = $WorksheetObj;
            }

            $instancesheet = $null;
            try { $instancesheet = $package.Workbook.Worksheets[$worksheetvalue]; }
            catch{}

            if($null -eq $instancesheet)
            {
                $worksheetsName = [System.IO.Path]::GetFileNameWithoutExtension($ExcelPath); 
                if($worksheetvalue.GetType().Name -eq "String")
                {
                    if($worksheetvalue.Length -gt 0) { $worksheetsName = $worksheetvalue; }
                }

                $addname =  $worksheetsName;
                $indexcount = 1;
                while($true)
                {
                    try { $instancesheet = $package.Workbook.Worksheets.Add($addname); }
                    catch{}
                    if($null -ne $instancesheet) { break; }
                    $addname = $worksheetsName + $indexcount.ToString();
                    $indexcount++;
                }
            }
                    
            if(-not $AddToFile)
            {
                $instancesheet.Cells.Clear();
            }           
        }
        else 
        {
            $worksheetsName = [System.IO.Path]::GetFileNameWithoutExtension($ExcelPath); 
            if($WorksheetObj.GetType().Name -eq "String")
            {
                if($WorksheetObj.Length -gt 0) { $worksheetsName = $WorksheetObj; }
            }

            $package = New-Object OfficeOpenXml.ExcelPackage;
            $instancesheet = $package.Workbook.Worksheets.Add($worksheetsName);
        }
              
        $rowc = $instancesheet.Dimension.End.Row;
        if($null -eq $rowc) { $rowc = 0; }
        
        $i = 1;

        if($rowc -eq 0 -and $InsertHeaders)
        {
            $j = 1;
            foreach($column in $TableObj.Columns)
            {
                $instancesheet.Cells[$i, $j++].Value = $column.Caption;
            }  
            $rowc = 1;
        }

        $i = $rowc + 1;    
        foreach($row in $TableObj.Rows)
        {
            $j = 1;
            foreach($val in $row.ItemArray)
            {                     
                $CurTypeValue = $TableObj.Columns[$j-1].DataType.Name;
                if($CurTypeValue -eq "DateTime")
                {
                    $dtformat = $TableObj.Columns[$j-1].DefaultCellStyle.Format;
                    if($null -eq $dtformat) { $dtformat = "dd.MM.yyyy HH:mm:ss"; }
                    $instancesheet.Cells[$i, $j].Style.Numberformat.Format = $dtformat;
                    $instancesheet.Cells[$i, $j].Value = $val;
                }
                else
                {
                    $instancesheet.Cells[$i, $j].Value = $val;
                }
                $j++;
            }
            $i++;
        }
        $package.SaveAs($ExcelPath);
        $package.Dispose();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Path" Tooltip="Path to Excel document" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Main properties" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="InsertHeaders" Tooltip="Insert headers" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OverwriteFile" Tooltip="Overwrite File" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AddToFile" Tooltip="AddToFile" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="1" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Worksheet" InternalName="AddWorksheet" FriendlyName="Add Worksheet" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="37">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AddWorksheet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
            
    $worksheetname = {{{WorksheetName}}};
    
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                               
            $sheet = {{{ExcelWorkbookInstance}}}.WorkSheets.item({{{ExcelWorkbookInstance}}}.WorkSheets.Count);
            {{{ExcelWorkbookInstance}}}.WorkSheets.Add([System.Reflection.Missing]::Value, $sheet);
            {{{Worksheet}}} = {{{ExcelWorkbookInstance}}}.WorkSheets.Count; 
            {{{ExcelWorkbookInstance}}}.WorkSheets.item({{{Worksheet}}}).Name = $worksheetname;
        }
        else
        {
            {{{ExcelWorkbookInstance}}}.Worksheets.Add($worksheetname);
            {{{Worksheet}}} = {{{ExcelWorkbookInstance}}}.Worksheets.Count;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="WorksheetName" Tooltip="Name of worksheet" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Worksheet" Tooltip="Return ID worksheet" CatalogName="Output" Type="Variable" Value="$WorksheetIndex" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Delete Worksheet" InternalName="DeleteWorksheet" FriendlyName="Delete Worksheet" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DeleteWorksheet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
         
    $Worksheet = {{{Worksheet}}};
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                               
            {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Delete();
        }
        else
        {      
            if($numtemp -gt 0) { $worksheetvalue-- ; } 
            $worksheet = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];
            {{{ExcelWorkbookInstance}}}.Worksheets.Delete($worksheet);
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rename Worksheet" InternalName="RenameWorksheet" FriendlyName="Rename Worksheet" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RenameWorksheet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
           
    $Worksheet = {{{Worksheet}}};
    $worksheetname = {{{WorksheetName}}};
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                               
            {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Name = $worksheetname;
        }
        else
        {         
            if($numtemp -gt 0) { $worksheetvalue-- ; } 
            {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Name = $worksheetname;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="WorksheetName" Tooltip="New name of worksheet" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Activate Worksheet" InternalName="ActivateWorksheet" FriendlyName="Activate Worksheet" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="3" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ActivateWorksheet{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
         
    $Worksheet = {{{Worksheet}}};
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                               
            {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Activate();
        }
        else
        {      
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Copy Cells" InternalName="CopyCells" FriendlyName="Copy Cells" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="34" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CopyCells{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
            
    $FromWorksheet = {{{FromWorksheet}}};
    $ToWorksheet = {{{ToWorksheet}}};
    $FromRange = {{{FromRange}}}; 
    $ToRange = {{{ToRange}}}; 
    
        $fromnumtemp = 0;
        if([int]::TryParse($FromWorksheet, [ref] $fromnumtemp))
        {
            $fromworksheetvalue = $fromnumtemp;
        }
        else
        {
            $fromworksheetvalue = $FromWorksheet;
        }
        
        $tonumtemp = 0;
        if([int]::TryParse($ToWorksheet, [ref] $tonumtemp))
        {
            $toworksheetvalue = $tonumtemp;
        }
        else
        {
            $toworksheetvalue = $ToWorksheet;
        }
        
        $typename = {{{FromExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                   
            $t = {{{FromExcelWorkbookInstance}}}.WorkSheets.item($fromworksheetvalue).Range($FromRange).Copy([System.Type]::Missing); 
            $t = {{{ToExcelWorkbookInstance}}}.WorkSheets.item($toworksheetvalue).Range($ToRange).PasteSpecial(-4163, -4142);
        }
        else
        {        
            if($fromnumtemp -gt 0) { $fromworksheetvalue-- ; } 
            if($tonumtemp -gt 0) { $toworksheetvalue-- ; }
            {{{FromExcelWorkbookInstance}}}.Worksheets[$fromworksheetvalue].Cells[$FromRange].Copy({{{ToExcelWorkbookInstance}}}.Worksheets[$toworksheetvalue].Cells[$ToRange]);
        } 
        
        try{ [System.Windows.Forms.Clipboard]::Clear(); }
        catch {}
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FromExcelWorkbookInstance" Tooltip="From Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$FromExcelWorkbook" DefaultValue="&quot;&quot;" ValueType="FromExcelWorkbookInstance" />
                                   <core:Property Name="FromWorksheet" Tooltip="From ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="FromRange" Tooltip="From Range" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ToExcelWorkbookInstance" Tooltip="To Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ToExcelWorkbook" DefaultValue="&quot;&quot;" ValueType="ToExcelWorkbookInstance" />
                                   <core:Property Name="ToWorksheet" Tooltip="To ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="ToRange" Tooltip="To Range" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Range" InternalName="GetExcelRange" FriendlyName="Get Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="94">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetExcelRange{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
             
    $Worksheet      = {{{Worksheet}}};
    $Range          = {{{Range}}}; 
    $HasHeaders     = ${{{HasHeaders}}}; 
    $ConsiderEmpty  = ${{{ConsiderEmpty}}};
    $ConsiderHidden = ${{{ConsiderHidden}}};
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
             
        if($null -eq {{{Result}}}) { {{{Result}}} = New-Object System.Data.DataTable; }
        $resulttable = {{{Result}}};   
        
        if($null -eq $Range) { $Range = ""; }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {               
            $startCol = 1;
            $startRow = 1;
            $endCol = 1;
            $endRow = 1;

            if($Range.Length -gt 0)
            {
                $strarr = $Range.Split(":");
                $Cell = $strarr[0];
                $startRow     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $startRow.ToString() , '';
                $startCol     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $startCol += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }
            }

            if($Range.Length -eq 0 -or -not $Range.Contains(":") -or $Range.Contains("*"))
            {
                $tempranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).UsedRange;
                foreach($r in $tempranges)
                {
                    $indexCol = $r.Column;
                    $indexRow = $r.Row;
    
                    if(-not $ConsiderEmpty)
                    {
                        $text = [string]$r.Text;
                        if([string]::IsNullOrEmpty($text))
                        {
                            continue;
                        }
                    }
    
                    if(-not $ConsiderHidden)
                    {
                        if($r.EntireColumn.Hidden) { continue; }
                        if($r.EntireRow.Hidden) { continue; }
                    }
    
                    if($indexCol -gt $endCol)
                    {
                        $endCol = $indexCol;
                    }
                    if($indexRow -gt $endRow)
                    {
                        $endRow = $indexRow;
                    }
                }

                if($Range.Contains("*"))
                {
                    $Range  = $Range.Replace("**", "*");
                    $strarr = $Range.Split(":");
                    $range1 = $strarr[0].Trim();
                    $range2 = $strarr[1].Trim();
                    if($range2 -eq "*") { }
                    elseif ($range2.StartsWith("*"))
                    {
                        $range2 = $range2.TrimStart("*");
                        $endRow = _toint($range2);
                    }
                    elseif ($range2.EndsWith("*"))
                    {
                        $range2 = $range2.TrimEnd("*");
                        $endCol = _fromcell($range2);
                    } 
                }
            }
            elseif($Range.Contains(":")) 
            {
                $strarr = $Range.Split(":");
                $Cell = $strarr[1];
                $endRow     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $endRow.ToString() , '';
                $endCol     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $endCol += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }
            }

            $indexRow = 0;
            for($y = $startRow; $y -le $endRow; $y++, $indexRow++)
            {
                $indexCol = 0;
                for($x = $startCol; $x -le $endCol; $x++, $indexCol++)
                {               
                    $rangecell = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($y,$x);
                    $cellValue = $rangecell.Value2; 

                    while ($indexCol -ge $resultTable.Columns.Count)
                    {
                        $columnName = "Column" + $resultTable.Columns.Count;
                        while($resultTable.Columns.Contains($columnName)) { $columnName += $resultTable.Columns.Count.ToString(); }
                        $_ = $resultTable.Columns.Add($columnName, [String]);
                    }
                    
                    while ($indexRow -ge $resultTable.Rows.Count)
                    {
                        $newrow = $resultTable.NewRow();
                        $_ = $resultTable.Rows.Add($newrow);
                    }
    
                    $columnType = $resultTable.Columns[$indexCol].DataType.Name;
                    if($null -ne $cellValue)
                    {
                        if($columnType -eq "Int32") { $resultValue = _toint($cellValue); }
                        elseif($columnType -eq "Double") { $resultValue = _todouble($cellValue); }
                        elseif($columnType -eq "Decimal") { $resultValue = _todecimal($cellValue); }
                        elseif($columnType -eq "Boolean") { $resultValue = _tobool($cellValue); }
                        elseif($columnType -eq "DateTime") 
                        { 
                            $tempval = 0; 
                            if([double]::TryParse($cellValue.ToString(), [ref] $tempval)) { $resultValue = [DateTime]::FromOADate($tempval); } 
                            else { $resultValue = [DateTime]::Parse($cellValue.ToString()); }
                        } 
                        else { $resultValue = $cellValue.ToString(); }
                
                        $resultTable.Rows[$indexRow][$indexCol] = $resultValue;
                    }
                }
            }
        }
        else
        {       
            if($numtemp -gt 0) { $worksheetvalue-- ; }     
            
            $thisworkSheet = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue];

            $startCol = 1;
            $startRow = 1;
            $endCol = 1;
            $endRow = 1;

            if($Range.Length -gt 0)
            {
                $strarr = $Range.Split(":");
                $Cell = $strarr[0];
                $startRow = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $startRow.ToString() , '';
                $startCol = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $startCol += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }
            }

            if($Range.Length -eq 0 -or -not $Range.Contains(":") -or $Range.Contains("*"))
            {         
                if($ConsiderEmpty -and $ConsiderHidden)
                {
                    $endRow = $thisworkSheet.Dimension.End.Row;
                    $endCol = $thisworkSheet.Dimension.End.Column;
                }
                else
                {
                    $tempranges = $thisworkSheet.Cells;                
                    foreach($r in $tempranges)
                    {
                        $indexCol = $r.Start.Column;
                        $indexRow = $r.Start.Row;
        
                        if(-not $ConsiderEmpty)
                        {
                            $text = [string]$r.Text;
                            if([string]::IsNullOrEmpty($text))
                            {
                                continue;
                            }
                        }
        
                        if(-not $ConsiderHidden)
                        {
                            if($thisworkSheet.Column($indexCol).Hidden) { continue; }
                            if($thisworkSheet.Row($indexRow).Hidden) { continue; }
                        }
        
                        if($indexCol -gt $endCol)
                        {
                            $endCol = $indexCol;
                        }
                        if($indexRow -gt $endRow)
                        {
                            $endRow = $indexRow;
                        }
                    } 
                }

                if($Range.Contains("*"))
                {
                    $Range  = $Range.Replace("**", "*");
                    $strarr = $Range.Split(":");
                    $range1 = $strarr[0].Trim();
                    $range2 = $strarr[1].Trim();
                    if($range2 -eq "*") { }
                    elseif ($range2.StartsWith("*"))
                    {
                        $range2 = $range2.TrimStart("*");
                        $endRow = _toint($range2);
                    }
                    elseif ($range2.EndsWith("*"))
                    {
                        $range2 = $range2.TrimEnd("*");
                        $endCol = _fromcell($range2);
                    } 
                }
            }
            elseif($Range.Contains(":")) 
            {
                $strarr = $Range.Split(":");
                $Cell = $strarr[1];
                $endRow     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $endRow.ToString() , '';
                $endCol     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $endCol += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }
            }

            $indexRow = 0;
            for($y = $startRow; $y -le $endRow; $y++, $indexRow++)
            {
                $indexCol = 0;
                for($x = $startCol; $x -le $endCol; $x++, $indexCol++)
                {               
                    $rangecell = $thisworkSheet.Cells[$y,$x];
                    $cellValue = $rangecell.Value; 

                    if([string]::IsNullOrEmpty($cellValue) -and -not [string]::IsNullOrEmpty($r.Formula))
                    {
                        $cellformula = $rangecell.Formula;
                        if($cellformula.StartsWith("HYPERLINK"))
                        {
                            $ind1 = $cellformula.LastIndexOf("`"");
                            if($ind1 -gt 0)
                            {
                                $ind2 = $cellformula.LastIndexOf("`"", $ind1 - 1);
                                if($ind2 -gt 0)
                                {
                                    $ind2++;
                                    $cellValue = $cellformula.SubString($ind2, $ind1 - $ind2);
                                }
                            }
                        }
                    }

                    while ($indexCol -ge $resultTable.Columns.Count)
                    {
                        $columnName = "Column" + $resultTable.Columns.Count;
                        while($resultTable.Columns.Contains($columnName)) { $columnName += $resultTable.Columns.Count.ToString(); }
                        $_ = $resultTable.Columns.Add($columnName, [String]);
                    }
                    
                    while ($indexRow -ge $resultTable.Rows.Count)
                    {
                        $newrow = $resultTable.NewRow();
                        $_ = $resultTable.Rows.Add($newrow);
                    }
    
                    $columnType = $resultTable.Columns[$indexCol].DataType.Name;
                    if($null -ne $cellValue)
                    {
                        if($columnType -eq "Int32") { $resultValue = _toint($cellValue); }
                        elseif($columnType -eq "Double") { $resultValue = _todouble($cellValue); }
                        elseif($columnType -eq "Decimal") { $resultValue = _todecimal($cellValue); }
                        elseif($columnType -eq "Boolean") { $resultValue = _tobool($cellValue); }
                        elseif($columnType -eq "DateTime") 
                        { 
                            $tempval = 0; 
                            if([double]::TryParse($cellValue.ToString(), [ref] $tempval)) { $resultValue = [DateTime]::FromOADate($tempval); } 
                            else { $resultValue = [DateTime]::Parse($cellValue.ToString()); }
                        } 
                        else { $resultValue = $cellValue.ToString(); }
                
                        $resultTable.Rows[$indexRow][$indexCol] = $resultValue;
                    }
                }
            }
        } 
        
        if($HasHeaders -and $resultTable.Rows.Count -gt 0)
        {
            $firstRow = $resultTable.Rows[0];
            for ($i = 0; $i -lt $resultTable.Columns.Count; $i++)
            {      
                $cellValue  = $firstRow[$i];
                $columnName = _tostring($cellValue); 
                if(-not [string]::IsNullOrEmpty($columnName.Trim()))
                { 
                    while($resultTable.Columns.Contains($columnName)) { $columnName += $resultTable.Columns.Count.ToString(); }
                    $resultTable.Columns[$i].ColumnName = $columnName;
                }
            } 
            $resultTable.Rows.RemoveAt(0);
        }
        
        {{{Result}}} = $resulttable;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Range" Tooltip="Range value (eq. &quot;A1:C1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="HasHeaders" Tooltip="First row as headers" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ConsiderEmpty" Tooltip="Consider empty" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ConsiderHidden" Tooltip="Consider hidden" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return table" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Range" InternalName="SetExcelRange" FriendlyName="Set Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="72">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetExcelRange{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Worksheet     = {{{Worksheet}}};
    $Range         = {{{Range}}};
    $Table         = {{{Table}}};
    $TypeValue     = "{{{TypeValue}}}";
    $InsertHeaders = ${{{InsertHeaders}}};
    
        $Range   = $Range.Split(':')[0]; 
        $Row     = [int]($Range -replace "[^0-9]" , '');
        $nameCol = $Range -replace $Row.ToString() , '';
        $Col     = 0;
        $pow     = 1;
        for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
        {
            $Col += ($nameCol[$i] - 65 + 1) * $pow;
            $pow *= 26;
        }
        
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {                                  
            if($InsertHeaders)
            {
                for($j=0;$j -lt $Table.Columns.Count;$j++)
                {            
                    $r = $Row;
                    $c = $Col + $j;
                    
                    try                        
                    {
                        {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c).NumberFormat = "@";
                    }
                    catch{}
                    $writeValue = [string]$Table.Columns[$j].ColumnName; 
                    {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c) = $writeValue;
                }
                
                $Row++;
            }
            
            for($i=0;$i -lt $Table.Rows.Count;$i++)
            {
                for($j=0;$j -lt $Table.Columns.Count;$j++)
                {         
                    $r = $Row + $i;
                    $c = $Col + $j;    
                                     
                    $CurTypeValue = $TypeValue;
                    if($CurTypeValue -eq "Default") { $CurTypeValue = $Table.Columns[$j].DataType.Name; }
                    if($CurTypeValue -eq "Number")
                    {        
                        $value_str  = [string]$Table.Rows[$i][$j]; 
                        $writeValue = [float]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
                        {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c) = $writeValue;
                    }
                    elseif($CurTypeValue -eq "Money")
                    {         
                        $value_str = [string]$Table.Rows[$i][$j];                         
                        $valmoney   = [decimal]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
                        $writeValue = [decimal][Math]::Round($valmoney, 2);
                        {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c) = $writeValue;
                    } 
                    elseif($CurTypeValue -eq "Text" -or $CurTypeValue -eq "String") 
                    {          
                        $writeValueStr = [string]$Table.Rows[$i][$j];
                        try                        
                        {     
                            $isformula = $false; 
                            if($writeValueStr.Length -gt 0)
                            {
                                if($writeValueStr[0] -eq "=") { $isformula=$true; }
                            } 
                            if(!$isformula) { try { {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c).NumberFormat = "@"; } catch{} }
                        }
                        catch{}
                        {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c) = $writeValueStr;
                    } 
                    else
                    {
                        {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c) = $Table.Rows[$i][$j];
                    }
                } 
            } 
        }
        else
        {     
            if($numtemp -gt 0) { $worksheetvalue-- ; }  
           
            if($InsertHeaders)
            {
                for($j=0;$j -lt $Table.Columns.Count;$j++)
                {            
                    $r = $Row;
                    $c = $Col + $j;
                    
                    $writeValue = [string]$Table.Columns[$j].ColumnName; 
                    {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Value = $writeValue;
                }
                
                $Row++;
            }
            
            for($i=0;$i -lt $Table.Rows.Count;$i++)
            {
                for($j=0;$j -lt $Table.Columns.Count;$j++)
                {         
                    $r = $Row + $i;
                    $c = $Col + $j;
                          
                    $CurTypeValue = $TypeValue;
                    if($CurTypeValue -eq "Default") { $CurTypeValue = $Table.Columns[$j].DataType.Name; }
                    if($CurTypeValue -eq "Number")
                    {             
                        $value_str = [string]$Table.Rows[$i][$j]; 
                        $writeValue = [float]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);  
                        {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Value = $writeValue;
                    }
                    elseif($CurTypeValue -eq "Money")
                    {              
                        $value_str = [string]$Table.Rows[$i][$j];                        
                        $valmoney   = [decimal]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
                        $writeValue = [decimal][Math]::Round($valmoney, 2);  
                        {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Value = $writeValue;
                    } 
                    elseif($CurTypeValue -eq "Text" -or $CurTypeValue -eq "String")  
                    {                       
                        $isformula  = $false; 
                        $writeValue = [string]$Table.Rows[$i][$j];
                        if($writeValue.Length -gt 0)
                        {
                            if($writeValue[0] -eq "=") { $isformula=$true; }
                        }
                        
                        if($isformula)
                        {
                            $writeValue = $writeValue.TrimStart("=");
                            {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Formula = $writeValue;
                        }
                        else 
                        {       
                            {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Value = $writeValue;
                        }
                    } 
                    elseif($CurTypeValue -eq "DateTime")
                    {                                       
                        $dtformat = $Table.Columns[$j].DefaultCellStyle.Format;
                        if($null -ne $dtformat)
                        { {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Style.Numberformat.Format = $dtformat; }
                        else
                        {
                            $NumFmtID = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Style.Numberformat.NumFmtID;
                            if($NumFmtID -eq 0)
                            { {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Style.Numberformat.Format = "dd.MM.yyyy HH:mm:ss"; }
                        }
                        {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Value = $Table.Rows[$i][$j];  
                    }
                    else
                    {
                        {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$r,$c].Value = $Table.Rows[$i][$j];
                    }                 
                } 
            } 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Range" Tooltip="Range value (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table to insert" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="TypeValue" Tooltip="Type value" CatalogName="Main properties" Type="Enum" Value="Default" EnumVariants="Default;Text;Number;Money" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsertHeaders" Tooltip="Insert headers" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Clear Range" InternalName="ClearExcelRange" FriendlyName="Clear Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClearExcelRange{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
             
    $Worksheet  = {{{Worksheet}}};
    $Range      = {{{Range}}}; 
    $ClearValue = {{{ClearValue}}}; 
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
                     
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {         
            if($Range.Length -eq 0)
            {
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).UsedRange;
            }
            else 
            {       
                if(-not $Range.Contains(":") -or $Range.Contains("*"))
                {         
                    $col_index      = 0;
                    $row_index      = 0;
                    $rowc           = 0;
                    $columnc        = 0;
                    $tempranges     = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).UsedRange; 
                    $last_indexCol  = 0;
                    $last_indexRow  = 0;
                    foreach($r in $tempranges)
                    {
                        $indexCol = $r.Column;
                        $indexRow = $r.Row;
        
                        if($col_index -gt 0)
                        {
                            if($col_index -ne $indexCol) { continue; }
                        }
                        if($row_index -gt 0)
                        {
                            if($row_index -ne $indexRow) { continue; }
                        }
        
                        if(-not $ConsiderEmpty)
                        {
                            $text = [string]$r.Text;
                            if([string]::IsNullOrEmpty($text))
                            {
                                continue;
                            }
                        }
        
                        if(-not $ConsiderHidden)
                        {
                            if($r.EntireColumn.Hidden) { continue; }
                            if($r.EntireRow.Hidden) { continue; }
                        }
        
                        if($indexCol -gt $last_indexCol)
                        {
                            $last_indexCol = $indexCol;
                            $columnc++;
                        }
                        if($indexRow -gt $last_indexRow)
                        {
                            $last_indexRow = $indexRow;
                            $rowc++;
                        }
                    }

                    $columnName = "";
                    while ($columnc -gt 0)
                    {
                        $modulo = [int](($columnc - 1) % 26);
                        $columnName = [Convert]::ToChar(65 + $modulo) + $columnName;
                        $columnc = [int](($columnc - $modulo) / 26);
                    } 
                    
                    if(-not $Range.Contains(":"))
                    {
                        $Range += ":" + $columnName + $rowc;
                    }
                    elseif($Range.Contains("*"))
                    {           
                        $Range  = $Range.Replace("**", "*");
                        $strarr = $Range.Split(":");
                        $range1 = $strarr[0].Trim();
                        $range2 = $strarr[1].Trim();
                        if($range2 -eq "*")
                        {
                            $range2 = $columnName + $rowc;
                        }
                        elseif ($range2.StartsWith("*"))
                        {
                            $range2 = $range2.TrimStart("*");
                            $range2 = $columnName + $range2;
                        }
                        elseif ($range2.EndsWith("*"))
                        {
                            $range2 = $range2.TrimEnd("*");
                            $range2 = $range2 + $rowc;
                        } 
                        $Range = $range1 + ":" + $range2;
                    }
                }
                
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Range($Range);    
            }

            foreach($r in $ranges)
            {
                $r.Value2 = $ClearValue;
            }

        }
        else
        {       
            if($numtemp -gt 0) { $worksheetvalue-- ; }      
            if($Range.Length -eq 0)
            {
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells;
            }
            else 
            {                   
                if(-not $Range.Contains(":") -or $Range.Contains("*"))
                {
                    $worksheet = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue];
            
                    $rowc = $worksheet.Dimension.End.Row;
                    $columnc = $worksheet.Dimension.End.Column;

                    $columnName = "";
                    while ($columnc -gt 0)
                    {
                        $modulo = [int](($columnc - 1) % 26);
                        $columnName = [Convert]::ToChar(65 + $modulo) + $columnName;
                        $columnc = [int](($columnc - $modulo) / 26);
                    }

                    if(-not $Range.Contains(":"))
                    {
                        $Range += ":" + $columnName + $rowc;
                    }
                    elseif($Range.Contains("*"))
                    {                 
                        $Range  = $Range.Replace("**", "*");
                        $strarr = $Range.Split(":");
                        $range1 = $strarr[0].Trim();
                        $range2 = $strarr[1].Trim();
                        if($range2 -eq "*")
                        {
                            $range2 = $columnName + $rowc;
                        }
                        elseif ($range2.StartsWith("*"))
                        {
                            $range2 = $range2.TrimStart("*");
                            $range2 = $columnName + $range2;
                        }
                        elseif ($range2.EndsWith("*"))
                        {
                            $range2 = $range2.TrimEnd("*");
                            $range2 = $range2 + $rowc;
                        } 
                        $Range = $range1 + ":" + $range2;
                    }
                }
                
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$Range];    
            }            

            foreach($r in $ranges)
            {
                $r.Value = $ClearValue;
            }
        }               
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Range" Tooltip="Range value (eq. &quot;A1:C1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ClearValue" Tooltip="ClearValue" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert Excel Table" InternalName="InsertExcelTable" FriendlyName="Insert Excel Table" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="19">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertExcelTable{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Worksheet = {{{Worksheet}}};
    $Range = {{{Range}}};
    $Table = {{{Table}}}; 
    $CopyFormat  = "{{{CopyFormat}}}";
    
        $Cell   = $Range.Split(':')[0]; 
        if($Cell.StartsWith("R"))
            {
                $Cell = $Cell.TrimStart("R");
                $CellArr = $Cell.Split("C");
                $Row = [int]$CellArr[0];
                $Col = [int]$CellArr[1];
            }
            else
            {
                $Row     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $Row.ToString() , '';
                $Col     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $Col += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }  
            }
        
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {          
            $formatFrom = [Microsoft.Office.Interop.Excel.XlInsertFormatOrigin]::xlFormatFromLeftOrAbove;
            $xlShiftDown    = [Microsoft.Office.Interop.Excel.XlInsertShiftDirection]::xlShiftDown;
            $xlShiftToRight = [Microsoft.Office.Interop.Excel.XlInsertShiftDirection]::xlShiftToRight;
                
            if($CopyFormat -eq "RightOrBelow")
            { $formatFrom = [Microsoft.Office.Interop.Excel.XlInsertFormatOrigin]::xlFormatFromRightOrBelow; }
           
            for($j=0;$j -lt $Table.Columns.Count;$j++)
            {
                $c = $Col + $j;
                for($i=0;$i -lt $Table.Rows.Count;$i++)
                {
                    $r = $Row + $i;
                    {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c).Insert($xlShiftDown, $formatFrom);    
                }
            }
            
            for($i=0;$i -lt $Table.Rows.Count;$i++)
            {
                for($j=0;$j -lt $Table.Columns.Count;$j++)
                {         
                    $r = $Row + $i;
                    $c = $Col + $j;
                    {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($r,$c) = $Table.Rows[$i][$j];
                } 
            } 
        }
        else
        {     
            if($numtemp -gt 0) { $worksheetvalue-- ; }  
            
            $sheet = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];
            for($j=0;$j -lt $Table.Columns.Count;$j++)
            {
                $c = $Col + $j;
                for($i=0;$i -lt $Table.Rows.Count;$i++)
                {
                    $r  = $Row + $i;
                    $sheet.Cells[$r,$c].Insert([OfficeOpenXml.eShiftTypeInsert]::Down);
                }
            }
            
            for($i=0;$i -lt $Table.Rows.Count;$i++)
            {
                for($j=0;$j -lt $Table.Columns.Count;$j++)
                {         
                    $r = $Row + $i;
                    $c = $Col + $j;        
                    $sheet.Cells[$r,$c].Value = $Table.Rows[$i][$j];
                } 
            } 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Range" Tooltip="Range value (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table to insert" CatalogName="Required" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="CopyFormat" Tooltip="Copy format" CatalogName="Main properties" Type="Enum" Value="LeftOrAbove" EnumVariants="LeftOrAbove;RightOrBelow" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Text Excel" InternalName="FindTextExcel" FriendlyName="Find Text Excel" PathStyle="{StaticResource GreenRhombus}" PathStyle_DragThumb="{StaticResource GreenRhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="59">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindTextExcel{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $InString       = {{{InString}}}; 
    $SearchOrderStr = "{{{SearchOrder}}}";
    $FromRow        = {{{FromRow}}};
    $FromCol        = {{{FromCol}}};  
    $WholeCell      = ${{{WholeCell}}};
    
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        { 
            $script:LastCell{{{block_id}}} = $null;
            $script:BeginAddress{{{block_id}}} = "";
        }

        $resultcol = -1;
        $resultrow = -1;
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {         
            $WorkSheet = {{{ExcelWorkbookInstance}}}.WorkSheets.item({{{Worksheet}}}); 
                      
            if(!$script:LastCell{{{block_id}}})
            {
                if($FromRow.ToString().Length -eq 0) { $FromRow = 1; }
                if($FromCol.ToString().Length -eq 0) { $FromCol = 1; }
            }
            else 
            {
                $FromRow = $script:LastCell{{{block_id}}}.Y;
                $FromCol = $script:LastCell{{{block_id}}}.X;
            }
            
            if($FromRow -lt 1) { $FromRow = 1; } 
            if($FromCol -lt 1) { $FromCol = 1; }

            $fromcell = $WorkSheet.cells.item($FromRow,$FromCol);
            $LookIn   = [Microsoft.Office.Interop.Excel.XlFindLookIn]::xlValues;
            if($WholeCell) {$LookAt   = [Microsoft.Office.Interop.Excel.XlLookAt]::xlWhole;}
            else {$LookAt   = [Microsoft.Office.Interop.Excel.XlLookAt]::xlPart;}
            if($SearchOrderStr -eq "ByRows") { $SearchOrder = [Microsoft.Office.Interop.Excel.XlSearchOrder]::xlByRows; }
            else { $SearchOrder = [Microsoft.Office.Interop.Excel.XlSearchOrder]::xlByColumns; }
            $XlSearchDirection = [Microsoft.Office.Interop.Excel.XlSearchDirection]::xlNext;
                
            $found = $WorkSheet.Cells.Find($InString, $fromcell, $LookIn, $LookAt, $SearchOrder, $XlSearchDirection);
            if($found)
            {
                $address = $found.Address(0,0,1,1);
                if($address -ne $script:BeginAddress{{{block_id}}})
                {
                    $resultcol = $found.Column;
                    $resultrow = $found.Row;
                    $script:LastCell{{{block_id}}} = [System.Drawing.Point]::new($resultcol, $resultrow);
                }

                if(!$script:BeginAddress{{{block_id}}})
                {
                    $script:BeginAddress{{{block_id}}} = $address;
                }

                $found = $null;
            }
            else 
            {
                $script:LastCell{{{block_id}}} = $null;
                $script:BeginAddress{{{block_id}}} = "";    
            }
            
            {{{Row}}} = $resultrow;
            {{{Col}}} = $resultcol;
                      
            if ($resultrow -ge 0 -and $resultcol -ge 0) 
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;   
            }
            else
            {     
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
        }
        else
        {       
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" Visible="True" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SearchOrder" Tooltip="Search Order" CatalogName="Main properties" Type="Enum" Value="ByRows" EnumVariants="ByColumns;ByRows" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FromRow" Tooltip="From row" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FromCol" Tooltip="From col" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WholeCell" Tooltip="The whole cell" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Output" Type="Variable" Value="$row" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Output" Type="Variable" Value="$col" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Count Excel Workbook" InternalName="CountExcelWorkbook" FriendlyName="Count Excel Workbook" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CountExcelWorkbook{{{block_id}}}
{        
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $IncludeHidden = ${{{IncludeHidden}}};
    
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;  
        
        $listnames = New-Object Collections.Generic.List[string];
        
        if($typename -ne "ExcelWorkbook")
        {      
            foreach($book in {{{ExcelWorkbookInstance}}}.WorkSheets)
            {        
                if(-not $IncludeHidden)
                {
                    $isHidden = $book.Visible -eq [Microsoft.Office.Interop.Excel.XlSheetVisibility]::xlSheetHidden;
                    if($isHidden) { continue; }
                }
                
                $listnames.Add($book.Name);
            }
        }
        else
        {
            foreach($book in {{{ExcelWorkbookInstance}}}.WorkSheets)
            {     
                if(-not $IncludeHidden)
                {
                    $isHidden = [int]$book.Hidden;
                    if($isHidden -eq 1) { continue; }
                }
                
                $listnames.Add($book.Name);
            } 
        }
        
        {{{NameWorkbooks}}} = $listnames;
        {{{CountWorkbooks}}} = $listnames.Count;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="IncludeHidden" Tooltip="IncludeHidden" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CountWorkbooks" Tooltip="Variable count workbooks" CatalogName="Output" Type="Variable" Value="$Count" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NameWorkbooks" Tooltip="NameWorkbooks" CatalogName="Output" Type="Variable" Value="$Names" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert Excel Range" InternalName="InsertExcelRange" FriendlyName="Insert Excel Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="36">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertExcelRange{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                         
    $Worksheet   = {{{Worksheet}}};
    $Row         = {{{Row}}};
    $Col         = {{{Col}}};
    $Cell        = {{{Cell}}}; 
    $InsertType  = "{{{InsertType}}}"; 
    $CopyFormat  = "{{{CopyFormat}}}";
    $InsertCount = {{{InsertCount}}};
    
        if($Cell.Length -gt 0)
        {
            if($Cell.StartsWith("R"))
            {
                $Cell = $Cell.TrimStart("R");
                $CellArr = $Cell.Split("C");
                $Row = [int]$CellArr[0];
                $Col = [int]$CellArr[1];
            }
            else
            {
                $Row     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $Row.ToString() , '';
                $Col     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $Col += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }  
            }
        } 
                      
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
          
        $insertcountvalue = [int]::Parse($InsertCount);
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {       
            $formatFrom     = [Microsoft.Office.Interop.Excel.XlInsertFormatOrigin]::xlFormatFromLeftOrAbove;
            $xlShiftDown    = [Microsoft.Office.Interop.Excel.XlInsertShiftDirection]::xlShiftDown;
            $xlShiftToRight = [Microsoft.Office.Interop.Excel.XlInsertShiftDirection]::xlShiftToRight;
                
            if($CopyFormat -eq "RightOrBelow")
            { $formatFrom = [Microsoft.Office.Interop.Excel.XlInsertFormatOrigin]::xlFormatFromRightOrBelow; }
            
            $range = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
               
            for($ind = 0; $ind -lt $insertcountvalue; $ind++)
            {
                if($InsertType -eq "Row")
                {   
                    $range.EntireRow.Insert($xlShiftDown, $formatFrom);
                } 
                elseif($InsertType -eq "Column")
                {   
                    $range.EntireColumn.Insert($xlShiftToRight, $formatFrom);
                }
                elseif($InsertType -eq "CellDown")
                {   
                    $range.Insert($xlShiftDown, $formatFrom);
                }
                elseif($InsertType -eq "CellRight")
                {   
                    $range.Insert($xlShiftToRight, $formatFrom);
                }
            }            
        }
        else
        {       
            if($numtemp -gt 0) { $worksheetvalue-- ; } 
            $sheet = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];
            for($ind = 0; $ind -lt $insertcountvalue; $ind++)
            { 
                if($InsertType -eq "Row")
                {
                    $refRow = $Row - 1;
                    if($CopyFormat -eq "RightOrBelow")
                    { $refRow = $Row; }
                    $sheet.InsertRow($Row, 1, $refRow);
                } 
                elseif($InsertType -eq "Column")
                {
                    $refColumn = $Col - 1;
                    if($CopyFormat -eq "RightOrBelow")
                    { $refColumn = $Col; }
                    $sheet.InsertColumn($Col, 1, $refColumn);
                } 
                elseif($InsertType -eq "CellDown")
                {
                    $range = $sheet.Cells[$Row,$Col];
                    $range.Insert([OfficeOpenXml.eShiftTypeInsert]::Down);
                } 
                elseif($InsertType -eq "CellRight")
                {
                    $range = $sheet.Cells[$Row,$Col];
                    $range.Insert([OfficeOpenXml.eShiftTypeInsert]::Right);
                } 
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Cell" Tooltip="Cell name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InsertType" Tooltip="Insert type" CatalogName="Main properties" Type="Enum" Value="Row" EnumVariants="Row;Column;CellDown;CellRight" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsertCount" Tooltip="Insert count" CatalogName="Required" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CopyFormat" Tooltip="Copy format" CatalogName="Main properties" Type="Enum" Value="LeftOrAbove" EnumVariants="LeftOrAbove;RightOrBelow" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Delete Excel Range" InternalName="DeleteExcelRange" FriendlyName="Delete Excel Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="25">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DeleteExcelRange{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                         
    $Worksheet   = {{{Worksheet}}};
    $Row         = {{{Row}}};
    $Col         = {{{Col}}};
    $Cell        = {{{Cell}}}; 
    $DeleteType  = "{{{DeleteType}}}"; 
    $DeleteCount = {{{DeleteCount}}};
    
        if($Cell.Length -gt 0)
        {
            if($Cell.StartsWith("R"))
            {
                $Cell = $Cell.TrimStart("R");
                $CellArr = $Cell.Split("C");
                $Row = [int]$CellArr[0];
                $Col = [int]$CellArr[1];
            }
            else
            {
                $Row     = [int]($Cell -replace "[^0-9]" , '');
                $nameCol = $Cell -replace $Row.ToString() , '';
                $Col     = 0;
                $pow     = 1;
                for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
                {
                    $Col += ($nameCol[$i] - 65 + 1) * $pow;
                    $pow *= 26;
                }  
            }
        } 
                      
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
          
        $deletecountvalue = [int]::Parse($DeleteCount);
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {       
            $xlShiftToLeft    = [Microsoft.Office.Interop.Excel.XlDeleteShiftDirection]::xlShiftToLeft;
            $xlShiftUp = [Microsoft.Office.Interop.Excel.XlDeleteShiftDirection]::xlShiftUp;
                
            $range = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
               
            for($ind = 0; $ind -lt $deletecountvalue; $ind++)
            {
                if($DeleteType -eq "Row")
                {   
                    $range.EntireRow.Delete([System.Reflection.Missing]::Value); 
                    $range = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
                } 
                elseif($DeleteType -eq "Column")
                {   
                    $range.EntireColumn.Delete([System.Reflection.Missing]::Value);
                    $range = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
                }
                elseif($DeleteType -eq "CellUp")
                {   
                    $range.Delete($xlShiftUp); 
                    $range = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
                }
                elseif($DeleteType -eq "CellLeft")
                {   
                    $range.Delete($xlShiftToLeft); 
                    $range = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col);
                }
            }            
        }
        else
        {       
            if($numtemp -gt 0) { $worksheetvalue-- ; } 
            $sheet = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue];
            for($ind = 0; $ind -lt $deletecountvalue; $ind++)
            { 
                if($DeleteType -eq "Row")
                {
                    $sheet.DeleteRow($Row, 1, $true);
                } 
                elseif($DeleteType -eq "Column")
                {
                    $sheet.DeleteColumn($Col, 1);
                } 
                elseif($DeleteType -eq "CellUp")
                {
                    $range = $sheet.Cells[$Row,$Col];
                    $range.Delete([OfficeOpenXml.eShiftTypeDelete]::Up);
                } 
                elseif($DeleteType -eq "CellLeft")
                {
                    $range = $sheet.Cells[$Row,$Col];
                    $range.Delete([OfficeOpenXml.eShiftTypeDelete]::Left);
                } 
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Cell" Tooltip="Cell name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DeleteType" Tooltip="Delete type" CatalogName="Main properties" Type="Enum" Value="Row" EnumVariants="Row;Column;CellUp;CellLeft" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DeleteCount" Tooltip="Delete count" CatalogName="Required" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Count Col Row" InternalName="GetExcelCountColRow" FriendlyName="Get Count Col Row" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="47">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetExcelCountColRow{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
             
    $Worksheet      = {{{Worksheet}}};
    $Row            = {{{Row}}};
    $Col            = {{{Col}}}; 
    $ConsiderEmpty  = ${{{ConsiderEmpty}}};
    $ConsiderHidden = ${{{ConsiderHidden}}};
    
        $numtempWorksheet = 0;
        if([int]::TryParse($Worksheet, [ref] $numtempWorksheet))
        {
            $worksheetvalue = $numtempWorksheet;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }  
            
        $numtemp   = 0;
        $row_index = -1; 
        if([int]::TryParse($Row, [ref] $numtemp))
        {
            $row_index = $numtemp;
        } 
            
        $nameCol   = [string]$Col;
        $col_index = -1; 
        if([int]::TryParse($nameCol, [ref] $numtemp))
        {
            $col_index = $numtemp;
        }
        elseif($nameCol.Length -gt 0)
        {      
            $_tempcol = 0;
            $pow      = 1;
            for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
            {
                $_tempcol += ($nameCol[$i] - 65 + 1) * $pow;
                $pow *= 26;
            } 
            $col_index = $_tempcol;
        }
        
        $rowc    = 0;
        $columnc = 0;
         
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {     
            $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).UsedRange; 
                  
            $max_indexCol = 0;
            $max_indexRow = 0;
            if($ConsiderEmpty -and $ConsiderHidden)
            {
                $max_indexCol = $ranges.Columns.Count;
                $max_indexRow = $ranges.Rows.Count;
            }
            else
            {
                foreach($r in $ranges)
                {
                    $indexCol = $r.Column;
                    $indexRow = $r.Row;

                    if($col_index -gt 0)
                    {
                        if($col_index -ne $indexCol) { continue; }
                    }
                    if($row_index -gt 0)
                    {
                        if($row_index -ne $indexRow) { continue; }
                    }

                    if(-not $ConsiderEmpty)
                    {
                        $text = [string]$r.Text;
                        if([string]::IsNullOrEmpty($text))
                        {
                            continue;
                        }
                    }

                    if(-not $ConsiderHidden)
                    {
                        if($r.EntireColumn.Hidden) { continue; }
                        if($r.EntireRow.Hidden) { continue; }
                    }

                    if($indexCol -gt $max_indexCol)
                    {
                        $max_indexCol = $indexCol;
                    }
                    if($indexRow -gt $max_indexRow)
                    {
                        $max_indexRow = $indexRow;
                    }
                }
            }
       
            $rowc = $max_indexRow;
            $columnc = $max_indexCol;
        }
        else
        {       
            if($numtempWorksheet -gt 0) { $worksheetvalue-- ; } 
            $worksheet = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue];
            
            $rowc = $worksheet.Dimension.End.Row;
            $columnc = $worksheet.Dimension.End.Column;
        }
        
        {{{ColumnCount}}} = $columnc;
        {{{RowCount}}} = $rowc;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ConsiderEmpty" Tooltip="Consider empty" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ConsiderHidden" Tooltip="Consider hidden" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ColumnCount" Tooltip="Return ColumnCount" CatalogName="Output" Type="Variable" Value="$ColumnCount" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RowCount" Tooltip="Return RowCount" CatalogName="Output" Type="Variable" Value="$RowCount" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Run Macro" InternalName="RunExcelMacro" FriendlyName="Run Excel Macro" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="35">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RunExcelMacro{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $MacroName     = {{{MacroName}}}; 
    $MacroArgs     = {{{MacroArgs}}};
    $MacroFileName = {{{MacroFileName}}};
    
        $MacroFileName = ExpandConstFilePath $MacroFileName
              
        $ExcelInstance         = {{{ExcelInstance}}};
        $ExcelWorkbookInstance = {{{ExcelWorkbookInstance}}};
        if($null -eq $ExcelInstance) { $ExcelInstance = $ExcelWorkbookInstance.Application; }
        
        $typename = $ExcelWorkbookInstance.GetType().Name;
            
        $listargs = New-Object Collections.Generic.List[object];
        
        $vartype = $MacroArgs.GetType().Name;
        
        if($vartype.Contains("List") -or $vartype -eq "Object[]" -or $vartype -eq "String[]")
        {        
            foreach($s in $MacroArgs)
            {       
                $listargs.Add($s);
            }
        }
        elseif($vartype -eq "String")
        {      
            if($MacroArgs.Length -gt 0)
            {
                $listargs.Add($MacroArgs);
            }
        }
        else
        {
            $listargs.Add($MacroArgs);
        }
          
        
        if($typename -ne "ExcelWorkbook")
        {              
            $importdata = $null;
            
            if([System.IO.File]::Exists($MacroFileName))
            {
                $importdata = $ExcelInstance.VBE.ActiveVBProject.VBComponents.Import($MacroFileName);
            } 
            
            $expr = '$result = $ExcelInstance.Run($MacroName';
            for($i = 0; $i -lt $listargs.Count; $i++)
            {
                $expr += ',$listargs[' + $i.ToString() + ']';
            }

            $expr += ')';
            
            Invoke-Expression $expr;
            
            {{{MacroResult}}} = $result;
                                          
            if($null -ne $importdata)
            {
                $ExcelInstance.VBE.ActiveVBProject.VBComponents.Remove($importdata);    
            }
        }
        else
        {
            $__Error.Exception("ERRORCONST_DOESNOTIMPLEMENTUSECOM");
            return; 
        }         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelInstance" Tooltip="Excel Instance Variable" CatalogName="Required" Type="Variable" Value="$Excel1" DefaultValue="&quot;&quot;" ValueType="ExcelInstance" />
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="MacroName" Tooltip="Macro name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MacroArgs" Tooltip="Macro args" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number/Text/List" />
                                   <core:Property Name="MacroFileName" Tooltip="Macro file name .bas" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MacroResult" Tooltip="Macro result" CatalogName="Output" Type="Variable" Value="$MacroResult" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Range Color" InternalName="SetExcelRangeColor" FriendlyName="Set Range Color" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="13">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetExcelRangeColor{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Worksheet    = {{{Worksheet}}};
    $Range        = {{{Range}}};
    $ForeColorStr = {{{ForeColor}}};
    $BackColorStr = {{{BackColor}}};  
    $StyleFont    = "{{{StyleFont}}}"; 
    $IsAutoFit    = ${{{IsAutoFit}}};
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
                 
        $useforecolor = $false;  
        $usebackcolor = $false;
        $forecolor    = [System.Drawing.Color]::Black;
        $backcolor    = [System.Drawing.Color]::White;

        if($ForeColorStr.Contains(";"))
        {
            $strarr = $ForeColorStr.Split(';');
            if($strarr.Length -ge 3) 
            { 
                $forecolor = [System.Drawing.Color]::FromArgb([int]$strarr[0], [int]$strarr[1], [int]$strarr[2]); 
                $useforecolor = $true;
            }           
        }
        elseif($ForeColorStr.Contains(","))
        {
            $strarr = $ForeColorStr.Split(',');
            if($strarr.Length -ge 3) 
            { 
                $forecolor = [System.Drawing.Color]::FromArgb([int]$strarr[0], [int]$strarr[1], [int]$strarr[2]); 
                $useforecolor = $true;
            }           
        }
        elseif ($ForeColorStr.Contains("#")) 
        {
            $forecolor    = [System.Drawing.ColorTranslator]::FromHtml($ForeColorStr); 
            $useforecolor = $true;
        }

        if($BackColorStr.Contains(";"))
        {
            $strarr = $BackColorStr.Split(';');
            if($strarr.Length -ge 3) 
            { 
                $backcolor = [System.Drawing.Color]::FromArgb([int]$strarr[0], [int]$strarr[1], [int]$strarr[2]); 
                $usebackcolor = $true;
            }           
        }
        elseif($BackColorStr.Contains(","))
        {
            $strarr = $BackColorStr.Split(',');
            if($strarr.Length -ge 3) 
            { 
                $backcolor = [System.Drawing.Color]::FromArgb([int]$strarr[0], [int]$strarr[1], [int]$strarr[2]); 
                $usebackcolor = $true;
            }           
        }
        elseif ($BackColorStr.Contains("#")) 
        {
            $backcolor    = [System.Drawing.ColorTranslator]::FromHtml($BackColorStr); 
            $usebackcolor = $true;
        }
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {         
            if($Range.Length -eq 0)
            {
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).UsedRange;
            }
            else 
            { 
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Range($Range); 
            }
           
            foreach($r in $ranges)
            {                                
                if($useforecolor)
                {
                    $r.Font.Color = [System.Drawing.ColorTranslator]::ToOle($forecolor);
                }
                if($usebackcolor)
                {
                    $r.Interior.Color = [System.Drawing.ColorTranslator]::ToOle($backcolor);
                } 
                if($StyleFont.Contains("Bold"))
                {
                    $r.Font.Bold = $true;
                }
                if($StyleFont.Contains("Italic"))
                {
                    $r.Font.Italic = $true;
                }
                if($IsAutoFit)
                {
                    $r.EntireColumn.AutoFit();
                }
            } 
            
        }
        else
        {     
            if($numtemp -gt 0) { $worksheetvalue-- ; }   
            if($Range.Length -eq 0)
            {
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells;
            } 
            else 
            { 
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$Range];
            } 
            
            foreach($r in $ranges)
            {
                if($useforecolor)
                {
                    $r.Style.Font.Color.SetColor($forecolor);
                }
                if($usebackcolor)
                {
                    $r.Style.Fill.PatternType = [OfficeOpenXml.Style.ExcelFillStyle]::Solid;
                    $r.Style.Fill.BackgroundColor.SetColor($backcolor);
                }  
                if($StyleFont.Contains("Bold"))
                {
                    $r.Style.Font.Bold = $true;
                }
                if($StyleFont.Contains("Italic"))
                {
                    $r.Style.Font.Italic = $true;
                }
            }  
  
            if($IsAutoFit)
            {
                $ranges.AutoFitColumns();
            }          
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Range" Tooltip="Range value (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ForeColor" Tooltip="Fore color" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BackColor" Tooltip="Back color" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="StyleFont" Tooltip="Style font" CatalogName="Main properties" Type="EnumMulti" Value="" EnumVariants="Bold;Italic" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsAutoFit" Tooltip="AutoFit" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Range Border" InternalName="SetExcelRangeBorder" FriendlyName="Set Range Border" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="28">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetExcelRangeBorder{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Worksheet        = {{{Worksheet}}};
    $Range            = {{{Range}}};
    $EdgeLeft         = ${{{EdgeLeft}}};
    $EdgeTop          = ${{{EdgeTop}}};
    $EdgeRight        = ${{{EdgeRight}}};
    $EdgeBottom       = ${{{EdgeBottom}}};
    $InsideHorizontal = ${{{InsideHorizontal}}};
    $InsideVertical   = ${{{InsideVertical}}};
    $LineStyle        = "{{{LineStyle}}}"; 
    $BorderWeight     = "{{{BorderWeight}}}";
    $BorderColorStr   = {{{BorderColor}}};
    
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
           
        $bordercolor = [System.Drawing.Color]::Black;

        if($BorderColorStr.Contains(";"))
        {
            $strarr = $BorderColorStr.Split(';');
            if($strarr.Length -ge 3) { $bordercolor = [System.Drawing.Color]::FromArgb([int]$strarr[0], [int]$strarr[1], [int]$strarr[2]); }           
        }
        elseif($BorderColorStr.Contains(","))
        {
            $strarr = $BorderColorStr.Split(',');
            if($strarr.Length -ge 3) { $bordercolor = [System.Drawing.Color]::FromArgb([int]$strarr[0], [int]$strarr[1], [int]$strarr[2]); }           
        }
        elseif ($BorderColorStr.Contains("#")) 
        {
            $bordercolor = [System.Drawing.ColorTranslator]::FromHtml($BorderColorStr);
        }

        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {         
            if($Range.Length -eq 0)
            {
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).UsedRange;
            }
            else 
            { 
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).Range($Range); 
            }    
            
            $sellinestylenone = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlLineStyleNone; 
           
            $sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlContinuous;
            if($LineStyle -eq "Dash") {$sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlDash;}
            if($LineStyle -eq "DashDot") {$sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlDashDot;}
            if($LineStyle -eq "DashDotDot") {$sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlDashDotDot;}
            if($LineStyle -eq "Dot") {$sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlDot;}
            if($LineStyle -eq "Double") {$sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlDouble;}
            if($LineStyle -eq "SlantDashDot") {$sellinestyle = [Microsoft.Office.Interop.Excel.XlLineStyle]::xlSlantDashDot;}

            $sellborderweight = [Microsoft.Office.Interop.Excel.XlBorderWeight]::xlThin;
            if($BorderWeight -eq "Thick"){$sellborderweight = [Microsoft.Office.Interop.Excel.XlBorderWeight]::xlThick;}
            if($BorderWeight -eq "Medium"){$sellborderweight = [Microsoft.Office.Interop.Excel.XlBorderWeight]::xlMedium;}
            if($BorderWeight -eq "Hairline"){$sellborderweight = [Microsoft.Office.Interop.Excel.XlBorderWeight]::xlHairline;}

            $ranges.Borders.Color = [System.Drawing.ColorTranslator]::ToOle($bordercolor);
            $ranges.Borders.Weight = $sellborderweight;
            
            if($EdgeLeft) {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeLeft].LineStyle = $sellinestyle;}
            else {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeLeft].LineStyle = $sellinestylenone;}
            
            if($EdgeTop) {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeTop].LineStyle = $sellinestyle;}
            else {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeTop].LineStyle = $sellinestylenone;}
            
            if($EdgeRight) {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeRight].LineStyle = $sellinestyle;}
            else {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeRight].LineStyle = $sellinestylenone;}
            
            if($EdgeBottom) {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeBottom].LineStyle = $sellinestyle;}
            else {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlEdgeBottom].LineStyle = $sellinestylenone;}
            
            if($InsideHorizontal) {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlInsideHorizontal].LineStyle = $sellinestyle;}
            else {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlInsideHorizontal].LineStyle = $sellinestylenone;}
            
            if($InsideVertical) {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlInsideVertical].LineStyle = $sellinestyle;}
            else {$ranges.Borders[[Microsoft.Office.Interop.Excel.XlBordersIndex]::xlInsideVertical].LineStyle = $sellinestylenone;}
        }
        else
        {     
            if($numtemp -gt 0) { $worksheetvalue-- ; }   
            if($Range.Length -eq 0)
            {
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells;
            } 
            else 
            { 
                $ranges = {{{ExcelWorkbookInstance}}}.WorkSheets[$worksheetvalue].Cells[$Range];
            } 
                  
            $sellinestylenone = [OfficeOpenXml.Style.ExcelBorderStyle]::None;
            
            $selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Thin;
            if($LineStyle -eq "Dash") {$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Dashed;}
            if($LineStyle -eq "DashDot") {$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::DashDot;}
            if($LineStyle -eq "DashDotDot") {$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::DashDotDot;}
            if($LineStyle -eq "Dot") {$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Dotted;}
            if($LineStyle -eq "Double") {$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Double;}
            if($LineStyle -eq "SlantDashDot") {$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::DashDot;}

            if($BorderWeight -eq "Thick"){$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Thick;}
            if($BorderWeight -eq "Medium"){$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Medium;}
            if($BorderWeight -eq "Hairline"){$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::Hair;}
                
            if($BorderWeight -eq "Medium" -and $LineStyle -eq "DashDot"){$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::MediumDashDot;}
            if($BorderWeight -eq "Medium" -and $LineStyle -eq "DashDotDot"){$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::MediumDashDotDot;}
            if($BorderWeight -eq "Medium" -and $LineStyle -eq "Dash"){$selborderstyle = [OfficeOpenXml.Style.ExcelBorderStyle]::MediumDashed;}

            if($EdgeLeft) {$ranges.Style.Border.Left.Style = $selborderstyle; $ranges.Style.Border.Left.Color.SetColor($bordercolor);}
            else {$ranges.Style.Border.Left.Style = $sellinestylenone;}
            
            if($EdgeTop) {$ranges.Style.Border.Top.Style = $selborderstyle; $ranges.Style.Border.Top.Color.SetColor($bordercolor);}
            else {$ranges.Style.Border.Top.Style = $sellinestylenone;}
            
            if($EdgeRight) {$ranges.Style.Border.Right.Style = $selborderstyle; $ranges.Style.Border.Right.Color.SetColor($bordercolor);}
            else {$ranges.Style.Border.Right.Style = $sellinestylenone;}
            
            if($EdgeBottom) {$ranges.Style.Border.Bottom.Style = $selborderstyle; $ranges.Style.Border.Bottom.Color.SetColor($bordercolor);}
            else {$ranges.Style.Border.Bottom.Style = $sellinestylenone;}
                        
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Range" Tooltip="Range value (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="EdgeLeft" Tooltip="EdgeLeft" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="EdgeTop" Tooltip="EdgeTop" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="EdgeRight" Tooltip="EdgeRight" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="EdgeBottom" Tooltip="EdgeBottom" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsideHorizontal" Tooltip="InsideHorizontal" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsideVertical" Tooltip="InsideVertical" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="LineStyle" Tooltip="LineStyle" CatalogName="Main properties" Type="Enum" Value="Continuous" EnumVariants="Continuous;Dash;DashDot;DashDotDot;Dot;Double;SlantDashDot" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="BorderWeight" Tooltip="BorderWeight" CatalogName="Main properties" Type="Enum" Value="Thin" EnumVariants="Thin;Thick;Medium;Hairline" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="BorderColor" Tooltip="Fore color" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Cell Color" InternalName="GetExcelCellColor" FriendlyName="Get Excel Cell Color" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\Excel.ico" ImageType="LeftImage" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetExcelCellColor{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
             
    $Worksheet = {{{Worksheet}}};
    $Row       = {{{Row}}};
    $Col       = {{{Col}}}; 
    $Cell      = {{{Cell}}};
    
        if($Cell.Length -gt 0)
        {
            $Row     = [int]($Cell -replace "[^0-9]" , '');
            $nameCol = $Cell -replace $Row.ToString() , '';
            $Col     = 0;
            $pow     = 1;
            for ($i = $nameCol.Length - 1; $i -ge 0; $i--)
            {
                $Col += ($nameCol[$i] - 65 + 1) * $pow;
                $pow *= 26;
            }
        }    
            
        $numtemp = 0;
        if([int]::TryParse($Worksheet, [ref] $numtemp))
        {
            $worksheetvalue = $numtemp;
        }
        else
        {
            $worksheetvalue = $Worksheet;
        }
            
        $forecolor = [System.Drawing.Color]::Black;
        $backcolor = [System.Drawing.Color]::White;
        
        $typename = {{{ExcelWorkbookInstance}}}.GetType().Name;
        if($typename -ne "ExcelWorkbook")
        {         
            $r = {{{ExcelWorkbookInstance}}}.WorkSheets.item($worksheetvalue).cells.item($Row,$Col); 
                                                
            $forecolor = [System.Drawing.ColorTranslator]::FromOle($r.Font.Color);
            $backcolor = [System.Drawing.ColorTranslator]::FromOle($r.Interior.Color); 
            
            {{{ForeColor}}} = "#" + $forecolor.R.ToString("X2") + $forecolor.G.ToString("X2") + $forecolor.B.ToString("X2");
            {{{BackColor}}} = "#" + $backcolor.R.ToString("X2") + $backcolor.G.ToString("X2") + $backcolor.B.ToString("X2");
        }
        else
        {        
            if($numtemp -gt 0) { $worksheetvalue-- ; } 
            $r = {{{ExcelWorkbookInstance}}}.Worksheets[$worksheetvalue].Cells[$Row,$Col]; 
            
            $forecolor = $r.Style.Font.Color.Rgb;
            if([string]::IsNullOrEmpty($forecolor))
            {
                $forecolor = $r.Style.Font.Color.LookupColor($r.Style.Font.Color);
            }

            $backcolor = "#FFFFFF";
            $fill      = $r.Style.Fill;
            if ($fill.PatternType -eq [OfficeOpenXml.Style.ExcelFillStyle]::Solid)
            {
                $backcolor = $fill.BackgroundColor.Rgb;
                if([string]::IsNullOrEmpty($backcolor))
                {
                    $backcolor = $fill.PatternColor.LookupColor($fill.BackgroundColor);
                }
            }
            elseif ($fill.PatternType -ne [OfficeOpenXml.Style.ExcelFillStyle]::None)
            {
                $backcolor = $fill.PatternColor.Rgb;
                if([string]::IsNullOrEmpty($backcolor))
                {
                    $backcolor = $fill.PatternColor.LookupColor($fill.PatternColor);
                }
            }
            
        if ($forecolor.StartsWith("#")) { $forecolor = $forecolor.Replace("#", ""); }
            $forecolor = $forecolor.Trim();
            if ($forecolor.Length -eq 8 -or $forecolor.Length -eq 5) { $forecolor = $forecolor.Substring(2); }
            elseif ($forecolor.Length -gt 8) { $forecolor = $forecolor.Substring($forecolor.Length - 6); }
            $forecolor = "#" + $forecolor;

        if ($backcolor.StartsWith("#")) { $backcolor = $backcolor.Replace("#", ""); }
            $backcolor = $backcolor.Trim();
            if ($backcolor.Length -eq 8 -or $backcolor.Length -eq 5) { $backcolor = $backcolor.Substring(2); }
            elseif ($backcolor.Length -gt 8) { $backcolor = $backcolor.Substring($backcolor.Length - 6); }
            $backcolor = "#" + $backcolor;
            
            
            {{{ForeColor}}} = $forecolor;
            {{{BackColor}}} = $backcolor;
        } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ExcelWorkbookInstance" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="$ExcelWorkbook1" DefaultValue="&quot;&quot;" ValueType="ExcelWorkbookInstance" />
                                   <core:Property Name="Worksheet" Tooltip="ID or name of worksheet" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Cell" Tooltip="Cell name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ForeColor" Tooltip="ForeColor as hex" CatalogName="Output" Type="Variable" Value="$ForeColor" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="BackColor" Tooltip="BackColor as hex" CatalogName="Output" Type="Variable" Value="$BackColor" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Outlook" Name="Outlook Automation" ToolboxGridType="List" AliasDescription="Use Microsoft Outlook: send or receive emails, move emails">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get Outlook Mail Messages" InternalName="GetOutlookMailMessages" FriendlyName="Get Outlook Mail Messages" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="66" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetOutlookMailMessages{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $EmailAddress = {{{EmailAddress}}};  
    $FolderName   = {{{FolderName}}}; 
    $Count        = {{{Count}}};
    $OnlyUnread   = ${{{OnlyUnread}}};
    $SetReaded    = ${{{SetReaded}}};  
    $Filter       = {{{Filter}}};
    
        {{{Result}}} = New-Object System.Collections.Generic.List[object]
        
        $namespace = $null;
        $reconnect = $false;
        while($true)
        {
            if(!$script:__OutlookApplication)
            {
                try { $script:__OutlookApplication = [Runtime.Interopservices.Marshal]::GetActiveObject('Outlook.Application'); }
                catch { $script:__OutlookApplication = New-Object -comobject Outlook.Application; }
            }
            try { $namespace = $script:__OutlookApplication.GetNameSpace("MAPI"); } 
            catch 
            { 
                if($reconnect)
                {
                    $__Error.Exception("Error connect to Outlook");
                    return;
                }
                $script:__OutlookApplication = $null; 
                $reconnect = $true;
                continue; 
            }
            break;
        }
        
        $selFolder = $namespace.Folders.Item($EmailAddress);
        $arrFolder = $FolderName.Split("\");
        foreach($str in $arrFolder)
        {
            $selFolder = $selFolder.Folders.Item($str);
        }
           
        if($OnlyUnread)
        {
            $items = $selFolder.Items.Restrict("[Unread]=true");
        }
        else 
        {
            $items = $selFolder.Items;    
        }

        $items.Sort("[SentOn]", $true);
            
        if(-not [string]::IsNullOrEmpty($Filter))
        {
            $items = $items.Restrict($Filter);
        }
        
        for($i = 1; $i -le $items.Count; $i++)
        {                               
            {{{Result}}}.Add($items[$i]);
            if($i -ge $Count) { break; }
        } 
        
        if($SetReaded)
        {
            foreach($mail in {{{Result}}})
            {
                if($mail.UnRead)
                {
                    $mail.UnRead = $false;
                    $mail.Save();   
                }           
            }
        }
 
        $namespace = $null;        
    }     
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailAddress" Tooltip="Configured Email Address In Outlook" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FolderName" Tooltip="Folder Name in outlook (ex.: Inbox)" CatalogName="Required" Type="Expression" Value="&quot;Inbox&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Count" Tooltip="Count last emails" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="30" ValueType="Number" />
                                   <core:Property Name="Filter" Tooltip="Filter string" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OnlyUnread" Tooltip="Only unread messages" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SetReaded" Tooltip="Set readed mail" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Send Outlook Mail Message" InternalName="SendOutlookMailMessage" FriendlyName="Send Outlook Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="58" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SendOutlookMailMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $MailTo             = {{{MailTo}}};
    $MailSubject        = {{{MailSubject}}};
    $MailBody           = {{{MailText}}}; 
    $Attachments        = {{{Attachments}}};  
    $IsBodyHtml         = ${{{IsBodyHtml}}}; 
    $AccountName        = {{{AccountName}}};
    $MailToCC           = {{{MailToCC}}};
    $MailToBCC          = {{{MailToBCC}}};  
    $SentOnBehalfOfName = {{{SentOnBehalfOfName}}};   
    $SaveDrafts         = ${{{SaveDrafts}}};
        
        $namespace = $null;
        $reconnect = $false;
        while($true)
        {
            if(!$script:__OutlookApplication)
            {
                try { $script:__OutlookApplication = [Runtime.Interopservices.Marshal]::GetActiveObject('Outlook.Application'); }
                catch { $script:__OutlookApplication = New-Object -comobject Outlook.Application; }
            }
            try { $namespace = $script:__OutlookApplication.GetNameSpace("MAPI"); } 
            catch 
            { 
                if($reconnect)
                {
                    $__Error.Exception("Error connect to Outlook");
                    return;
                }
                $script:__OutlookApplication = $null; 
                $reconnect = $true;
                continue; 
            }
            break;
        }   
        $namespace = $null;  
        
        $addrEntry = $null;
        if(-not [string]::IsNullOrEmpty($AccountName))
        {
            $AccountName = $AccountName.ToLower();
            $accounts = $script:__OutlookApplication.Session.Accounts;
            foreach ($accountitem in $accounts)
            {
                try
                {
                    if($accountitem.UserName -eq $AccountName)
                    {
                        $addrEntry = $accountitem.CurrentUser.AddressEntry;
                        break;    
                    }
                    if($accountitem.DisplayName -eq $AccountName)
                    {
                        $addrEntry = $accountitem.CurrentUser.AddressEntry;
                        break;    
                    }
                    if($accountitem.CurrentUser.Name -eq $AccountName)
                    {
                        $addrEntry = $accountitem.CurrentUser.AddressEntry;
                        break;    
                    }
                }
                catch{}
            }
        }
        
        $Mail = $script:__OutlookApplication.CreateItem(0);
        
        try
        {
            if($null -ne $addrEntry)
            {
                $Mail.Sender = $addrEntry;
            }
        }
        catch{}
               
        $MailToArr = $MailTo.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {        
                $temp = $Mail.Recipients.Add($MailToStr.Trim());   
            }
        } 
        
        $MailToArr = $MailToCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $temp      = $Mail.Recipients.Add($MailToStr.Trim()); 
                $temp.Type = [Microsoft.Office.Interop.Outlook.OlMailRecipientType]::olCC;
            }
        }
         
        $MailToArr = $MailToBCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $temp      = $Mail.Recipients.Add($MailToStr.Trim()); 
                $temp.Type = [Microsoft.Office.Interop.Outlook.OlMailRecipientType]::olBCC;
            }
        }
        
        
        $Mail.Subject = $MailSubject;
        
        if($IsBodyHtml)
        {
            $Mail.HTMLBody = $MailBody;
        }
        else    
        {
            $Mail.Body = $MailBody;
        } 
        
        $vartype = $Attachments.GetType().Name;
        if($vartype -eq "String")
        {     
            $file = ExpandConstFilePath $Attachments
            if([System.IO.File]::Exists($file))
            {                               
                $Mail.Attachments.Add($file);
            }
        } 
        elseif($vartype.Contains("List") -or $vartype.Contains("[]"))
        {
            foreach($file in $Attachments)
            {                            
                $file = $file.ToString();  
                $file = ExpandConstFilePath $file
                if([System.IO.File]::Exists($file))
                {          
                    $Mail.Attachments.Add($file);
                }
            } 
        } 
        elseif($vartype -eq "Hashtable")
        {
            foreach($key in $Attachments.Keys)
            {  
                $file = $Attachments[$key]; 
                $file = $file.ToString();  
                $file = ExpandConstFilePath $file
                if([System.IO.File]::Exists($file))
                {          
                    $Mail.Attachments.Add($file);
                }
            }
        }    
             
        if(-not [string]::IsNullOrEmpty($SentOnBehalfOfName))
        {
            $Mail.SentOnBehalfOfName = $SentOnBehalfOfName; 
        }
           
        if($SaveDrafts)
        {
            $Mail.Save();
            $Mail.UnRead = $true;
        }
        else
        {
            $Mail.Send();
        }
        

    }
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="MailTo" Tooltip="Mail To" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailSubject" Tooltip="Mail Subject" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailText" Tooltip="Text email" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IsBodyHtml" Tooltip="Is Body Html" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Attachments" Tooltip="List filenames" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List/Hashtable" />
                                   <core:Property Name="AccountName" Tooltip="Account name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SentOnBehalfOfName" Tooltip="SentOnBehalfOfName" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToBCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SaveDrafts" Tooltip="Save as Drafts" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="ReSend Outlook Mail Message" InternalName="ReSendOutlookMailMessage" FriendlyName="ReSend Outlook Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="30" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReSendOutlookMailMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $MailTo             = {{{MailTo}}};
    $MailSubject        = {{{MailSubject}}}; 
    $MailText           = {{{MailText}}};
    $MailObj            = {{{EmailItem}}}; 
    $MailToCC           = {{{MailToCC}}};
    $MailToBCC          = {{{MailToBCC}}};  
    $SentOnBehalfOfName = {{{SentOnBehalfOfName}}};
        
        $Mail = $null;
        try { $Mail = $MailObj.Forward(); } catch{}
        
        if($null -eq $Mail)
        {
            $__Error.Exception("This email cannot be forwarded");
            return;
        }
        
        $MailToArr = $MailTo.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {        
                $temp = $Mail.Recipients.Add($MailToStr.Trim());   
            }
        } 
        
        $MailToArr = $MailToCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $temp      = $Mail.Recipients.Add($MailToStr.Trim()); 
                $temp.Type = [Microsoft.Office.Interop.Outlook.OlMailRecipientType]::olCC;
            }
        }
         
        $MailToArr = $MailToBCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $temp      = $Mail.Recipients.Add($MailToStr.Trim()); 
                $temp.Type = [Microsoft.Office.Interop.Outlook.OlMailRecipientType]::olBCC;
            }
        }
                
        $Mail.Subject = $MailSubject;
                     
        if(-not [string]::IsNullOrEmpty($SentOnBehalfOfName))
        {
            $Mail.SentOnBehalfOfName = $SentOnBehalfOfName; 
        }
        
        if(-not [string]::IsNullOrEmpty($MailText))
        {                 
            if(-not [string]::IsNullOrEmpty($Mail.HTMLBody))
            {
                $Mail.HTMLBody = $MailText + $Mail.HTMLBody;
            }
            elseif(-not [string]::IsNullOrEmpty($Mail.Body))
            {
                $Mail.Body = $MailText + $Mail.Body;
            } 
            else
            {
                $Mail.HTMLBody = $MailText;
            }
        }
        
        $Mail.Send();

    }
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="MailTo" Tooltip="Mail To" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailSubject" Tooltip="Mail Subject" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailText" Tooltip="Text email" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SentOnBehalfOfName" Tooltip="SentOnBehalfOfName" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToBCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Attachments From Outlook Message" InternalName="SaveAttachmentsFromOutlookMessage" FriendlyName="Save Attachments From Outlook Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="28" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveAttachmentsFromOutlookMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Email    = {{{EmailItem}}};   
    $thispath = {{{AttachmentsPath}}}; 
    $Filter   = {{{Filter}}};
    
        $thispath = ExpandConstFilePath $thispath
        
        $_ = [System.IO.Directory]::CreateDirectory($thispath);
                                     
        $resultlist = New-Object Collections.Generic.List[string];
        
        $AttachmentsPath = $thispath;
            
        if ($Email.Attachments)
        {             
            foreach($item in $Email.Attachments)
            {             
                $filename = $item.FileName;
                $success  = $false;
                if([string]::IsNullOrEmpty($Filter))
                {
                    $success = $true;
                }
                else
                {
                    $success = [Text.RegularExpressions.Regex]::IsMatch($filename, $Filter, [Text.RegularExpressions.RegexOptions]::IgnoreCase);
                }
                if($success)
                {
                    $filesave = [System.IO.Path]::Combine($AttachmentsPath, $filename); 
                    try
                    {   
                        $item.SaveAsFile($filesave);
                    }
                    catch{}
                    if([System.IO.File]::Exists($filesave))
                    {
                        $resultlist.Add($filesave); 
                    }
                }
            }
        } 
        
        {{{Result}}} = $resultlist;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
                  
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="AttachmentsPath" Tooltip="Path to folder for save attachments" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Filter" Tooltip="Filter regex" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="List saved files" CatalogName="Output" Type="Variable" Value="$AttachmentFiles" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Mail From Outlook Message" InternalName="SaveMailFromOutlookMessage" FriendlyName="Save Mail From Outlook Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveMailFromOutlookMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Email     = {{{EmailItem}}};
    $LocalPath = {{{LocalPath}}};    
    
        $LocalPath = ExpandConstFilePath $LocalPath
        
        if (-not (Test-Path $LocalPath)) { New-Item -Path $LocalPath -ItemType Directory }
        $TargetFile = Join-Path $LocalPath (validatePath{{{block_id}}} ($Email.SentOn.ToString() + "-" + $Email.Subject)) 
        $TargetFile += ".msg"
        $SaveType = [Microsoft.Office.Interop.Outlook.OlSaveAsType]::olMSGUnicode 
        $Email.SaveAs($TargetFile, $SaveType)
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
                                
function validatePath{{{block_id}}} { 
 
    param( 
        [Parameter(Mandatory=$true, Position=0)] 
        [String]$Name 
    ) 
 
    return [RegEx]::Replace($Name, "[{0}]" -f ([RegEx]::Escape([String][System.IO.Path]::GetInvalidFileNameChars())), '-') 
} 
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="LocalPath" Tooltip="Path to folder for save email" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Outlook Folders" InternalName="GetOutlookFolders" FriendlyName="Get Outlook Folders" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="24" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetOutlookFolders{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $EmailAddress = {{{EmailAddress}}};  
    
        $namespace = $null;
        $reconnect = $false;
        while($true)
        {
            if(!$script:__OutlookApplication)
            {
                try { $script:__OutlookApplication = [Runtime.Interopservices.Marshal]::GetActiveObject('Outlook.Application'); }
                catch { $script:__OutlookApplication = New-Object -comobject Outlook.Application; }
            }
            try { $namespace = $script:__OutlookApplication.GetNameSpace("MAPI"); } 
            catch 
            { 
                if($reconnect)
                {
                    $__Error.Exception("Error connect to Outlook");
                    return;
                }
                $script:__OutlookApplication = $null; 
                $reconnect = $true;
                continue; 
            }
            break;
        }   
        
        $store     = $namespace.Stores[$EmailAddress];
        $root      = $store.GetRootFolder();
        
        $script:__templist = New-Object Collections.Generic.List[string];
        CollectFilders{{{block_id}}} -root $root -name ""
        {{{OutlookFolders}}} = $script:__templist;
       
    }     
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}

function CollectFilders{{{block_id}}}([object]$root, [string]$name)
{
    foreach($folder in $root.Folders)
    {
        $foldername = $name + "\" + $folder.Name;
        $foldername = $foldername.TrimStart("\");
        $script:__templist.Add($foldername);
        CollectFilders{{{block_id}}} -root $folder -name $foldername
    }
}                                 

]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailAddress" Tooltip="Целевой Email в приложении Outlook" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OutlookFolders" Tooltip="Список папок Outlook" CatalogName="Output" Type="Variable" Value="$OutlookFolders" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Move Outlook Message to Folder" InternalName="MoveOutlookMessage" FriendlyName="Move Outlook Message to Folder" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="24" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MoveOutlookMessage{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $EmailAddress     = {{{EmailAddress}}};
    $EmailMessage     = {{{EmailMessage}}};  
    $TargetFolderName = {{{TargetFolderName}}};
    
        $namespace = $null;
        $reconnect = $false;
        while($true)
        {
            if(!$script:__OutlookApplication)
            {
                try { $script:__OutlookApplication = [Runtime.Interopservices.Marshal]::GetActiveObject('Outlook.Application'); }
                catch { $script:__OutlookApplication = New-Object -comobject Outlook.Application; }
            }
            try { $namespace = $script:__OutlookApplication.GetNameSpace("MAPI"); } 
            catch 
            { 
                if($reconnect)
                {
                    $__Error.Exception("Error connect to Outlook");
                    return;
                }
                $script:__OutlookApplication = $null; 
                $reconnect = $true;
                continue; 
            }
            break;
        }  
                
        $targetFolder = $namespace.Folders.Item($EmailAddress);
        $arrFolder = $TargetFolderName.Split("\");
        foreach($str in $arrFolder)
        {
            $targetFolder = $targetFolder.Folders.Item($str);
        }
        
        $EmailMessage.Move($targetFolder);
        
    }     
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailAddress" Tooltip="Целевой Email в приложении Outlook" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="EmailMessage" Tooltip="Объект письма или писем, полученные через блок GetOutlookMailMessage" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailMessage" />
                                   <core:Property Name="TargetFolderName" Tooltip="Folder Name in outlook (ex.: Inbox)" CatalogName="Required" Type="Expression" Value="&quot;Inbox&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Extract Email From Outlook Message" InternalName="ExtractEmailFromOutlookMessage" FriendlyName="Extract Email From Outlook Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="13" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ExtractEmailFromOutlookMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Email = {{{EmailItem}}};
    
        $resultEmail = "";
        while($true)
        {    
            $PR_SMTP_ADDRESS = "https://schemas.microsoft.com/mapi/proptag/0x39FE001E";
            if ($Email.SenderEmailType -eq "EX")
            {
                $sender = $Email.Sender;
                if ($null -ne $sender)
                {
                    if ($sender.AddressEntryUserType -eq [Microsoft.Office.Interop.Outlook.OlAddressEntryUserType]::olExchangeUserAddressEntry -or $sender.AddressEntryUserType -eq [Microsoft.Office.Interop.Outlook.OlAddressEntryUserType]::olExchangeRemoteUserAddressEntry)
                    {
                        $exchUser = $sender.GetExchangeUser();
                        if ($null -ne $exchUser)
                        {
                            $resultEmail = $exchUser.PrimarySmtpAddress; 
                            break;
                        }
                        else
                        {    
                            $resultEmail = $sender.Address;
                            break;
                        }
                    }
                    else
                    {
                        $resultEmail = [string]$sender.PropertyAccessor.GetProperty($PR_SMTP_ADDRESS);
                        break;
                    }
                }
                else
                {
                    $resultEmail = $sender.Address;
                    break;
                }
            }
            else
            {
                $resultEmail = $Email.SenderEmailAddress; 
                break;
            }
            break;
        }
        
        {{{Result}}} = $resultEmail;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
                                
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="Result" Tooltip="Result email" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Load Msg File" InternalName="LoadMsgFile" FriendlyName="Load Msg File" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Outlook.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LoadMsgFile{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        {AddTypesMsg}
        
        $FileName = {{{FileName}}};          
    
        $FileName = ExpandConstFilePath $FileName
          
        if($null -ne {{{Result}}})
        {
            try 
            { 
                {{{Result}}}.Dispose(); 
                {{{Result}}} = $null;
            }
            catch{}
        }
        
        {{{Result}}} = [MsgHelpers.ClassMain]::LoadFile($FileName);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
                  
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="File name msg" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Mail item" CatalogName="Output" Type="Variable" Value="$MsgItem" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="MsgItem" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="ExchangeAutomation" Name="Exchange Automation" ToolboxGridType="List" AliasDescription="Use Microsoft Exchange: send or receive emails, move emails">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get Exchange Mail Messages" InternalName="GetExchangeMailMessages" FriendlyName="Get Exchange Mail Messages" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Exchange.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="31" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetExchangeMailMessages{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Server        = {{{Server}}}; 
    $Domain        = {{{Domain}}};
    $Username      = {{{Username}}};
    $PasswordObj   = {{{Password}}}; 
    $Version       = "{{{Version}}}";
    $FolderName    = {{{FolderName}}};  
    $SharedMailbox = {{{SharedMailbox}}};
    $Count         = {{{Count}}};
    $OnlyUnread    = ${{{OnlyUnread}}};
    $SetReaded     = ${{{SetReaded}}};
    
        {AddTypesExchange}
    
        $Password = _checkpassword($PasswordObj);
        
        if($null -eq $SharedMailbox) { $SharedMailbox = ""; } 
        if($null -eq $FolderName) { $FolderName = ""; } 
              
        if($SharedMailbox.Length -gt 0)
        {
            if (-not $FolderName.ToLower().StartsWith("shared:"))
            {
                $FolderName = "shared:" + $SharedMailbox + ":::" + $FolderName;
            }
        }
    
        $exchangeMain = [EWShelpers.ClassMain]::new();
        
        $strresult = $exchangeMain.Initialize($Version, $Server, $Domain, $Username, $Password);
        if($strresult.Length -gt 0) { $__Error.Exception($strresult); return; }
        
        $result = $exchangeMain.GetMailMessages($FolderName, $Count, $OnlyUnread, $SetReaded);
        if($null -eq $result) { $__Error.Exception($exchangeMain.LastError); return; }
         
        {{{Result}}} = $result;
    }     
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="Server" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Domain" Tooltip="Domain" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Username" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="Version" Tooltip="Version" CatalogName="Main properties" Type="Enum" Value="Exchange2010_SP1" EnumVariants="Exchange2016;Exchange2015;Exchange2013_SP1;Exchange2013;Exchange2010_SP2;Exchange2010_SP1;Exchange2007_SP1" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FolderName" Tooltip="Folder Name in outlook (ex.: Inbox)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SharedMailbox" Tooltip="SharedMailbox" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Count" Tooltip="Count last emails" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="30" ValueType="Number" />
                                   <core:Property Name="OnlyUnread" Tooltip="Only unread messages" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SetReaded" Tooltip="Set readed mail" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Send Exchange Mail Message" InternalName="SendExchangeMailMessage" FriendlyName="Send Exchange Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Exchange.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="25" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SendExchangeMailMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Server      = {{{Server}}}; 
    $Domain      = {{{Domain}}};
    $Username    = {{{Username}}};
    $PasswordObj = {{{Password}}}; 
    $Version     = "{{{Version}}}";   
    $MailTo      = {{{MailTo}}};
    $MailSubject = {{{MailSubject}}};
    $MailBody    = {{{MailText}}}; 
    $Attachments = {{{Attachments}}};  
    $IsBodyHtml  = ${{{IsBodyHtml}}};  
    $MailToCC    = {{{MailToCC}}};
    $MailToBCC   = {{{MailToBCC}}};
        
        {AddTypesExchange}
    
        $Password = _checkpassword($PasswordObj);
    
        $exchangeMain = [EWShelpers.ClassMain]::new();
        
        $strresult = $exchangeMain.Initialize($Version, $Server, $Domain, $Username, $Password);
        if($strresult.Length -gt 0) { $__Error.Exception($strresult); return; }
        
        $Mail = $exchangeMain.NewMessage($MailTo, $MailSubject, $MailBody, $IsBodyHtml); 
        
        $MailToArr = $MailToCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $Mail.CcRecipients.Add($MailToStr.Trim()); 
            }
        }
         
        $MailToArr = $MailToBCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $Mail.BccRecipients.Add($MailToStr.Trim()); 
            }
        }
        
        $vartype = $Attachments.GetType().Name;
        if($vartype -eq "String")
        {     
            $file = ExpandConstFilePath $Attachments
            if([System.IO.File]::Exists($file))
            {                               
                $Mail.Attachments.AddFileAttachment($file);
            }
        } 
        elseif($vartype.Contains("List") -or $vartype.Contains("[]"))
        {
            foreach($fileitem in $Attachments)
            {                            
                $file = [string]$fileitem;  
                $file = ExpandConstFilePath $file
                if([System.IO.File]::Exists($file))
                {          
                    $Mail.Attachments.AddFileAttachment($file);
                }
            } 
        } 
        elseif($vartype -eq "Hashtable")
        {
            foreach($key in $Attachments.Keys)
            {  
                $file = [string]$Attachments[$key]; 
                $file = ExpandConstFilePath $file
                if([System.IO.File]::Exists($file))
                {          
                    $Mail.Attachments.AddFileAttachment($key, $file);
                }
            }
        }
        
        $Mail.SendAndSaveCopy();

    }
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="Server" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Domain" Tooltip="Domain" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Username" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="Version" Tooltip="Version" CatalogName="Main properties" Type="Enum" Value="Exchange2010_SP1" EnumVariants="Exchange2016;Exchange2015;Exchange2013_SP1;Exchange2013;Exchange2010_SP2;Exchange2010_SP1;Exchange2007_SP1" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="MailTo" Tooltip="Mail To" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailSubject" Tooltip="Mail Subject" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailText" Tooltip="Text email" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IsBodyHtml" Tooltip="Is Body Html" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Attachments" Tooltip="List filenames" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List/Hashtable" />
                                   <core:Property Name="MailToCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToBCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="ReSend Exchange Mail Message" InternalName="ReSendExchangeMailMessage" FriendlyName="ReSend Exchange Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Exchange.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReSendExchangeMailMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $MailTo      = {{{MailTo}}};
    $MailSubject = {{{MailSubject}}};
    $MailBody    = {{{MailText}}}; 
    $MailObj     = {{{EmailItem}}}; 
    $MailToCC    = {{{MailToCC}}};
    $MailToBCC   = {{{MailToBCC}}};
        
        {AddTypesExchange}
            
        $Mail = $exchangeMain.CreateForward($MailObj, $MailTo, $MailSubject, $MailBody); 
        
        $MailToArr = $MailToCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $Mail.CcRecipients.Add($MailToStr.Trim()); 
            }
        }
         
        $MailToArr = $MailToBCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $Mail.BccRecipients.Add($MailToStr.Trim()); 
            }
        }
                     
        $Mail.SendAndSaveCopy();

    }
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="MailTo" Tooltip="Mail To" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailSubject" Tooltip="Mail Subject" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailText" Tooltip="Text email" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToBCC" Tooltip="Mail To" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Attachments From Exchange Message" InternalName="SaveAttachmentsFromExchangeMessage" FriendlyName="Save Attachments From Exchange Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Exchange.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="24" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveAttachmentsFromExchangeMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Email    = {{{EmailItem}}};   
    $thispath = {{{AttachmentsPath}}}; 
    $Filter   = {{{Filter}}};  
    
        {AddTypesExchange}
        
        $thispath = ExpandConstFilePath $thispath
        
        $_ = [System.IO.Directory]::CreateDirectory($thispath);
                       
        if([string]::IsNullOrEmpty($Filter))
        {
            $Email.SaveAttachments($thispath);
        }
        else
        {
            $Email.SaveAttachmentsWithFilter($thispath, $Filter);
        }  
        
        $resultlist = New-Object Collections.Generic.List[string];  
        foreach($val in $Email.AttachmentFiles)
        {
            $resultlist.Add($val); 
        }
        {{{Result}}} = $resultlist;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
                  
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="AttachmentsPath" Tooltip="Path to folder for save attachments" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Filter" Tooltip="Filter regex" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="List saved files" CatalogName="Output" Type="Variable" Value="$AttachmentFiles" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Mail From Exchange Message" InternalName="SaveMailFromExchangeMessage" FriendlyName="Save Mail From Exchange Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Exchange.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveMailFromExchangeMessage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Email     = {{{EmailItem}}};
    $LocalPath = {{{LocalPath}}};    
    
        {AddTypesExchange}
        
        $LocalPath = ExpandConstFilePath $LocalPath
                                                    
        $_ = [System.IO.Directory]::CreateDirectory($LocalPath);
              
        $Email.SaveMessage($LocalPath);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
                                
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailItem" Tooltip="Email object" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailItem" />
                                   <core:Property Name="LocalPath" Tooltip="Path to folder for save email" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Move Exchange Message to Folder" InternalName="MoveExchangeMessage" FriendlyName="Move Exchange Message to Folder" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Exchange.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MoveExchangeMessage{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $EmailMessage     = {{{EmailMessage}}};  
    $TargetFolderName = {{{TargetFolderName}}};
    
        {AddTypesExchange}  
        
        $result = $EmailMessage.MoveToFolder($TargetFolderName);
        if(-not [string]::IsNullOrEmpty($result))
        {
            $__Error.Exception($result);
            return;
        }               
    }     
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="EmailMessage" Tooltip="Объект письма или писем, полученные через блок GetOutlookMailMessage" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="EmailMessage" />
                                   <core:Property Name="TargetFolderName" Tooltip="Folder Name in outlook (ex.: Inbox)" CatalogName="Required" Type="Expression" Value="&quot;Inbox&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="FileSystem" Name="File System" ToolboxGridType="List" AliasDescription="Create, rename, move files in file system using Windows Explorer">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="File Read" InternalName="FileRead" FriendlyName="File Read" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="70">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FileRead{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $FileName    = {{{FileName}}}; 
    $EncodingObj = "{{{Encoding}}}";
          
        $FileName = ExpandConstFilePath $FileName
             
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }
        
        $fileMode   = [System.IO.FileMode]::Open;
        $fileAccess = [System.IO.FileAccess]::Read;
        $fileShare  = [System.IO.FileShare]::Read;    
        $encoding = [System.Text.Encoding]::Default; 
        if($EncodingObj -eq "UTF8")
        {
            $encoding   = [System.Text.Encoding]::UTF8; 
        } 
        elseif($EncodingObj -eq "ASCII")
        {
            $encoding   = [System.Text.Encoding]::ASCII; 
        }
        elseif($EncodingObj -eq "MS-DOS")
        {
            $encoding   = [System.Text.Encoding]::GetEncoding(866); 
        }
        
        $fileStream = New-Object -TypeName System.IO.FileStream $FileName, $fileMode, $fileAccess, $fileShare

        $reader = New-Object System.IO.StreamReader $fileStream, $encoding
                      
        if($null -ne {{{Result}}})
        {
            $vartype = {{{Result}}}.GetType().Name;
            if($vartype.Contains("List"))
            {     
                {{{Result}}}.Clear();
                while($reader.Peek() -ge 0)
                {
                    {{{Result}}}.Add($reader.ReadLine());
                }            
            }
            else
            {
                {{{Result}}} = $reader.ReadToEnd();
            }
        }
        else
        {
            {{{Result}}} = $reader.ReadToEnd();
        }        
       
        $reader.Dispose();
        $fileStream.Dispose();                                                     
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }

    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="ANSI;UTF8;ASCII;MS-DOS" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="File Line Read" InternalName="FileLineRead" FriendlyName="File Line Read" PathStyle="{StaticResource YellowDarkRhombus}" PathStyle_DragThumb="{StaticResource YellowDarkRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="44">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FileLineRead{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $FileName    = {{{FileName}}}; 
    $IgnoreEmpty = ${{{IgnoreEmpty}}}; 
    $EncodingObj = "{{{Encoding}}}";
          
        
        if($script:__FuncIndex -gt $script:__LastFuncIndex) 
        {     
            if($null -ne $script:__reader{{{block_id}}})
            {
                $script:__reader{{{block_id}}}.Dispose();
                $script:__fileStream{{{block_id}}}.Dispose(); 
                $script:__reader{{{block_id}}} = $null;
                $script:__fileStream{{{block_id}}} = $null;
                $script:__lineIndex{{{block_id}}} = -1;
            }          
            
            $FileName = ExpandConstFilePath $FileName
             
            if(-not [System.IO.File]::Exists($FileName))
            {
                $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
                return;
            }
            
            $fileMode   = [System.IO.FileMode]::Open;
            $fileAccess = [System.IO.FileAccess]::Read;
            $fileShare  = [System.IO.FileShare]::Read;    
            $encoding = [System.Text.Encoding]::Default; 
            if($EncodingObj -eq "UTF8")
            {
                $encoding   = [System.Text.Encoding]::UTF8; 
            } 
            elseif($EncodingObj -eq "ASCII")
            {
                $encoding   = [System.Text.Encoding]::ASCII; 
            }
            elseif($EncodingObj -eq "MS-DOS")
            {
                $encoding   = [System.Text.Encoding]::GetEncoding(866); 
            }
            
            $script:__fileStream{{{block_id}}} = New-Object -TypeName System.IO.FileStream $FileName, $fileMode, $fileAccess, $fileShare

            $script:__reader{{{block_id}}} = New-Object System.IO.StreamReader $script:__fileStream{{{block_id}}}, $encoding
            
            $script:__lineIndex{{{block_id}}} = -1;
        }
        
        if($null -eq $script:__reader{{{block_id}}})
        {
            $__Error.Exception("Internal block error.");
            return;
        }
        
        $isread = $false;
        while($script:__reader{{{block_id}}}.Peek() -ge 0)
        {
            $str = $script:__reader{{{block_id}}}.ReadLine(); 
            if($IgnoreEmpty)
            {
                $str = $str.Trim();
                if($str.Length -eq 0) { continue; }
            }            
            $script:__lineIndex{{{block_id}}} = $script:__lineIndex{{{block_id}}} + 1;
            {{{Item}}} = $str; 
            {{{LineIndex}}} = $script:__lineIndex{{{block_id}}};
            $isread = $true;   
            break;
        }  
        
        if($isread)
        {
            $__Error.Jump("{{{connector-Item}}}");
            return;
        }
        
        $script:__reader{{{block_id}}}.Dispose();
        $script:__fileStream{{{block_id}}}.Dispose(); 
        $script:__reader{{{block_id}}} = $null;
        $script:__fileStream{{{block_id}}} = $null; 
        $script:__lineIndex{{{block_id}}} = -1;        
                                                          
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }

    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="ANSI;UTF8;ASCII;MS-DOS" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IgnoreEmpty" Tooltip="Ignore empty" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Item" Tooltip="" CatalogName="Output" Type="Variable" Value="$Item" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LineIndex" Tooltip="LineIndex" CatalogName="Output" Type="Variable" Value="$LineIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Item" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Строка" Color="#008000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="File Write" InternalName="FileWrite" FriendlyName="File Write" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="29">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FileWrite{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
          
    $FileName = {{{FileName}}}; 
    $Value    = {{{Value}}}; 
    $EncodingObj = "{{{Encoding}}}";
    
        $Value = VarToString($Value);   
        
        $FileName = ExpandConstFilePath $FileName
        
        $fileMode   = [System.IO.FileMode]::Create;
        $fileAccess = [System.IO.FileAccess]::ReadWrite;
        $fileShare  = [System.IO.FileShare]::Read;    
        $encoding = [System.Text.Encoding]::Default; 
        if($EncodingObj -eq "UTF8")
        {
            $encoding   = [System.Text.Encoding]::UTF8; 
        } 
        elseif($EncodingObj -eq "ASCII")
        {
            $encoding   = [System.Text.Encoding]::ASCII; 
        }
        elseif($EncodingObj -eq "MS-DOS")
        {
            $encoding   = [System.Text.Encoding]::GetEncoding(866); 
        }
        
        $fileStream = New-Object -TypeName System.IO.FileStream $FileName, $fileMode, $fileAccess, $fileShare

        $writer = New-Object System.IO.StreamWriter $fileStream, $encoding

        $writer.Write($Value);

        $writer.Dispose();
        $fileStream.Dispose(); 
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="ANSI;UTF8;ASCII;MS-DOS" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Value" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="File Append" InternalName="FileAppend" FriendlyName="File Append" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="38">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FileAppend{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName = {{{FileName}}}; 
    $Value    = {{{Value}}}; 
    $EncodingObj = "{{{Encoding}}}";
    
        $Value = VarToString($Value);
        
        $FileName = ExpandConstFilePath $FileName
        
        $fileMode   = [System.IO.FileMode]::Append;
        $fileAccess = [System.IO.FileAccess]::Write;
        $fileShare  = [System.IO.FileShare]::Read;    
        $encoding = [System.Text.Encoding]::Default; 
        if($EncodingObj -eq "UTF8")
        {
            $encoding   = [System.Text.Encoding]::UTF8; 
        } 
        elseif($EncodingObj -eq "ASCII")
        {
            $encoding   = [System.Text.Encoding]::ASCII; 
        }
        elseif($EncodingObj -eq "MS-DOS")
        {
            $encoding   = [System.Text.Encoding]::GetEncoding(866); 
        }
        
        $fileStream = New-Object -TypeName System.IO.FileStream $FileName, $fileMode, $fileAccess, $fileShare

        $writer = New-Object System.IO.StreamWriter $fileStream, $encoding
                            
        if(${{{AsLine}}}) {$writer.Write([Environment]::NewLine);}
        
        $writer.Write($Value);

        $writer.Dispose();
        $fileStream.Dispose();   
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="ANSI;UTF8;ASCII;MS-DOS" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Value" Tooltip="" CatalogName="Required" Type="Expression" Value="$Value" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="AsLine" Tooltip="Write value to line" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get File Length" InternalName="GetFileLength" FriendlyName="Get File Length" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetFileLength{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $FileName = {{{FileName}}};
          
        $FileName = ExpandConstFilePath $FileName
             
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }
        
        $fileinfo = [System.IO.FileInfo]::new($FileName);
        {{{Result}}} = $fileinfo.Length;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }

    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Items" InternalName="GetItems" FriendlyName="Get Items" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="69">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetItems{{{block_id}}}
{         
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");    
    
    $thispath     = {{{Path}}};   
    $IsRecursive  = ${{{IsRecursive}}};  
    $TypeItem     = "{{{TypeItem}}}"; 
    $Filter       = {{{Filter}}};
    $SortType     = "{{{SortType}}}";  
    $ReverseItems = ${{{ReverseItems}}};
    
        if($thispath -eq "") { $thispath = Get-Location; }
        
        $thispath = ExpandConstFilePath $thispath
              
        if(-not [System.IO.Directory]::Exists($thispath))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $thispath");
            return;
        }
        
        $listresultobject = New-Object System.Collections.Generic.List[object];
        $listresult = New-Object System.Collections.Generic.List[string];
              
        if($null -eq $Filter) { $Filter = ""; }
        
        $enumtype = [System.IO.SearchOption]::TopDirectoryOnly;
        if($IsRecursive) { $enumtype = [System.IO.SearchOption]::AllDirectories; }
                        
        $thisdirinfo = [System.IO.DirectoryInfo]::new($thispath);
        
        if($TypeItem -eq "Directory")
        {          
            if($Filter -eq ""){$Filter = "*";}
            $filterArr = $Filter.Split(';', [System.StringSplitOptions]::RemoveEmptyEntries);
            foreach($filt in $filterArr)
            {
                $listresultobject.AddRange($thisdirinfo.GetDirectories($filt.Trim(), $enumtype));
            }            
        }
        elseif($TypeItem -eq "File")
        {   
            if($Filter -eq ""){$Filter = "*.*";} 
            $filterArr = $Filter.Split(';', [System.StringSplitOptions]::RemoveEmptyEntries);
            foreach($filt in $filterArr)
            {
                $listresultobject.AddRange($thisdirinfo.GetFiles($filt.Trim(), $enumtype));
            }             
        } 
        
        if($SortType -ne "None")
        {
            for($ind = 0; $ind -lt $listresultobject.Count; $ind++)
            {
                if($ind + 1 -ge $listresultobject.Count) { break; }
                $item1 = $listresultobject[$ind]; 
                $item2 = $listresultobject[$ind + 1]; 
                if($SortType -eq "Name")
                {
                    if($item1.Name.CompareTo($item2.Name) -gt 0)
                    {
                        $listresultobject.Reverse($ind, 2);
                        $ind = -1;
                        continue;
                    }
                }
                elseif($SortType -eq "CreationTime")
                {
                    if($item1.CreationTime.Ticks -gt $item2.CreationTime.Ticks)
                    {
                        $listresultobject.Reverse($ind, 2);
                        $ind = -1;
                        continue;
                    }
                }
                elseif($SortType -eq "LastAccessTime")
                {
                    if($item1.LastAccessTime.Ticks -gt $item2.LastAccessTime.Ticks)
                    {
                        $listresultobject.Reverse($ind, 2);
                        $ind = -1;
                        continue;
                    }
                }
                elseif($SortType -eq "LastWriteTime")
                {
                    if($item1.LastWriteTime.Ticks -gt $item2.LastWriteTime.Ticks)
                    {
                        $listresultobject.Reverse($ind, 2);
                        $ind = -1;
                        continue;
                    }
                }   
            }
       }
            
            
       foreach($itemobj in $listresultobject)
       {
            $listresult.Add($itemobj.FullName);
       }  
        
       if($ReverseItems)
       {
           $listresult.Reverse();
       }
       
       {{{Items}}} = $listresult; 
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IsRecursive" Tooltip="Use subdirectory" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TypeItem" Tooltip="Type items" CatalogName="Main properties" Type="Enum" Value="File" EnumVariants="File;Directory" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Filter" Tooltip="Filter for get items" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SortType" Tooltip="Sort type" CatalogName="Main properties" Type="Enum" Value="None" EnumVariants="None;Name;CreationTime;LastAccessTime;LastWriteTime" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReverseItems" Tooltip="Reverse items" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Items" Tooltip="Return list fullpath items" CatalogName="Output" Type="Variable" Value="$Items" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create File Path" InternalName="GetPathFileName" FriendlyName="Create File Path" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="89">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetPathFileName{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");    
    
    $thispath           = {{{Path}}}; 
    $filename           = {{{FileName}}}; 
    $generatename       = ${{{GenerateName}}}; 
    $AutoIndex          = ${{{AutoIndex}}}; 
    $FilterInvalidChars = ${{{FilterInvalidChars}}};
    
        $thispath = ExpandConstFilePath $thispath  
                 
        if([string]::IsNullOrEmpty($thispath))
        {
            $thispath = [Environment]::CurrentDirectory;
        }
        
        if($generatename)
        {
            if($filename.Length -eq 0)
            {                                 
                $filename   = [System.IO.Path]::GetRandomFileName();
            } 
        }
              
        if($FilterInvalidChars)
        {
            $invalidFileChars = [System.IO.Path]::GetInvalidFileNameChars();              
            foreach($c in $invalidFileChars) 
            { 
                $filename = $filename.Replace($c, '_');
            }  
        }
          
        $resultfile = $thispath;
        
        if(-not [string]::IsNullOrEmpty($filename))
        {
        
            $resultfile = [System.IO.Path]::GetFullPath([System.IO.Path]::Combine($thispath, $filename));
            
            if($AutoIndex)
            {    
                if([System.IO.File]::Exists($resultfile))
                {         
                    $index      = 1;
                    $resultpath = [System.IO.Path]::GetDirectoryName($resultfile);
                    $resultname = [System.IO.Path]::GetFileNameWithoutExtension($resultfile);
                    $resultext  = [System.IO.Path]::GetExtension($resultfile);
                    
                    $resultfile = [System.IO.Path]::Combine($resultpath, $resultname + "_" + $index + $resultext);
                    while([System.IO.File]::Exists($resultfile))
                    {
                        $index++;
                        $resultfile = [System.IO.Path]::Combine($resultpath, $resultname + "_" + $index + $resultext);
                    }
                }
            }   
        }
        
        
        {{{Result}}} = $resultfile;
    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path. Can be used file constants" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="File name or empty for random generate" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Name" />
                                   <core:Property Name="GenerateName" Tooltip="Generate filename" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="AutoIndex" Tooltip="Auto index" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FilterInvalidChars" Tooltip="Filter invalid chars" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Return full path for filename" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="New Text File" InternalName="NewTextFile" FriendlyName="New Text File" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="74">
                         <core:ToolboxItemSettings.Code><![CDATA[
function NewTextFile{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $thispath = {{{Path}}}; 
    $filename = {{{FileName}}}; 
    $EncodingObj = "{{{Encoding}}}";
    
        $thispath = ExpandConstFilePath $thispath
        
        if($filename.Length -eq 0)
        {
            $filename = [System.IO.Path]::GetRandomFileName(); 
            $filename = [System.IO.Path]::ChangeExtension($filename, ".txt");
        }
        
        {{{Result}}} = [System.IO.Path]::GetFullPath([System.IO.Path]::Combine($thispath, $filename));
        
        try { [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName({{{Result}}})); } 
        catch { }
           
        $encoding = [System.Text.Encoding]::Default; 
        if($EncodingObj -eq "UTF8")
        {
            $encoding   = [System.Text.Encoding]::UTF8; 
        } 
        elseif($EncodingObj -eq "ASCII")
        {
            $encoding   = [System.Text.Encoding]::ASCII; 
        }
        elseif($EncodingObj -eq "MS-DOS")
        {
            $encoding   = [System.Text.Encoding]::GetEncoding(866); 
        }
        
        [System.IO.File]::WriteAllText({{{Result}}}, "", $encoding);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path. Can be used file constants" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="File name or empty for random generate" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="UTF8" EnumVariants="ANSI;UTF8;ASCII;MS-DOS" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return created fullpath new file" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="New Folder" InternalName="NewFolder" FriendlyName="New Folder" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function NewFolder{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $thispath = {{{FolderName}}}; 
    
        $thispath = ExpandConstFilePath $thispath
        
        [System.IO.Directory]::CreateDirectory($thispath); 
               
        $thispath = $thispath.TrimEnd([System.IO.Path]::DirectorySeparatorChar);
        
        {{{Result}}} = $thispath;
    }
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FolderName" Tooltip="Name folder. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return created fullpath new folder" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Copy File/Folder" InternalName="CopyItem" FriendlyName="Copy File/Folder" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="307">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CopyItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $SourcePath      = {{{SourcePath}}};
    $DestinationPath = {{{DestinationPath}}};
    $Overwrite       = ${{{Overwrite}}}; 
    $TypeItem    = "{{{TypeItem}}}";
    
        $SourcePath = ExpandConstFilePath $SourcePath
        $DestinationPath = ExpandConstFilePath $DestinationPath
        
        if($TypeItem -eq "File" -or ($TypeItem -eq "Auto" -and [System.IO.File]::Exists($SourcePath)))
        {
            if([System.IO.Path]::GetExtension($DestinationPath).Length -eq 0)
            {
                $DestinationPath = [System.IO.Path]::Combine($DestinationPath, [System.IO.Path]::GetFileName($SourcePath));
            }    
            if($Overwrite)
            {
                try
                {
                    [System.IO.File]::Delete($DestinationPath); 
                }
                catch {}
            }       
            
            [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($DestinationPath));
            
            try { [System.IO.File]::Copy($SourcePath, $DestinationPath); }
            catch {}
        }
        elseif($TypeItem -eq "Directory" -or ($TypeItem -eq "Auto" -and [System.IO.Directory]::Exists($SourcePath)))
        {
            foreach($dirPath in [System.IO.Directory]::GetDirectories($SourcePath, "*", [System.IO.SearchOption]::AllDirectories))
            {
                [System.IO.Directory]::CreateDirectory($dirPath.Replace($SourcePath, $DestinationPath));   
            } 
            
            foreach($newPath in [System.IO.Directory]::GetFiles($SourcePath, "*.*", [System.IO.SearchOption]::AllDirectories))
            {       
                $targetpath = $newPath.Replace($SourcePath, $DestinationPath);
                if($Overwrite)
                {             
                    try 
                    {
                        [System.IO.File]::Delete($targetpath); 
                    }
                    catch {}
                }
                [System.IO.File]::Copy($newPath, $targetpath);   
            }
        }
        else
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $SourcePath");
            return;
        }
         
    }       
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}    ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SourcePath" Tooltip="Source path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DestinationPath" Tooltip="Destination Path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Overwrite" Tooltip="Overwrite exists file" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TypeItem" Tooltip="Type items" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;File;Directory" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Move File/Folder" InternalName="MoveItem" FriendlyName="Move File/Folder" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="98">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MoveItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $SourcePath      = {{{SourcePath}}};
    $DestinationPath = {{{DestinationPath}}};
    $Overwrite       = ${{{Overwrite}}};
    $TypeItem    = "{{{TypeItem}}}";
    
        $SourcePath = ExpandConstFilePath $SourcePath
        $DestinationPath = ExpandConstFilePath $DestinationPath
        
        if($TypeItem -eq "File" -or ($TypeItem -eq "Auto" -and [System.IO.File]::Exists($SourcePath)))
        {
            if([System.IO.Path]::GetExtension($DestinationPath).Length -eq 0)
            {                         
                [System.IO.Directory]::CreateDirectory($DestinationPath);
                $DestinationPath = [System.IO.Path]::Combine($DestinationPath, [System.IO.Path]::GetFileName($SourcePath));
            }     
            if($Overwrite)
            {             
                try
                {
                    [System.IO.File]::Delete($DestinationPath); 
                }
                catch{}
            }           
            [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($DestinationPath));
            
            try { [System.IO.File]::Move($SourcePath, $DestinationPath); }
            catch {}
        }
        elseif($TypeItem -eq "Directory" -or ($TypeItem -eq "Auto" -and [System.IO.Directory]::Exists($SourcePath)))
        {           
            $source = $SourcePath;
            $target = $DestinationPath;
               
            $source = $source.TrimEnd("\");
            $target = $target.TrimEnd("\");
            $target = [System.IO.Path]::Combine($target, $source.Split("\")[-1]);
    
            if($source -eq $target)
            {
                $__Error.Exception("The parameters point to the same file or directory.");
                return;
            }    
           
            class Folders {
                [string]$Source;
                [string]$Target;
                Folders(
                [string]$s,
                [string]$t
            ){
                $this.Source = $s
                $this.Target = $t
            }
            }

            $stack = New-Object 'System.Collections.Generic.Stack[Folders]';
            $stack.Push([Folders]::new($source, $target));

            while ($stack.Count -gt 0)
            {
                $folders = $stack.Pop();
                [System.IO.Directory]::CreateDirectory($folders.Target);
                foreach ($file in [System.IO.Directory]::GetFiles($folders.Source, "*.*"))
                {
                     $targetFile = [System.IO.Path]::Combine($folders.Target, [System.IO.Path]::GetFileName($file));  
                     if($Overwrite)
                     {
                         if ([System.IO.File]::Exists($targetFile)) {[System.IO.File]::Delete($targetFile);}
                     } 
                     try { [System.IO.File]::Move($file, $targetFile); } 
                     catch {}
                }

                foreach ($folder in [System.IO.Directory]::GetDirectories($folders.Source))
                {
                    $stack.Push([Folders]::new($folder, [System.IO.Path]::Combine($folders.Target, [System.IO.Path]::GetFileName($folder))));
                }
            }
            [System.IO.Directory]::Delete($source, $true);
        } 
        else
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $SourcePath");
            return;
        }
    }       
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit(); 
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SourcePath" Tooltip="Source path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DestinationPath" Tooltip="Destination Path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Overwrite" Tooltip="Overwrite exists file" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TypeItem" Tooltip="Type items" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;File;Directory" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove File/Folder" InternalName="RemoveItem" FriendlyName="Remove File/Folder" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="81">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $thispath = {{{Path}}}; 
    $TypeItem    = "{{{TypeItem}}}";
    
        $thispath = ExpandConstFilePath $thispath
        
        if($TypeItem -eq "File" -or ($TypeItem -eq "Auto" -and [System.IO.File]::Exists($thispath)))
        {
            [System.IO.File]::Delete($thispath);   
        }
        elseif($TypeItem -eq "Directory" -or ($TypeItem -eq "Auto" -and [System.IO.Directory]::Exists($thispath)))
        {                         
            $files = [System.IO.Directory]::GetFiles($thispath);
            foreach($file in $files)
            {
                try
                {
                    [System.IO.File]::Delete($file);
                }
                catch{}
            }
            [System.IO.Directory]::Delete($thispath, $true);
        } 
    }     
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeItem" Tooltip="Type items" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;File;Directory" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Clear Folder" InternalName="ClearFolder" FriendlyName="Clear Folder" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClearFolder{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $thispath    = {{{FolderPath}}};  
    
        $thispath = ExpandConstFilePath $thispath
                        
        if(-not [System.IO.Directory]::Exists($thispath))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $thispath");
            return;
        }
            
        $thisdirinfo = [System.IO.DirectoryInfo]::new($thispath);
                         
        $enumtype = [System.IO.SearchOption]::TopDirectoryOnly;
        
        $fileArr = $thisdirinfo.GetFiles("*.*", $enumtype);
        for($ind = 0; $ind -lt $fileArr.Length; $ind++)
        {         
            try { $fileArr[$ind].Delete(); }
            catch {}
        }
        
        $dirArr = $thisdirinfo.GetDirectories("*", $enumtype);
        for($ind = 0; $ind -lt $dirArr.Length; $ind++)
        {     
            try { $dirArr[$ind].Delete($true); }
            catch {}
        }
            
    }
    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FolderPath" Tooltip="Path" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Does File/Folder Exist" InternalName="DoesItemExist" FriendlyName="Does File/Folder Exist" PathStyle="{StaticResource YellowDarkRhombus}" PathStyle_DragThumb="{StaticResource YellowDarkRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="51">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DoesItemExist{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $thispath = {{{Path}}}; 
    $TypeItem    = "{{{TypeItem}}}";
    
        $thispath   = ExpandConstFilePath $thispath
        $thisresult = $false;   
            
        if(-not $thisresult)
        {
            if($TypeItem -eq "File" -or $TypeItem -eq "Auto")
            {
                $thisresult = [System.IO.File]::Exists($thispath);   
            }  
        }
        
        if(-not $thisresult)
        {
            if($TypeItem -eq "Directory" -or $TypeItem -eq "Auto")
            {
                $thisresult = [System.IO.Directory]::Exists($thispath);  
            } 
        }
        
        if($thisresult)
        {       
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {     
            $__Error.Jump("{{{connector-No}}}");
            return;
        }        
    } 
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeItem" Tooltip="Type items" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;File;Directory" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rename File" InternalName="RenameItem" FriendlyName="Rename File" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="110">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RenameItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $SourcePath    = {{{Path}}};   
    $NewName       = {{{NewName}}};  
    $NewExtension  = {{{NewExtension}}}; 
    $AddNamePrefix = {{{AddNamePrefix}}};  
    $TypeItem      = "{{{TypeItem}}}"; 
    $OnlyString    = ${{{OnlyString}}};
        
        $SourcePath = ExpandConstFilePath $SourcePath
                      
        $SourcePath    = $SourcePath.TrimEnd("\");
        $lastdir       = [System.IO.Path]::GetDirectoryName($SourcePath);
        $lastfilename  = [System.IO.Path]::GetFileNameWithoutExtension($SourcePath);
        $lastextension = [System.IO.Path]::GetExtension($SourcePath);

        if($NewName -ne "") { $lastfilename = $NewName; }
        if($NewExtension -ne "") { $lastextension = $NewExtension; }
        if($AddNamePrefix -ne "") { $lastfilename += $AddNamePrefix; }

        if(-not $OnlyString)
        {
            if($TypeItem -eq "File" -or ($TypeItem -eq "Auto" -and [System.IO.File]::Exists($SourcePath)))
            {        
               $DestinationPath = [System.IO.Path]::Combine($lastdir, $lastfilename + $lastextension) 
                [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($DestinationPath)); 
                if($SourcePath.ToLower() -ne $DestinationPath.ToLower()) 
                {
                    [System.IO.File]::Delete($DestinationPath);
                    [System.IO.File]::Move($SourcePath, $DestinationPath);  
                }
            }
            elseif($TypeItem -eq "Directory" -or ($TypeItem -eq "Auto" -and [System.IO.Directory]::Exists($SourcePath)))
            {
                $DestinationPath = [System.IO.Path]::Combine($lastdir, $lastfilename)
                [System.IO.Directory]::Move($SourcePath, $DestinationPath);
            } 
            else
            {
                $__Error.Exception("ERRORCONST_PATHNOTFOUND: $SourcePath");
                return;
            }
        }   
        
        {{{Result}}} = $DestinationPath;
    } 
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
               ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewName" Tooltip="New name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewExtension" Tooltip="New file extension" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AddNamePrefix" Tooltip="Add prefix to name (eq.:&quot;_1&quot;)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeItem" Tooltip="Type items" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;File;Directory" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OnlyString" Tooltip="Rename only filename without physical file" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Expand Path" InternalName="ExpandPath" FriendlyName="Expand Path" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ExpandPath{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $thispath      = {{{Path}}};   
        
        $thispath = ExpandConstFilePath $thispath
        
        {{{DirectoryName}}} = [System.IO.Path]::GetDirectoryName($thispath); 
        {{{FileName}}} = [System.IO.Path]::GetFileNameWithoutExtension($thispath);
        {{{FileExtension}}} = [System.IO.Path]::GetExtension($thispath).ToLower();
    } 
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
               ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DirectoryName" Tooltip="Directory name" CatalogName="Output" Type="Variable" Value="$DirectoryName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="Name file" CatalogName="Output" Type="Variable" Value="$FileName" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileExtension" Tooltip="Extension file" CatalogName="Output" Type="Variable" Value="$FileExtension" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Combine Path" InternalName="CombinePath" FriendlyName="Combine Path" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CombinePath{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $thispath      = {{{Path}}};   
    $SubPath1      = {{{SubPath1}}};
    $SubPath2      = {{{SubPath2}}};
    $SubPath3      = {{{SubPath3}}};
    $FileName      = {{{FileName}}};
    $FileExtension = {{{FileExtension}}};
    
        $thispath = ExpandConstFilePath $thispath  
             
        $invalidFileChars = [System.IO.Path]::GetInvalidFileNameChars();
        
        $result        = $thispath;
        $SubPath1      = $SubPath1.ToString();
        $SubPath2      = $SubPath2.ToString();
        $SubPath3      = $SubPath3.ToString();
        $FileName      = $FileName.ToString();
        $FileExtension = $FileExtension.ToString(); 
        
        foreach($c in $invalidFileChars) 
        { 
            $SubPath1 = $SubPath1.Replace($c, '_');
            $SubPath2 = $SubPath2.Replace($c, '_'); 
            $SubPath3 = $SubPath3.Replace($c, '_');
            $FileName = $FileName.Replace($c, '_');
        }
        
        if($SubPath1 -ne "") { $result = [System.IO.Path]::Combine($result, $SubPath1); }
        if($SubPath2 -ne "") { $result = [System.IO.Path]::Combine($result, $SubPath2); }
        if($SubPath3 -ne "") { $result = [System.IO.Path]::Combine($result, $SubPath3); }
        if($FileName -ne "") { $result = [System.IO.Path]::Combine($result, $FileName); }
        if($FileExtension -ne "" -and $FileName -ne "") { $result = $result + $FileExtension; }

        {{{CombinedPath}}} = $result;
    } 
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
               ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path. Can be used file constants" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SubPath1" Tooltip="SubPath 1" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SubPath2" Tooltip="SubPath 2" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SubPath3" Tooltip="SubPath 3" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="Name file" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileExtension" Tooltip="Extension file" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CombinedPath" Tooltip="CombinedPath" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait file" InternalName="WaitFile" FriendlyName="Wait file" PathStyle="{StaticResource YellowDarkRectangle}" PathStyle_DragThumb="{StaticResource YellowDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function WaitFile{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
          
    $DirectoryPath = {{{DirectoryPath}}}; 
    $FileName      = {{{FileName}}}; 
    $WaitTimeStr   = {{{WaitTime}}};
    
        $DirectoryPath = ExpandConstFilePath $DirectoryPath
        
        $_waittime = _toint($WaitTimeStr); 
        
        $stopwatch = [System.Diagnostics.Stopwatch]::StartNew();
        
        $list = [System.IO.Directory]::GetFiles($DirectoryPath, $FileName); 
        while($list.Length -eq 0) 
        {
            Start-Sleep -Seconds 1;
            if($stopwatch.Elapsed.TotalSeconds -ge $_waittime) 
            {     
                $stopwatch.Stop();
                $__Error.Exception("File Timeout Waiting error");
                return;
            } 
            $list = [System.IO.Directory]::GetFiles($DirectoryPath, $FileName);
        }
        
        {{{Result}}} = $list[0];
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="DirectoryPath" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="" CatalogName="Required" Type="Expression" Value="&quot;*.*&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WaitTime" Tooltip="Wait time sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result file" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Clipboard" Name="Clipboard" ToolboxGridType="List" AliasDescription="Copy text to Clipboard or paste text from clipboard">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get Clipboard" InternalName="GetClipboard" FriendlyName="Get Clipboard" PathStyle="{StaticResource GreenDarkRectangle}" PathStyle_DragThumb="{StaticResource GreenDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Clipboard.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="31">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetClipboard{{{block_id}}}
{            
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        {{{Result}}} = [System.Windows.Forms.Clipboard]::GetText([System.Windows.Forms.TextDataFormat]::UnicodeText);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }   
    $__Error.Quit();
} 

]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Clipboard" InternalName="SetClipboard" FriendlyName="Set Clipboard" PathStyle="{StaticResource GreenDarkRectangle}" PathStyle_DragThumb="{StaticResource GreenDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Clipboard.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="37">
                         <core:ToolboxItemSettings.Code><![CDATA[     
function SetClipboard{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $Value = {{{Value}}};
    
        [System.Windows.Forms.Clipboard]::SetText($Value, [System.Windows.Forms.TextDataFormat]::UnicodeText); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }       
    $__Error.Quit();
} 

]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Files Clipboard" InternalName="SetFilesClipboard" FriendlyName="Set FIles Clipboard" PathStyle="{StaticResource GreenDarkRectangle}" PathStyle_DragThumb="{StaticResource GreenDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Clipboard.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[     
function SetFilesClipboard{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $ListFiles = {{{ListFiles}}};
    
        $collection = [System.Collections.Specialized.StringCollection]::new();
        $vartype = $ListFiles.GetType().Name;
        if($vartype.Contains("List"))
        {
            foreach($f in $ListFiles)
            {
                $_ = $collection.Add($f);
            }
        }
        else 
        {
            $_ = $collection.Add($ListFiles);    
        }
        [System.Windows.Forms.Clipboard]::SetFileDropList($collection);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }       
    $__Error.Quit();
} 

]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ListFiles" Tooltip="List files" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List/Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Collections" Name="Collections" ToolboxGridType="List" AliasDescription="Use List or Hashtable (Dictionary) objects: add items, get items, sort, search for items, etc">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="List Add Item" InternalName="ListAddItem" FriendlyName="List Add Item" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="39">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListAddItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Value = {{{Value}}};
    
        {{{Items}}}.Add($Value);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Value" Tooltip="Add value to list" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Insert Item" InternalName="ListInsertItem" FriendlyName="List Insert Item" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListInsertItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $Index = {{{Index}}};
    $Value = {{{Value}}};
    
        {{{Items}}}.Insert($Index,$Value);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Index" Tooltip="Position insert index" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Value" Tooltip="Add value to list" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Remove Item" InternalName="ListRemoveItem" FriendlyName="List Remove Item" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListRemoveItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Value = {{{Value}}};
    
        {{{Items}}}.Remove($Value);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Value" Tooltip="Remove value from list" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List RemoveAt Item" InternalName="ListRemoveAtItem" FriendlyName="List RemoveAt Item" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="15">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListRemoveAtItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $Index = {{{Index}}};
    
        if($Index -ge {{{Items}}}.Count)
        {
            $__Error.Exception("Out of range");
            return;
        }
        
        {{{ItemValue}}} = {{{Items}}}[$Index];
        {{{Items}}}.RemoveAt($Index);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Index" Tooltip="Remove value from list" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ItemValue" Tooltip="Item value" CatalogName="Output" Type="Variable" Value="$ItemValue" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Any type" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Clear" InternalName="ListClear" FriendlyName="List Clear" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListClear{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        {{{Items}}}.Clear();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Sort" InternalName="ListSort" FriendlyName="List Sort" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListSort{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        if("{{{Direction}}}" -eq "Ascending")
        {         
            {{{Items}}}.Sort();
        }
        else
        {
            {{{Items}}}.Sort();
            {{{Items}}}.Reverse();
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Direction" Tooltip="Add value to list" CatalogName="Main properties" Type="Enum" Value="Ascending" EnumVariants="Ascending;Descending" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Remove Duplicates" InternalName="ListRemoveDuplicates" FriendlyName="List Remove Duplicates" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="29">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListRemoveDuplicates{{{block_id}}}
{           
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        if({{{Items}}}.Count -gt 0)
        {       
            for($i = 0;$i -lt {{{Items}}}.Count; $i++)
            {
                $tempitem = {{{Items}}}[$i];
                for($j = $i + 1;$j -lt {{{Items}}}.Count;$j++)
                {
                    if($tempitem -eq {{{Items}}}[$j])
                    {
                        {{{Items}}}.RemoveAt($j);
                        $j--;
                    }
                }
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Contains" InternalName="ListContains" FriendlyName="List Contains" PathStyle="{StaticResource GreenRhombus}" PathStyle_DragThumb="{StaticResource GreenRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="77">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListContains{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                     
    $Items         = {{{Items}}};
    $Item          = {{{Item}}};
    $WholeWord     = ${{{WholeWord}}};
    $CheckType     = "{{{CheckType}}}";
    $ReverseCheck  = ${{{ReverseCheck}}}; 
    $UseWildcard   = ${{{UseWildcard}}};
    $CaseSensitive = ${{{CaseSensitive}}};
    
        $str2 = [string]$Item;
        if(!$CaseSensitive) { $str2 = $str2.ToLower(); } 
                    
        {{{FoundIndex}}} = -1;
        {{{FoundItem}}} = "";
             
        $isfound = $false;   
        if($UseWildcard)
        {           
            $cls = [MainHelpers.ClassWildcard]::new();
            for($i = 0;$i -lt $Items.Count; $i++)
            {          
                $v    = $Items[$i];             
                $str1 = [string]$v; 
                if(!$CaseSensitive) { $str1 = $str1.ToLower(); }
                $result = $cls.IndexOf($str1, $str2, 0, $WholeWord, $ReverseCheck, $CaseSensitive);
                          
                if($result.Success)
                {
                    {{{FoundIndex}}} = $i;
                    {{{FoundItem}}} = $v;
                    $isfound = $true;
                    break;
                }
            }
        }
        else
        {      
            for($i = 0;$i -lt $Items.Count; $i++)
            {         
                $v    = $Items[$i];             
                $str1 = [string]$v; 
                if(!$CaseSensitive) { $str1 = $str1.ToLower(); } 
                if($WholeWord) { $result = $str1 -eq $str2; }
                else { $result = $str1.Contains($str2); }
                if($result)
                {
                    $isfound = $true; 
                    {{{FoundIndex}}} = $i;
                    {{{FoundItem}}} = $v;
                    break;
                }
            }
        }
        
        if($CheckType -eq "Include")
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
        } 
        else
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
            } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Item" Tooltip="Contains item" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="WholeWord" Tooltip="Whole word" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CheckType" Caption="" Tooltip="Check type" CatalogName="Main properties" Type="Enum" Value="Include" EnumVariants="Include;Exclude" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReverseCheck" Tooltip="Reverse check" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseWildcard" Tooltip="Use Wildcard" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CaseSensitive" Tooltip="Case sensitive" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FoundItem" Tooltip="" CatalogName="Output" Type="Variable" Value="$FoundItem" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FoundIndex" Tooltip="" CatalogName="Output" Type="Variable" Value="$FoundIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable Add Item" InternalName="HashtableAddItem" FriendlyName="Hashtable Add Item" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableAddItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Key   = {{{Key}}};
    $Value = {{{Value}}};
        
        {{{Items}}}[$Key] = $Value
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Key" Tooltip="Key for add" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Value for add" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable Remove Item" InternalName="HashtableRemoveItem" FriendlyName="Hashtable Remove Item" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableRemoveItem{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $Key = {{{Key}}};
    
        {{{Items}}}.Remove($Key);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Key" Tooltip="Remove key from hashtable" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable Clear" InternalName="HashtableClear" FriendlyName="Hashtable Clear" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableClear{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        {{{Items}}}.Clear();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable ContainsKey" InternalName="HashtableContainsKey" FriendlyName="Hashtable ContainsKey" PathStyle="{StaticResource GreenRhombus}" PathStyle_DragThumb="{StaticResource GreenRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="47">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableContainsKey{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
             
    $Items         = {{{Items}}};
    $Key           = {{{Key}}};
    $WholeWord     = ${{{WholeWord}}};
    $CheckType     = "{{{CheckType}}}";
    $ReverseCheck  = ${{{ReverseCheck}}};
    $UseWildcard   = ${{{UseWildcard}}};
    $CaseSensitive = ${{{CaseSensitive}}};
    
        $liststr = New-Object Collections.Generic.List[string];
        
        $vartype = $Key.GetType().Name;
        
        if($vartype.Contains("List") -or $vartype -eq "Object[]" -or $vartype -eq "String[]")
        {        
            foreach($s in $Key)
            {       
                $_str = $s.ToString();
                if($_str.Length -gt 0) { $liststr.Add($_str); }
            }
        }
        else
        {
            $_str = [string]$Key; 
            if($_str.Length -gt 0) { $liststr.Add($_str); }
        }
        
        {{{FoundKey}}} = "";
        {{{FoundValue}}} = "";  
            
        $isfound = $false;
        if($UseWildcard)
        {             
            $cls = [MainHelpers.ClassWildcard]::new(); 
            
            $dictenum = $Items.GetEnumerator(); 
            $dictenum.Reset(); 
                        
            while($dictenum.MoveNext())
            {      
                $k    = $dictenum.Current.Key;
                $v    = $dictenum.Current.Value;
                $str1 = $k.ToString(); 
                if(!$CaseSensitive) { $str1 = $str1.ToLower(); }  
   
                foreach($ssstr2 in $liststr)
                {
                    $str2 = $ssstr2;
                    if(!$CaseSensitive) { $str2 = $str2.ToLower(); }  
                    
                    $result = $cls.IndexOf($str1, $str2, 0, $WholeWord, $ReverseCheck, $CaseSensitive);
                    if($result.Success)
                    {
                        {{{FoundKey}}} = $k;
                        {{{FoundValue}}} = $v;
                        $isfound = $true;
                        break;
                    }
                } 
                if($isfound) { break; }
            } 
        }
        else
        {         
            $dictenum = $Items.GetEnumerator(); 
            $dictenum.Reset(); 
            
            while($dictenum.MoveNext())
            {      
                $k    = $dictenum.Current.Key;
                $v    = $dictenum.Current.Value;
                $str1 = $k.ToString(); 
                if(!$CaseSensitive) { $str1 = $str1.ToLower(); }  
                
                foreach($ssstr2 in $liststr)
                {         
                    $str2 = $ssstr2;
                    if(!$CaseSensitive) { $str2 = $str2.ToLower(); }  
                    
                    if($WholeWord) { $result = $str1 -eq $str2; }
                    else { $result = $str1.Contains($str2); }              
                    if($result)
                    {
                        {{{FoundKey}}} = $k;
                        {{{FoundValue}}} = $v;
                        $isfound = $true;
                        break;
                    }  
                } 
                if($isfound) { break; }
            }
        } 
        
        
        if($CheckType -eq "Include")
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
        } 
        else
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Key" Tooltip="Contains item" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WholeWord" Tooltip="Whole word" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CheckType" Caption="" Tooltip="Check type" CatalogName="Main properties" Type="Enum" Value="Include" EnumVariants="Include;Exclude" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReverseCheck" Tooltip="Reverse check" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseWildcard" Tooltip="Use Wildcard" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CaseSensitive" Tooltip="Case sensitive" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FoundKey" Tooltip="" CatalogName="Output" Type="Variable" Value="$FoundKey" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FoundValue" Tooltip="" CatalogName="Output" Type="Variable" Value="$FoundValue" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable ContainsValue" InternalName="HashtableContainsValue" FriendlyName="Hashtable ContainsValue" PathStyle="{StaticResource GreenRhombus}" PathStyle_DragThumb="{StaticResource GreenRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="61">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableContainsValue{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
           
    $Items         = {{{Items}}};
    $Key           = {{{Value}}};
    $WholeWord     = ${{{WholeWord}}};
    $CheckType     = "{{{CheckType}}}";
    $ReverseCheck  = ${{{ReverseCheck}}};
    $UseWildcard   = ${{{UseWildcard}}};
    $CaseSensitive = ${{{CaseSensitive}}};
    
        $str2 = [string]$Key;
        if(!$CaseSensitive) { $str2 = $str2.ToLower(); } 
                
        {{{FoundKey}}} = "";
        {{{FoundValue}}} = "";  
            
        $isfound = $false;
        if($UseWildcard)
        {             
            $cls = [MainHelpers.ClassWildcard]::new();
            $dictenum = $Items.GetEnumerator(); 
            $dictenum.Reset(); 
                        
            while($dictenum.MoveNext())
            {      
                $k    = $dictenum.Current.Key;
                $v    = $dictenum.Current.Value;
                $str1 = $v.ToString(); 
                if(!$CaseSensitive) { $str1 = $str1.ToLower(); }               
                $result = $cls.IndexOf($str1, $str2, 0, $WholeWord, $ReverseCheck, $CaseSensitive);
                if($result.Success)
                {
                    {{{FoundKey}}} = $k;
                    {{{FoundValue}}} = $v;
                    $isfound = $true;
                    break;
                 }
            } 
        }
       else
       {         
            $dictenum = $Items.GetEnumerator(); 
            $dictenum.Reset(); 
            
            while($dictenum.MoveNext())
            {      
                $k    = $dictenum.Current.Key;
                $v    = $dictenum.Current.Value;
                $str1 = $v.ToString(); 
                if(!$CaseSensitive) { $str1 = $str1.ToLower(); }
                if($WholeWord) { $result = $str1 -eq $str2; }
                else { $result = $str1.Contains($str2); }                
                if($result)
                {
                    {{{FoundKey}}} = $k;
                    {{{FoundValue}}} = $v;
                    $isfound = $true;
                    break;
                }
            }
        } 
        
        
        if($CheckType -eq "Include")
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
        } 
        else
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Value" Tooltip="Contains item" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="WholeWord" Tooltip="Whole word" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="CheckType" Caption="" Tooltip="Check type" CatalogName="Main properties" Type="Enum" Value="Include" EnumVariants="Include;Exclude" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ReverseCheck" Tooltip="Reverse check" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="UseWildcard" Tooltip="Use Wildcard" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="CaseSensitive" Tooltip="Case sensitive" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FoundKey" Tooltip="" CatalogName="Output" Type="Variable" Value="$FoundKey" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FoundValue" Tooltip="" CatalogName="Output" Type="Variable" Value="$FoundValue" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Load From File" InternalName="ListLoadFromFile" FriendlyName="List Load From File" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListLoadFromFile{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $FileName    = {{{FileName}}}; 
        $TypeFormat  = "{{{TypeFormat}}}";  
        
        $FileName = ExpandConstFilePath $FileName
             
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        } 
        
        if($null -eq {{{Result}}}) { {{{Result}}} = New-Object System.Collections.Generic.List[object]; }
        {{{Result}}}.Clear();
                    
        $encoding   = [System.Text.Encoding]::UTF8;
        if($TypeFormat -eq "Json")
        {
            $jsoncontent = [System.IO.File]::ReadAllText($FileName, $encoding);
            $jsonobj = ConvertFrom-Json -InputObject $jsoncontent
            foreach($item in $jsonobj)
            {
                {{{Result}}}.Add($item);
            }
        }
        elseif($TypeFormat -eq "Text")
        {
            $arraycontent = [System.IO.File]::ReadAllLines($FileName, $encoding);
            foreach($item in $arraycontent)
            {
                if([string]::IsNullOrEmpty($item)) { continue; }
                {{{Result}}}.Add($item);
            }
        }  
      
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeFormat" Tooltip="TypeFormat" CatalogName="Main properties" Type="Enum" Value="Json" EnumVariants="Json;Text" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Save To File" InternalName="ListSaveToFile" FriendlyName="List Save To File" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListSaveToFile{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $FileName   = {{{FileName}}}; 
        $TypeFormat = "{{{TypeFormat}}}";
        
        $FileName = ExpandConstFilePath $FileName
              
        $encoding   = [System.Text.Encoding]::UTF8;
        if($TypeFormat -eq "Json")
        {
            $thislist = New-Object System.Collections.Generic.List[object];
            foreach($item in {{{Items}}})
            {
                $thislist.Add($item);
            }
            $jsoncontent = ConvertTo-Json -InputObject $thislist
            [System.IO.File]::WriteAllText($FileName, $jsoncontent, $encoding);
        }
        elseif($TypeFormat -eq "Text")
        {
            $thislist = New-Object System.Collections.Generic.List[object];
            foreach($item in {{{Items}}})
            {
                $s = "" + $item;
                $thislist.Add($s);
            }
            [System.IO.File]::WriteAllLines($FileName, $thislist.ToArray(), $encoding);
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="FileName" Tooltip="Filename" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeFormat" Tooltip="TypeFormat" CatalogName="Main properties" Type="Enum" Value="Json" EnumVariants="Json;Text" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable Load From File" InternalName="HashtableLoadFromFile" FriendlyName="Hashtable Load From File" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableLoadFromFile{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $FileName   = {{{FileName}}}; 
        $TypeFormat = "{{{TypeFormat}}}"; 
        $Separator  = {{{Separator}}};
        
        $FileName = ExpandConstFilePath $FileName
             
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }  
               
        if([string]::IsNullOrEmpty($Separator)) { $Separator = "`t"; }
        
        if($null -eq {{{Result}}}) { {{{Result}}} = @{}; }  
        {{{Result}}}.Clear();
                              
        $encoding   = [System.Text.Encoding]::UTF8;
        if($TypeFormat -eq "Json")
        {
            $jsoncontent = [System.IO.File]::ReadAllText($FileName, $encoding);
            $jsonobj = @{};
            (ConvertFrom-Json $jsoncontent).psobject.properties | ForEach-Object { $jsonobj[$_.Name] = $_.Value }
            foreach($key in $jsonobj.Keys)
            {
                {{{Result}}}.Add($key, $jsonobj[$key]);
            }
        }
        elseif($TypeFormat -eq "Text")
        {
            $arraycontent = [System.IO.File]::ReadAllLines($FileName, $encoding);
            foreach($item in $arraycontent)
            {
                if([string]::IsNullOrEmpty($item)) { continue; }
                $strarr = $item.Split(@($Separator), [System.StringSplitOptions]::RemoveEmptyEntries);
                if($strarr.Length -ge 2)
                {
                    {{{Result}}}.Add($strarr[0], $strarr[1]);
                }
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Filename" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeFormat" Tooltip="TypeFormat" CatalogName="Main properties" Type="Enum" Value="Json" EnumVariants="Json;Text" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Separator" Tooltip="Separator" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Hashtable Save To File" InternalName="HashtableSaveToFile" FriendlyName="Hashtable Save To File" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Collections.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HashtableSaveToFile{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $FileName = {{{FileName}}}; 
        $TypeFormat = "{{{TypeFormat}}}"; 
        $Separator  = {{{Separator}}};
        
        $FileName = ExpandConstFilePath $FileName
                
        if([string]::IsNullOrEmpty($Separator)) { $Separator = "`t"; }
                                
        $encoding   = [System.Text.Encoding]::UTF8;
        if($TypeFormat -eq "Json")
        {
            $thisdict = @{};
            foreach($key in {{{Items}}}.Keys)
            {
                $thisdict.Add($key, {{{Items}}}[$key]);
            }
            $jsoncontent = ConvertTo-Json -InputObject $thisdict
            [System.IO.File]::WriteAllText($FileName, $jsoncontent, $encoding);
        }
        elseif($TypeFormat -eq "Text")
        {
            $thislist = New-Object System.Collections.Generic.List[object];
            foreach($key in {{{Items}}}.Keys)
            {
                $val = "" + $key + $Separator + {{{Items}}}[$key];
                $thislist.Add($val);
            }
            [System.IO.File]::WriteAllLines($FileName, $thislist.ToArray(), $encoding);
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Items" Tooltip="" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="FileName" Tooltip="Filename" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeFormat" Tooltip="TypeFormat" CatalogName="Main properties" Type="Enum" Value="Json" EnumVariants="Json;Text" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Separator" Tooltip="Separator" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="DataTable" Name="DataTable" ToolboxGridType="List" AliasDescription="Use DataTable objects: get cell values, add, delete or rename rows and columns, sort, load or save to Excel files, etc">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get Cell Value" InternalName="GetCellValue" FriendlyName="Get Cell Value" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="47">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetCellValue{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $Row = {{{Row}}};       
    $Col = {{{Col}}};
        
        if($Col.GetType().Name -ne "String")
        {
            $colvalue = [int]$Col;
        }         
        else 
        {
            $colvalue = $Col;
        }
        $result = {{{Table}}}.Rows[$Row][$colvalue];
        
        if([DBNull]::Value.Equals($result))
        {
            $result = "";
        } 
            
        {{{Result}}} = $result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Cell Value" InternalName="SetCellValue" FriendlyName="Set Cell Value" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="55">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetCellValue{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $Row   = {{{Row}}};       
    $Col   = {{{Col}}};
    $Value = {{{Value}}};
        
    
        $colindex = 0;
        if([int]::TryParse($Col, [ref] $colindex))
        {
            if($colindex -ge {{{Table}}}.Columns.Count)
            {
                for($i = 0; $i -le $colindex; $i++)
                {
                    if($i -eq {{{Table}}}.Columns.Count)
                    {                          
                        $name = "Column" + $i;
                        {{{Table}}}.Columns.Add($name).Caption = $name; 
                    }
                }   
            }  
        }  
       else
       {
           if(-not {{{Table}}}.Columns.Contains($Col))
           {
               {{{Table}}}.Columns.Add($Col).Caption = $Col; 
           }
       } 
        if($Row -ge {{{Table}}}.Rows.Count) 
        {
            for($i = 0; $i -le $Row; $i++)
            {
                if($i -eq {{{Table}}}.Rows.Count)
                {                          
                    {{{Table}}}.Rows.Add();
                }
            }    
        }
        {{{Table}}}.Rows[$Row][$Col] = $Value;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Value" Tooltip="Value to set cell" CatalogName="Required" Type="Expression" Value="$Value" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Column" InternalName="AddColumn" FriendlyName="Add Column" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="57">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AddColumn{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $Name           = {{{Name}}}; 
    $DefaultValue   = {{{DefaultValue}}}; 
    $Caption        = {{{Caption}}};
    $IndexInsertObj = {{{IndexInsert}}};
    
        
        if([string]::IsNullOrEmpty($Name))
        {
            $i    = {{{Table}}}.Columns.Count + 1;
            $Name = "Column" + $i;
            while({{{Table}}}.Columns.Contains($Name))
            {
                $i++;
                $Name = "Column" + $i;
            }
        }  
        
        if({{{Table}}}.Columns.Contains($Name))
        {           
            $__Error.Exception("ERRORCONST_COLUMNEXISTS");
            return;
        }  
        
        $IndexInsert = -1;
        if(-not [string]::IsNullOrEmpty($IndexInsertObj))
        {
            $IndexInsert = _toint($IndexInsertObj); 
            if($IndexInsert -lt 0) { $IndexInsert = 0; }
            if($IndexInsert -ge {{{Table}}}.Columns.Count) { $IndexInsert = -1; }
        }
            
        $NewColumn            = [System.Data.DataColumn]::new();
        $NewColumn.ColumnName = $Name; 
        $NewColumn.DataType   = [{{{ColumnType}}}];
        if($Caption.Length -eq 0) {$Caption = $Name;} 
        $NewColumn.Caption = $Caption;  
        $NewColumn.DefaultValue = $DefaultValue; 
          
        $_ = {{{Table}}}.Columns.Add($NewColumn); 
        if($IndexInsert -ge 0)
        {
            $NewColumn.SetOrdinal($IndexInsert);
        }
        
        {{{IndexColumn}}} = $NewColumn.Ordinal;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Name" Tooltip="Name column" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ColumnType" Tooltip="Column type" CatalogName="Main properties" Type="Enum" Value="String" EnumVariants="String;Int32;Double;Decimal;DateTime;Boolean;Byte;Char;Guid;Int16;Int64;SByte;Single;TimeSpan;UInt16;UInt32;UInt64" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexInsert" Tooltip="Index insert" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Caption" Tooltip="Caption column" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DefaultValue" Tooltip="Default value" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="$null" ValueType="Text/Number" />
                                   <core:Property Name="IndexColumn" Tooltip="Return index new column" CatalogName="Output" Type="Variable" Value="$IndexColumn" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Row" InternalName="AddRow" FriendlyName="Add Row" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="25">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AddRow{{{block_id}}}
{    
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
      
    $Values = {{{Values}}};
    
        if($Values)
        {
            $listobj = New-Object Collections.Generic.List[object];
                
            foreach($val in $Values)
            {
                $listobj.Add($val);
            }
            
             {{{Table}}}.Rows.Add($listobj.ToArray());
             {{{IndexRow}}} = {{{Table}}}.Rows.Count - 1;              
        }
        else
        {
            $newrow = {{{Table}}}.NewRow();
            {{{Table}}}.Rows.Add($newrow);
            {{{IndexRow}}} = {{{Table}}}.Rows.Count - 1;  
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Values" Tooltip="Values" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="IndexRow" Tooltip="Index new row" CatalogName="Output" Type="Variable" Value="$RowIndex" EnumVariants="" Visible="True" DefaultValue="0" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Clear Rows" InternalName="ClearRows" FriendlyName="Clear Rows" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClearRows{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        {{{Table}}}.Rows.Clear();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Row" InternalName="RemoveRow" FriendlyName="Remove Row" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveRow{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Index = {{{Index}}};
    
        {{{Table}}}.Rows.RemoveAt($Index);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Index" Tooltip="Index row" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Column" InternalName="RemoveColumn" FriendlyName="Remove Column" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveColumn{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $IndexOrName = {{{IndexOrName}}};
    
        $index = 0;
        if([int]::TryParse($IndexOrName, [ref] $index)) 
        {
            {{{Table}}}.Columns.RemoveAt($index);
        }
        else
        {
            {{{Table}}}.Columns.Remove($IndexOrName);
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="IndexOrName" Tooltip="Index or name column" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rename Column" InternalName="RenameColumn" FriendlyName="Rename Column" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RenameColumn{{{block_id}}}
{    
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $IndexOrName = {{{IndexOrName}}};
    $NewName     = {{{NewName}}};  
    
        $index = 0;
        if([int]::TryParse($IndexOrName, [ref] $index)) 
        {     
            if(-not [string]::IsNullOrEmpty({{{Table}}}.Columns[$index].Caption))
            {
                {{{Table}}}.Columns[$index].Caption = $NewName;
            } 
            {{{Table}}}.Columns[$index].ColumnName = $NewName;
        }
        else
        {     
            if(-not [string]::IsNullOrEmpty({{{Table}}}.Columns[$IndexOrName].Caption))
            {
                {{{Table}}}.Columns[$IndexOrName].Caption = $NewName;
            }
            {{{Table}}}.Columns[$IndexOrName].ColumnName = $NewName;  
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="IndexOrName" Tooltip="Index or name column" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="NewName" Tooltip="New column name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Change Type Column" InternalName="ChangeTypeColumn" FriendlyName="Change Type Column" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="25">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ChangeTypeColumn{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
           
    $OldTable    = {{{Table}}};
    $IndexOrName = {{{IndexOrName}}};
    $NewType     = "{{{NewType}}}";
    
        $dtCloned = $OldTable.Clone(); 
        if($NewType -eq "Int") 
        { $dtCloned.Columns[$IndexOrName].DataType = [int]; }
        if($NewType -eq "Float") 
        { $dtCloned.Columns[$IndexOrName].DataType = [float]; }
        if($NewType -eq "Money") 
        { $dtCloned.Columns[$IndexOrName].DataType = [decimal]; }   
        if($NewType -eq "String") 
        { $dtCloned.Columns[$IndexOrName].DataType = [string]; }
        if($NewType -eq "DateTime") 
        { $dtCloned.Columns[$IndexOrName].DataType = [DateTime]; }  
        if($NewType -eq "Boolean") 
        { $dtCloned.Columns[$IndexOrName].DataType = [bool]; }
        
        for($i = 0; $i -lt $OldTable.Rows.Count; $i++)
        {
            $dtCloned.ImportRow($OldTable.Rows[$i]);
        }

        {{{Result}}} = $dtCloned;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="IndexOrName" Tooltip="Index or name column" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="NewType" Tooltip="New column name" CatalogName="Main properties" Type="Enum" Value="Int" EnumVariants="Int;Float;Money;String;DateTime;Boolean" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Return sorted table" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Sort DataTable" InternalName="SortDataTable" FriendlyName="Sort DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="64">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SortDataTable{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $IndexOrName = {{{IndexOrName}}};
        
        $index = 0;
        if([int]::TryParse($IndexOrName, [ref] $index)) 
        {
            $column = {{{Table}}}.Columns[$index]; 
        }
        else
        {
            $column = {{{Table}}}.Columns[$IndexOrName];
        }
        
        
        $view      = {{{Table}}}.DefaultView;
        $view.Sort = $column.ColumnName + " " + "{{{Direction}}}";
        {{{Result}}} = $view.ToTable(); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="IndexOrName" Tooltip="Index or name column" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="Direction" Tooltip="Direction sort" CatalogName="Main properties" Type="Enum" Value="ASC" EnumVariants="ASC;DESC" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Return sorted table" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Distinct DataTable" InternalName="DistinctDataTable" FriendlyName="Distinct DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DistinctDataTable{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                                
    $table        = {{{Table}}};
    $DistinctRows = ${{{DistinctRows}}}; 
    $ColumnNames  = {{{ColumnNames}}};
        
        $listcolumns = New-Object Collections.Generic.List[string];
        
        if([string]::IsNullOrEmpty($ColumnNames))
        {
            foreach($column in $table.Columns)
            {
                $listcolumns.Add($column.ColumnName);
            }
        }
        else
        {
            $strarr = $ColumnNames.Split(",");
            foreach($str in $strarr)
            {
                $IndexOrName = $str.Trim();
                if([string]::IsNullOrEmpty($IndexOrName)) { continue; } 
                $index = 0;
                if($table.Columns.Contains($IndexOrName))
                {
                    $column = $table.Columns[$IndexOrName];
                }
                elseif ([int]::TryParse($IndexOrName, [ref] $index))
                {
                    $column = $table.Columns[$index];
                } 

                $listcolumns.Add($column.ColumnName);
            }
        }
                
        $view      = $table.DefaultView;
        {{{Result}}} = $view.ToTable($DistinctRows, $listcolumns.ToArray()); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="DistinctRows" Tooltip="DistinctRows" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ColumnNames" Tooltip="Column Names" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return  table" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Merge DataTable" InternalName="MergeDataTable" FriendlyName="Merge DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="46">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MergeDataTable{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $table1              = {{{Table}}};
    $table2              = {{{MergedTable}}}; 
    $MissingSchemaAction = "{{{MissingSchemaAction}}}";
    
        $schema = [System.Data.MissingSchemaAction]::Add;
        if($MissingSchemaAction -eq "AddWithKey") { $schema = [System.Data.MissingSchemaAction]::AddWithKey; } 
        if($MissingSchemaAction -eq "Error") { $schema = [System.Data.MissingSchemaAction]::Error; }
        if($MissingSchemaAction -eq "Ignore") { $schema = [System.Data.MissingSchemaAction]::Ignore; }
        
        
        $newtable = $table1.Clone();
        
        $newtable.Merge($table1, $false, $schema);
        $newtable.Merge($table2, $false, $schema); 
        
        {{{Result}}} = $newtable;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="MergedTable" Tooltip="Table for merge" CatalogName="Required" Type="Variable" Value="$MergedTable" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="MissingSchemaAction" Tooltip="Missing Schema Action" CatalogName="Main properties" Type="Enum" Value="Add" EnumVariants="Add;Ignore;Error;AddWithKey" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return merged table" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Rows" InternalName="SelectRows" FriendlyName="Select Rows" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="31">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SelectRows{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $AsDataTable = ${{{AsDataTable}}};
    
        $listrows = {{{Table}}}.Select({{{FilterExpression}}}); 
        
        if($AsDataTable)
        {
            $newdt = {{{Table}}}.Clone();
            foreach($row in $listrows)
            {
                $newdt.ImportRow($row);
            }
            {{{Rows}}} = $newdt;
        }
        else
        {
            {{{Rows}}} = $listrows;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="FilterExpression" Tooltip="Expression for select rows" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AsDataTable" Tooltip="As datatable" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Rows" Tooltip="Return selected rows or datatable" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Contains Value" InternalName="ContainsValue" FriendlyName="Contains Value" PathStyle="{StaticResource RedOrangeRhombus}" PathStyle_DragThumb="{StaticResource RedOrangeRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="NoImage" Proportional="True" Version="77">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ContainsValue{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                      
    $Table         = {{{Table}}};
    $Value         = {{{Value}}};
    $Col           = {{{Col}}};
    $WholeWord     = ${{{WholeWord}}};
    $CheckType     = "{{{CheckType}}}";
    $ReverseCheck  = ${{{ReverseCheck}}};
    $UseWildcard   = ${{{UseWildcard}}};
    $CaseSensitive = ${{{CaseSensitive}}};   
    
        $str2 = $Value.ToString();
        if(!$CaseSensitive) { $str2 = $str2.ToLower(); }
        
        {{{FoundRow}}} = -1; 
        {{{FoundCol}}} = -1;
        
        $isfound = $false;
        if($UseWildcard)
        {
            $cls = [MainHelpers.ClassWildcard]::new();
            
            $colstr = [string]$Col;
            
            if($colstr -ne "")
            {
                for($i = 0; $i -lt $Table.Rows.Count; $i++)
                {
                    $val = $Table.Rows[$i][$Col];
                    
                    $str1 = $val.ToString();
                    if(!$CaseSensitive) { $str1 = $str1.ToLower(); }                
                    $result = $cls.IndexOf($str1, $str2, 0, $WholeWord, $ReverseCheck, $CaseSensitive);
                    if($result.Success)
                    {
                        {{{FoundRow}}} = $i;
                        {{{FoundCol}}} = $Col;
                        $isfound = $true;
                        break;
                    }
                } 
            }   
            else
            {
                for($j = 0; $j -lt $Table.Columns.Count; $j++)
                {
                    for($i = 0; $i -lt $Table.Rows.Count; $i++)
                    {
                        $val = $Table.Rows[$i][$j];
                        
                        $str1 = $val.ToString(); 
                        if(!$CaseSensitive) { $str1 = $str1.ToLower(); }
                        $result = $cls.IndexOf($str1, $str2, 0, $WholeWord, $ReverseCheck, $CaseSensitive);
                        if($result.Success)
                        {
                            {{{FoundRow}}} = $i;
                            {{{FoundCol}}} = $j;
                            $isfound = $true;
                            break;
                        }
                    }
                    if($isfound) { break; }
                }
            } 
        }         
        else
        {
            $colstr = $Col.ToString();
            
            if($colstr -ne "")
            {
                for($i = 0; $i -lt $Table.Rows.Count; $i++)
                {
                    $val = $Table.Rows[$i][$Col];
                    
                    $str1 = $val.ToString();
                    if(!$CaseSensitive) { $str1 = $str1.ToLower(); }
                    if($WholeWord) { $result = $str1 -eq $str2; }
                    else { $result = $str1.Contains($str2); }                 
                    if($result)
                    {
                        {{{FoundRow}}} = $i;
                        {{{FoundCol}}} = $Col;
                        $isfound = $true;
                        break;
                    }
                } 
            }   
            else
            {
                for($j = 0; $j -lt $Table.Columns.Count; $j++)
                {
                    for($i = 0; $i -lt $Table.Rows.Count; $i++)
                    {
                        $val = $Table.Rows[$i][$j];
                        
                        $str1 = $val.ToString(); 
                        if(!$CaseSensitive) { $str1 = $str1.ToLower(); } 
                        if($WholeWord) { $result = $str1 -eq $str2; }
                        else { $result = $str1.Contains($str2); }
                        if($result)
                        {
                            {{{FoundRow}}} = $i;
                            {{{FoundCol}}} = $j;
                            $isfound = $true;
                            break;
                        }
                    }
                    if($isfound) { break; }
                }
            }
        }    
        
        if($CheckType -eq "Include")
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
        } 
        else
        {
            if($isfound)
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
            else 
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Value" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="Col" Tooltip="Column number or empty if all table" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WholeWord" Tooltip="Whole word" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="CheckType" Caption="" Tooltip="Check type" CatalogName="Main properties" Type="Enum" Value="Include" EnumVariants="Include;Exclude" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ReverseCheck" Tooltip="Reverse check" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="UseWildcard" Tooltip="Use Wildcard" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="CaseSensitive" Tooltip="Case sensitive" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FoundRow" Tooltip="Index found row" CatalogName="Output" Type="Variable" Value="$FoundRow" EnumVariants="" Visible="True" DefaultValue="0" ValueType="Number" />
                                   <core:Property Name="FoundCol" Tooltip="Index found col" CatalogName="Output" Type="Variable" Value="$FoundCol" EnumVariants="" Visible="True" DefaultValue="0" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Row" InternalName="FindRow" FriendlyName="Find Row" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="52">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindRow{{{block_id}}}
{         
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ValueObj        = {{{Value}}};
    $Col             = {{{Col}}}; 
    $CompareAsString = ${{{CompareAsString}}};
        
        if($CompareAsString)
        {
            $Value = _tostring($ValueObj);
        }  
        else
        {
            $Value = $ValueObj;
        }
        
        $result = $false;
        {{{Result}}} = $null; 
        {{{FindedIndex}}} = -1;
        {{{FindedIndexCol}}} = -1;
        if($Col -ne "")
        {
            for($i = 0; $i -lt {{{Table}}}.Rows.Count; $i++)
            {
                $valobj = {{{Table}}}.Rows[$i][$Col];  
                if($CompareAsString)
                {
                    $val = _tostring($valobj);
                }  
                else
                {
                    $val = $valobj;
                }
                if($val -eq $Value) 
                { 
                    {{{Result}}} = {{{Table}}}.Rows[$i];  
                    {{{FindedIndex}}} = $i;
                    {{{FindedIndexCol}}} = $Col;
                    $result = $true;
                    break; 
                }
            }   
        }  
        else
        {     
            $result = $false;
            for($j = 0; $j -lt {{{Table}}}.Columns.Count; $j++)
            {
                for($i = 0; $i -lt {{{Table}}}.Rows.Count; $i++)
                {
                    $valobj = {{{Table}}}.Rows[$i][$j]; 
                    if($CompareAsString)
                    {
                        $val = _tostring($valobj);
                    }  
                    else
                    {
                        $val = $valobj;
                    }
                    if($val -eq $Value) 
                    { 
                        {{{Result}}} = {{{Table}}}.Rows[$i]; 
                        {{{FindedIndex}}} = $i;
                        {{{FindedIndexCol}}} = $j;
                        $result = $true; 
                        break; 
                    }
                } 
                if($result) { break; }
            }
        } 
        if(-not $result)
        {
            $__Error.Exception("Not found");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Value" Tooltip="Search value" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="Col" Tooltip="Column number or empty if all table" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CompareAsString" Tooltip="CompareAsString" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return finded row" CatalogName="Output" Type="Variable" Value="$FindedRow" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="FindedIndex" Tooltip="Return finded index row" CatalogName="Output" Type="Variable" Value="$FindedIndexRow" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FindedIndexCol" Tooltip="Return finded index row" CatalogName="Output" Type="Variable" Value="$FindedIndexCol" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get DataTable Range" InternalName="GetDataTableRange" FriendlyName="Get DataTable Range" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="16">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetDataTableRange{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
       
    $Table    = {{{Table}}};
    $Row      = {{{Row}}};       
    $Col      = {{{Col}}}; 
    $RowCount = {{{RowCount}}};
    $ColCount = {{{ColCount}}};
        
        $tableresult = New-Object System.Data.DataTable;
        
        for($icol = $Col; $icol -lt ($Col+$ColCount); $icol++)
        {
            if($icol -ge $Table.Columns.Count) { Break; }
            $column         = $tableresult.Columns.Add($Table.Columns[$icol].ColumnName, $Table.Columns[$icol].DataType);
            $column.Caption = $Table.Columns[$icol].Caption;
        }

        for($irow = $Row; $irow -lt ($Row+$RowCount); $irow++)
        {
            if($irow -ge $Table.Rows.Count) { Break; }
            $newrow = $tableresult.NewRow();
            for($icol = $Col; $icol -lt ($Col+$ColCount); $icol++)
            {
                if($icol -ge $Table.Columns.Count) { Break; }
                $newrow[$icol-$Col] = $Table.Rows[$irow][$icol];   
            }
            $tableresult.Rows.Add($newrow);
        }

        {{{Result}}} = $tableresult;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RowCount" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ColCount" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="1" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="New table" CatalogName="Output" Type="Variable" Value="$NewTable" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert DataTable" InternalName="InsertDataTable" FriendlyName="Insert DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="13">
                         <core:ToolboxItemSettings.Code><![CDATA[
function InsertDataTable{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $Table       = {{{Table}}};
    $Row         = {{{Row}}};       
    $Col         = {{{Col}}};
    $InsertTable = {{{InsertTable}}};
        
        for($irow1 = 0; $irow1 -lt $InsertTable.Rows.Count; $irow1++)
        {
            for($icol1 = 0; $icol1 -lt $InsertTable.Columns.Count; $icol1++)
            {
                $value = $InsertTable.Rows[$irow1][$icol1];
                $irow2 = $irow1 + $Row;
                $icol2 = $icol1 + $Col;
                while($icol2 -ge $Table.Columns.Count)
                {
                    $columnName = [string]::Format("Column {0}",$Table.Columns.Count);
                    while($Table.Columns.Contains($columnName))
                    {
                        $columnName += "~";   
                    }
                    $_ = $Table.Columns.Add($columnName); 
                }
                while ($irow2 -ge $Table.Rows.Count)
                {
                    $arr = $null;
                    for ($i = 0; $i -lt $Table.Columns.Count; $i++) 
                    { 
                            $arr += @(""); 
                    }
                    $_ = $Table.Rows.Add($arr);
                }
                $Table.Columns[$icol2].ReadOnly = $false;
                $Table.Rows[$irow2][$icol2] = $value;
            }
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Row" Tooltip="Row number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Col" Tooltip="Column number" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="InsertTable" Tooltip="Insert Table" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Transpose DataTable" InternalName="TransposeDataTable" FriendlyName="Transpose DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TransposeDataTable{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
           
    $inputTable = {{{Table}}};
    
        $outputTable = New-Object System.Data.DataTable;

        $outputTable.Columns.Add($inputTable.Columns[0].ColumnName.ToString());

        foreach ($inRow in $inputTable.Rows)
        {
            $newColName = $inRow[0].ToString(); 
            if([string]::IsNullOrEmpty($newColName)){ $newColName = "Column";}
            $ind        = 1;
            while($outputTable.Columns.Contains($newColName))
            {
                $newColName += $ind.ToString(); 
                $ind++;
            }
            $outputTable.Columns.Add($newColName);
        }

        for ($rCount = 1; $rCount -le $inputTable.Columns.Count - 1; $rCount++)
        {
            $newRow = $outputTable.NewRow();

            $newRow[0] = $inputTable.Columns[$rCount].ColumnName.ToString();
            for ($cCount = 0; $cCount -le $inputTable.Rows.Count - 1; $cCount++)
            {
                $colValue = $inputTable.Rows[$cCount][$rCount];
                if($null -eq $colValue) { $colValue = ""; }
                $newRow[$cCount + 1] = $colValue.ToString();
            }
            $outputTable.Rows.Add($newRow);
        }  
        
        {{{Result}}} = $outputTable;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Result" Tooltip="Return transposed table" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Load CSV DataTable" InternalName="LoadCSVDataTable" FriendlyName="Load CSV DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="31">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LoadCSVDataTable{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ExcelPath   = {{{Path}}};
    $Delimiter   = {{{Delimiter}}};
    $EncodingStr = "{{{Encoding}}}";
        
        $ExcelPath = ExpandConstFilePath $ExcelPath 
        
        if(![System.IO.File]::Exists($ExcelPath))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $ExcelPath");
            return;
        } 
        
        $encoding = [System.Text.Encoding]::Default; 
        if($EncodingStr -eq "UTF8")
        {
            $encoding   = [System.Text.Encoding]::UTF8; 
        } 
        
        if($Delimiter.Length -eq 0) { $Delimiter=";"; }
        
        $tableresult = New-Object System.Data.DataTable;
        
        $reader                              = [System.IO.StreamReader]::new($ExcelPath, $encoding);
        $csv                                 = [CsvHelper.CsvReader]::new($reader, [System.Globalization.CultureInfo]::InvariantCulture);
        $csv.Configuration.Delimiter         = $Delimiter; 
        $csv.Configuration.BadDataFound      = $null;  
        $csv.Configuration.MissingFieldFound = $null;
        $dr                                  = [CsvHelper.CsvDataReader]::new($csv);
        $tableresult.Load($dr);
        $dr.Dispose();
        $csv.Dispose();
        $reader.Dispose(); 
        
        for($icol=0; $icol -lt $tableresult.Columns.Count; $icol++) 
        {
            $tableresult.Columns[$icol].ReadOnly = $false;
        }
        
        {{{Table}}} = $tableresult;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path to Excel document" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Delimiter" Tooltip="Symbol Delimiter" CatalogName="Main properties" Type="Expression" Value="&quot;;&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="ANSI" EnumVariants="ANSI;UTF8" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Table" Tooltip="DataTable from excel" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save CSV DataTable" InternalName="SaveCSVDataTable" FriendlyName="Save CSV DataTable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="20">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveCSVDataTable{{{block_id}}}
{       
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $ExcelPath     = {{{Path}}};
        $Delimiter     = {{{Delimiter}}};
        $EncodingStr   = "{{{Encoding}}}";
        $InsertHeaders = ${{{InsertHeaders}}};
    
        $ExcelPath = ExpandConstFilePath $ExcelPath
        
        $encoding = [System.Text.Encoding]::Default; 
        if($EncodingStr -eq "UTF8")
        {
            $encoding   = [System.Text.Encoding]::UTF8; 
        }
          
        if($Delimiter.Length -eq 0) { $Delimiter=";"; }
        
        $writer                      = [System.IO.StreamWriter]::new($ExcelPath, $false,  $encoding);
        $csv                         = [CsvHelper.CsvWriter]::new($writer, [System.Globalization.CultureInfo]::InvariantCulture);
        $csv.Configuration.Delimiter = $Delimiter;
             
        if($InsertHeaders)
        {
            foreach($column in {{{Table}}}.Columns)
            {
                $csv.WriteField($column.ColumnName);
            }
            $csv.NextRecord(); 
        }
        
        foreach ($row in {{{Table}}}.Rows)
        {
            for ($i = 0; $i -lt {{{Table}}}.Columns.Count; $i++)
            {
                $csv.WriteField($row[$i]);
            }
            $csv.NextRecord();
        }

        $csv.Dispose();
        $writer.Dispose();
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="Excel Workbook Instance Variable" CatalogName="Required" Type="Variable" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Path" Tooltip="Path to Excel document" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Delimiter" Tooltip="Symbol Delimiter" CatalogName="Main properties" Type="Expression" Value="&quot;;&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="ANSI" EnumVariants="ANSI;UTF8" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsertHeaders" Tooltip="Insert headers" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="1" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="DataTable To Hashtable" InternalName="DataTableToHashtable" FriendlyName="DataTable To Hashtable" PathStyle="{StaticResource RedOrangeRectangle}" PathStyle_DragThumb="{StaticResource RedOrangeRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" ImageType="LeftImage" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DataTableToHashtable{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");   
    
    $Table       = {{{Table}}};   
    $ColKeyObj   = {{{ColKey}}};
    $ColValueObj = {{{ColValue}}};
        
        $ColKey   = _toint($ColKeyObj); 
        $ColValue = _toint($ColValueObj);
         
        $result = @{};
        
        for($ind = 0; $ind -lt $Table.Rows.Count; $ind++)
        {
            $tokey   = $Table.Rows[$ind][$ColKey]; 
            $tovalue = $Table.Rows[$ind][$ColValue];
            
            if($null -eq $tokey) { $tokey = ""; }
            if($null -eq $tovalue) { $tovalue = ""; }
                 
            $tokey = $tokey.ToString().Trim();
            
            if($tokey.Length -eq 0) { continue; }
            $result[$tokey] = $tovalue;
        }
            
        {{{Result}}} = $result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Table" Tooltip="DataTable" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ColKey" Tooltip="Column number for key" CatalogName="Required" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ColValue" Tooltip="Column number for value" CatalogName="Required" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Out Hashtable" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="DateTime" Name="DateTime" ToolboxGridType="List" AliasDescription="Use DateTime objects, perform conversions between different DateTime formats and strings, perform calculations with DateTime">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="DateTime Now" InternalName="DateTimeNow" FriendlyName="DateTime Now" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="26">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DateTimeNow{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    {{{Result}}} = [DateTime]::Now;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Result" Tooltip="Return current date and time" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="DateTime Add" InternalName="DateTimeAdd" FriendlyName="DateTime Add" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="12">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DateTimeAdd{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    {{{Result}}} = {{{Value}}};  
    $Years = {{{Years}}}
    $Months = {{{Months}}}  
    $Days = {{{Days}}}
    $Hours = {{{Hours}}}
    $Minutes = {{{Minutes}}}
    $Seconds = {{{Seconds}}}
    $Milliseconds = {{{Milliseconds}}}
        
        if($Years -ne 0) { {{{Result}}} = {{{Result}}}.AddYears($Years); }
        if($Months -ne 0) { {{{Result}}} = {{{Result}}}.AddMonths($Months); }
        if($Days -ne 0) { {{{Result}}} = {{{Result}}}.AddDays($Days); }
        if($Hours -ne 0) { {{{Result}}} = {{{Result}}}.AddHours($Hours); }
        if($Minutes -ne 0) { {{{Result}}} = {{{Result}}}.AddMinutes($Minutes); }
        if($Seconds -ne 0) { {{{Result}}} = {{{Result}}}.AddSeconds($Seconds); }
        if($Milliseconds -ne 0) { {{{Result}}} = {{{Result}}}.AddMilliseconds($Milliseconds); }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Datetime for add values" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time" />
                                   <core:Property Name="Years" Tooltip="Years for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Months" Tooltip="Months for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Days" Tooltip="Days for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Hours" Tooltip="Hours for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Minutes" Tooltip="Minutes for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Seconds" Tooltip="Seconds for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Milliseconds" Tooltip="Milliseconds for add" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return new date and time" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="DateTime To String" InternalName="DateTimeToString" FriendlyName="DateTime To String" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DateTimeToString{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Value        = {{{Value}}}; 
    $StringFormat = {{{StringFormat}}};
        
        {{{Result}}} = $Value.ToString($StringFormat);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Datetime for convert" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and Time" />
                                   <core:Property Name="StringFormat" Tooltip="String format" CatalogName="Main properties" Type="Expression" Value="&quot;dd.MM.yyyy HH:mm:ss&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return date and time as string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="DateTime From String" InternalName="DateTimeFromString" FriendlyName="DateTime From String" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="29">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DateTimeFromString{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Value  = {{{Value}}}; 
    $Locale = "{{{Locale}}}";
    
        $localestr = "ru-RU";
        if($Locale -eq "RU")
        {
            $localestr = "ru-RU";
        }
        elseif($Locale -eq "EN")
        {
            $localestr = "en-US";
        }
        
        {{{Result}}} = [datetime]::Parse($Value, [System.Globalization.CultureInfo]::GetCultureInfo($localestr));
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="String for convert to datetime" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Locale" Tooltip="Locale" CatalogName="Main properties" Type="Enum" Value="RU" EnumVariants="RU;EN" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Return date and time object" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Day of Week" InternalName="DayofWeek" FriendlyName="Day of Week" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="44">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DayofWeek{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Value      = {{{Value}}}; 
    $TypeResult = "{{{TypeResult}}}"; 
    $Locale = "{{{Locale}}}";
    
    
        $localestr = "ru-RU";
        if($Locale -eq "RU")
        {
            $localestr = "ru-RU";
        }
        elseif($Locale -eq "EN")
        {
            $localestr = "en-US";
        }
        
        $datetime = [DateTime]::Now;
        if($null -ne $Value)
        {
            $strtype = $Value.GetType().Name;
            if($strtype -eq "DateTime")
            {
                $datetime = $Value;
            } 
            elseif($strtype -eq "String")
            {                       
                $datetime = [datetime]::Parse($Value, [System.Globalization.CultureInfo]::GetCultureInfo($localestr));
            }
        }
        
        $r = 1;
        if($TypeResult -eq "English")
        {
            $culture = [System.Globalization.CultureInfo]::new("en-US");
            $r       = $culture.DateTimeFormat.GetDayName($datetime.DayOfWeek);
        } 
        elseif($TypeResult -eq "Russian")
        {
            $culture = [System.Globalization.CultureInfo]::new("ru-RU");
            $r       = $culture.DateTimeFormat.GetDayName($datetime.DayOfWeek);
        }
        elseif($TypeResult -eq "Local language")
        {
            $culture = [System.Globalization.CultureInfo]::CurrentCulture;
            $r       = $culture.DateTimeFormat.GetDayName($datetime.DayOfWeek);
        }
        elseif($TypeResult -eq "Number")
        {
            $r = [int]$datetime.DayOfWeek;
            if($r -eq 0) {$r = 7;}
        } 
        
        {{{Result}}} = $r;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="String datetime (eq. dd.MM.yyyy). Is empty to current date" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeResult" Tooltip="Type result" CatalogName="Main properties" Type="Enum" Value="Russian" EnumVariants="English;Russian;Local language;Number" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Locale" Tooltip="Locale" CatalogName="Main properties" Type="Enum" Value="RU" EnumVariants="RU;EN" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Calculate working days" InternalName="CalculateWorkingDays" FriendlyName="Calculate working days" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="18">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CalculateWorkingDays{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $CalendarObj = {{{Calendar}}}; 
    $DateFromObj = {{{DateFrom}}};
    $DateToObj   = {{{DateTo}}};
    $EnableRange = ${{{EnableRange}}};
    
        $DateFrom = _todatetime($DateFromObj);
        if($null -eq $DateFrom) { $DateFrom = [DateTime]::Now; }
        
        $DateTo = _todatetime($DateToObj);
        if($null -eq $DateTo) { $DateTo = [DateTime]::Now; }
                    
        if(-not $EnableRange)
        {
            $DateFrom = $DateFrom.AddDays(1);
            $DateTo = $DateTo.AddDays(-1);
        }

        $startdate = [DateTime]::new($DateFrom.Year, $DateFrom.Month, $DateFrom.Day); 
        $enddate = [DateTime]::new($DateTo.Year, $DateTo.Month, $DateTo.Day);

        $countdays = 0;
        while($startdate.Ticks -le $enddate.Ticks)
        {
            $strdate = $startdate.ToString("yyyy-MM-dd");
            $startdate = $startdate.AddDays(1);
            if($CalendarObj.Contains($strdate)) { continue; }
            $countdays++;
        }
        
        {{{Result}}} = $countdays;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Calendar" Tooltip="Calendar object" CatalogName="Required" Type="Expression" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="DateFrom" Tooltip="Date from" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="DateTo" Tooltip="Date to" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="EnableRange" Tooltip="Enable range boundaries" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$CountDays" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Next business day" InternalName="NextBusinessDay" FriendlyName="Next business day" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function NextBusinessDay{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $CalendarObj  = {{{Calendar}}}; 
    $DateStartObj = {{{DateStart}}};
    $CountDaysObj = {{{CountDays}}};
    
        $DateStart = _todatetime($DateStartObj);
        if($null -eq $DateStart) { $DateStart = [DateTime]::Now; }
        
        $CountDays = _toint($CountDaysObj); 
        
        $counter = 1;
        if($CountDays -lt 0) { $CountDays = [Math]::Abs($CountDays); $counter = -1; }
        
        $startdate = [DateTime]::new($DateStart.Year, $DateStart.Month, $DateStart.Day);
        while($true)
        {
            $startdate = $startdate.AddDays($counter);
            $strdate = $startdate.ToString("yyyy-MM-dd");
            if($CalendarObj.Contains($strdate)) { continue; }
            $CountDays--;
            if($CountDays -le 0) { break; }
        }
        
        {{{Result}}} = $startdate;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Calendar" Tooltip="Calendar object" CatalogName="Required" Type="Expression" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="DateStart" Tooltip="Date start" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="CountDays" Tooltip="Count days" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$ResultDate" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Date and time" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Is Working day" InternalName="IsWorkingDay" FriendlyName="Is Working day" PathStyle="{StaticResource BlueLagoonRhombus}" PathStyle_DragThumb="{StaticResource BlueLagoonRhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="15">
                         <core:ToolboxItemSettings.Code><![CDATA[
function IsWorkingDay{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                     
    $CalendarObj = {{{Calendar}}}; 
    $ThisDateObj = {{{ThisDate}}};
    
        $ThisDate = _todatetime($ThisDateObj);
        if($null -eq $ThisDate) { $ThisDate = [DateTime]::Now; }
        
        $strdate = $ThisDate.ToString("yyyy-MM-dd");
                
        if($CalendarObj.Contains($strdate))
        {      
            {{{Result}}} = $false;
            $__Error.Jump("{{{connector-No}}}"); 
            return;
        }
        else
        {      
            {{{Result}}} = $true;
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
              
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Calendar" Tooltip="Calendar object" CatalogName="Required" Type="Expression" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="ThisDate" Tooltip="Date start" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="Result" Tooltip="Result verify" CatalogName="Output" Type="Variable" Value="$IsWorkingDay" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Is Weekend day" InternalName="IsWeekendDay" FriendlyName="Is Weekend day" PathStyle="{StaticResource BlueLagoonRhombus}" PathStyle_DragThumb="{StaticResource BlueLagoonRhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function IsWeekendDay{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                     
    $CalendarObj = {{{Calendar}}}; 
    $ThisDateObj = {{{ThisDate}}};
    
        $ThisDate = _todatetime($ThisDateObj);
        if($null -eq $ThisDate) { $ThisDate = [DateTime]::Now; }
        
        $strdate = $ThisDate.ToString("yyyy-MM-dd");
                
        if($CalendarObj.Contains($strdate))
        {    
            {{{Result}}} = $true;
            $__Error.Jump("{{{connector-Yes}}}"); 
            return;
        }
        else
        {      
            {{{Result}}} = $false;
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
              
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Calendar" Tooltip="Calendar object" CatalogName="Required" Type="Expression" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="ThisDate" Tooltip="Date start" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="Result" Tooltip="Result verify" CatalogName="Output" Type="Variable" Value="$IsWeekend" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Working Days" InternalName="GetWorkingDays" FriendlyName="Get Working Days" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetWorkingDays{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $CalendarObj = {{{Calendar}}}; 
    $DateFromObj = {{{DateFrom}}};
    $DateToObj   = {{{DateTo}}};
    $EnableRange = ${{{EnableRange}}};
    
        $DateFrom = _todatetime($DateFromObj);
        if($null -eq $DateFrom) { $DateFrom = [DateTime]::Now; }
        
        $DateTo = _todatetime($DateToObj);
        if($null -eq $DateTo) { $DateTo = [DateTime]::Now; }
                    
        if(-not $EnableRange)
        {
            $DateFrom = $DateFrom.AddDays(1);
            $DateTo = $DateTo.AddDays(-1);
        }

        $startdate = [DateTime]::new($DateFrom.Year, $DateFrom.Month, $DateFrom.Day); 
        $enddate = [DateTime]::new($DateTo.Year, $DateTo.Month, $DateTo.Day);
                 
        $listdates = New-Object Collections.Generic.List[object];
        while($startdate.Ticks -le $enddate.Ticks)
        {
            $strdate = $startdate.ToString("yyyy-MM-dd"); 
            if($CalendarObj.Contains($strdate))
            {
                #Free days 
                
            }
            else
            {
                #Work days
                $listdates.Add($startdate);
            }
            $startdate = $startdate.AddDays(1);
        } 
        
        $isouttable = $true;
        if($null -ne {{{Result}}})
        {
            $strtype = {{{Result}}}.GetType().Name;  
            if($strtype.Contains("List")) { $isouttable = $false; } 
        } 
        
        if($isouttable)
        {
            $newdt = New-Object System.Data.DataTable;
            $newdt.Columns.Add("Date");
            foreach($item in $listdates)
            {
                $newdt.Rows.Add($item);
            }
            {{{Result}}} = $newdt;
        }
        else
        {
            {{{Result}}} = $listdates;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Calendar" Tooltip="Calendar object" CatalogName="Required" Type="Expression" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="DateFrom" Tooltip="Date from" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="DateTo" Tooltip="Date to" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="EnableRange" Tooltip="Enable range boundaries" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$WorkingDays" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Data Table/List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Weekend Days" InternalName="GetWeekendDays" FriendlyName="Get Weekend Days" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Date and Time.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetWeekendDays{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $CalendarObj = {{{Calendar}}}; 
    $DateFromObj = {{{DateFrom}}};
    $DateToObj   = {{{DateTo}}};
    $EnableRange = ${{{EnableRange}}};
    
        $DateFrom = _todatetime($DateFromObj);
        if($null -eq $DateFrom) { $DateFrom = [DateTime]::Now; }
        
        $DateTo = _todatetime($DateToObj);
        if($null -eq $DateTo) { $DateTo = [DateTime]::Now; }
                    
        if(-not $EnableRange)
        {
            $DateFrom = $DateFrom.AddDays(1);
            $DateTo = $DateTo.AddDays(-1);
        }

        $startdate = [DateTime]::new($DateFrom.Year, $DateFrom.Month, $DateFrom.Day); 
        $enddate = [DateTime]::new($DateTo.Year, $DateTo.Month, $DateTo.Day);
                 
        $listdates = New-Object Collections.Generic.List[object];
        while($startdate.Ticks -le $enddate.Ticks)
        {
            $strdate = $startdate.ToString("yyyy-MM-dd"); 
            if($CalendarObj.Contains($strdate))
            {
                #Free days 
                $listdates.Add($startdate);
            }
            else
            {
                #Work days
            }
            $startdate = $startdate.AddDays(1);
        } 
        
        $isouttable = $true;
        if($null -ne {{{Result}}})
        {
            $strtype = {{{Result}}}.GetType().Name;  
            if($strtype.Contains("List")) { $isouttable = $false; } 
        } 
        
        if($isouttable)
        {
            $newdt = New-Object System.Data.DataTable;
            $newdt.Columns.Add("Date");
            foreach($item in $listdates)
            {
                $newdt.Rows.Add($item);
            }
            {{{Result}}} = $newdt;
        }
        else
        {
            {{{Result}}} = $listdates;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Calendar" Tooltip="Calendar object" CatalogName="Required" Type="Expression" Value="$CalendarObj" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Calendar" />
                                   <core:Property Name="DateFrom" Tooltip="Date from" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="DateTo" Tooltip="Date to" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Date&amp;Time" />
                                   <core:Property Name="EnableRange" Tooltip="Enable range boundaries" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return result" CatalogName="Output" Type="Variable" Value="$WeekendDays" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Data Table/List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Mail" Name="Mail" ToolboxGridType="List" AliasDescription="Send or receive emails using SMTP, POP3 and/or IMAP">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get POP3 Mail Messages" InternalName="GetPOP3MailMessages" FriendlyName="GetPOP3 Mail Messages" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="114">
                         <core:ToolboxItemSettings.Code><![CDATA[
  
function GetPOP3MailMessages{{{block_id}}}
{     
	try
	{
    {AddTypesMail}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $port     = {{{Port}}};  
    $Server   = {{{Server}}};
    $usessl   = ${{{UseSSL}}};
    $Login    = {{{Login}}};
    $PasswordObj = {{{Password}}}; 
    $Timeout  = {{{Timeout}}};   
    $TopCount = {{{TopCount}}};
        
     
        if($port.Length -eq 0 -or $port -eq "0")
        {
            if($usessl) {$port = "995";}
            else {$port = "110";}    
        }
            
        $Password = _checkpassword($PasswordObj);   
            
        $Timeout = $Timeout * 1000;
        
        $clsMail    = [MailHelpers.ClassMain]::new();
        $textresult = $clsMail.GetPop3Client($Server, [int]$port, $usessl, $Login, $Password, [int]$Timeout);
        if($textresult.Length -gt 0)
        {
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER: $textresult");
            return;
        } 

        $list = $clsMail.GetPop3Messages([int]$TopCount); 
        if($clsMail.IsError)
        {
            $__Error.Exception($clsMail.ErrorMessage);
            return;
        } 
        
        $clsMail.Dispose();
        
        {{{Result}}} = $list;       
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Port" Tooltip="Port. Defaul port 110/995" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Login" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in ms" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="UseSSL" Tooltip="" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TopCount" Tooltip="Top count messages" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return List&lt;MailMessage&gt;" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get IMAP Mail Messages" InternalName="GetIMAPMailMessages" FriendlyName="Get IMAP Mail Messages" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="96">
                         <core:ToolboxItemSettings.Code><![CDATA[
  
function GetIMAPMailMessages{{{block_id}}}
{     
	try
	{
    {AddTypesMail}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $port              = {{{Port}}};  
    $Server            = {{{Server}}};
    $usessl            = ${{{UseSSL}}};
    $Login             = {{{Login}}};
    $PasswordObj       = {{{Password}}}; 
    $Timeout           = {{{Timeout}}};   
    $TopCount          = {{{TopCount}}};
    $DeleteAfter       = ${{{DeleteAfter}}};
    $SetAsRead         = ${{{SetAsRead}}};
    $OnlyUnread        = ${{{OnlyUnread}}}; 
    $MailFolder        = {{{MailFolder}}}; 
    $OrderDate         = "{{{OrderDate}}}";
    $FilterSubject     = {{{FilterSubject}}}; 
    $FilterSubjectType = "{{{FilterSubjectType}}}";
    
        
     
        if($port.Length -eq 0 -or $port -eq "0")
        {
            if($usessl) {$port = "993";}
            else {$port = "143";}    
        }
           
        $Password = _checkpassword($PasswordObj);
           
        $Timeout = $Timeout * 1000;
                                                         
        $clsMail = [MailHelpers.ClassMain]::new();
        $textresult  = $clsMail.GetImapClient($Server, [int]$port, $usessl, $Login, $Password, [int]$Timeout);
        if($textresult.Length -gt 0)
        {
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER: $textresult");
            return;
        }      
        
        if($MailFolder.Length -eq 0){ $MailFolder = "Inbox"; }
           
        try
        { 
            $list = $clsMail.GetImapMessages($MailFolder, [int]$TopCount, $DeleteAfter, $SetAsRead, $OnlyUnread, $OrderDate, $FilterSubject, $FilterSubjectType); 
        }
        catch 
        {
            $list = $clsMail.GetImapMessages($MailFolder, [int]$TopCount, $DeleteAfter, $SetAsRead, $OnlyUnread);
        }
        
        if($clsMail.IsError)
        {
            $__Error.Exception($clsMail.ErrorMessage);
            return;
        } 
        
        $clsMail.Dispose();
        
        {{{Result}}} = $list;
        
   }
    catch 
    {      
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Port" Tooltip="Port. Defaul port 143/993" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Login" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in ms" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="UseSSL" Tooltip="" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TopCount" Tooltip="Top count messages" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DeleteAfter" Tooltip="Delete upon receipt" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="SetAsRead" Tooltip="Set as readed message" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OnlyUnread" Tooltip="Get only unread message" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OrderDate" Tooltip="Order Date" CatalogName="Main properties" Type="Enum" Value="NewestFirst" EnumVariants="NewestFirst;OldestFirst" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FilterSubject" Tooltip="FilterSubject" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterSubjectType" Tooltip="FilterSubjectType" CatalogName="Main properties" Type="Enum" Value="Contains" EnumVariants="Contains;Wildcard;Regex" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="MailFolder" Tooltip="Mail folder. Default 'Inbox'" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return List&lt;MailMessage&gt;" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get IMAP Folders" InternalName="GetIMAPFolders" FriendlyName="Get IMAP Folders" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
  
function GetIMAPFolders{{{block_id}}}
{     
	try
	{
    {AddTypesMail}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $port     = {{{Port}}};  
    $Server   = {{{Server}}};
    $usessl   = ${{{UseSSL}}};
    $Login    = {{{Login}}};
    $PasswordObj = {{{Password}}}; 
    $Timeout  = {{{Timeout}}};   
        
     
        if($port.Length -eq 0 -or $port -eq "0")
        {
            if($usessl) {$port = "993";}
            else {$port = "143";}    
        }
          
        $Password = _checkpassword($PasswordObj);
          
        $Timeout = $Timeout * 1000;
        
        $clsMail = [MailHelpers.ClassMain]::new();
        $textresult  = $clsMail.GetImapClient($Server, [int]$port, $usessl, $Login, $Password, [int]$Timeout);
        if($textresult.Length -gt 0)
        {
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER: $textresult");
            return;
        }              
        
        $list = $clsMail.GetImapFolders();
        if($clsMail.IsError)
        {
            $__Error.Exception($clsMail.ErrorMessage);
            return;
        } 
        
        $clsMail.Dispose();
        
        {{{Result}}} = $list;
        
   }
    catch 
    {      
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Port" Tooltip="Port. Defaul port 143/993" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Login" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in ms" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="UseSSL" Tooltip="" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return List&lt;string&gt;" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Move IMAP Mail Message" InternalName="MoveIMAPMailMessage" FriendlyName="Move IMAP Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="34">
                         <core:ToolboxItemSettings.Code><![CDATA[
  
function MoveIMAPMailMessage{{{block_id}}}
{     
    try
    {
    {AddTypesMail}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $ToFolder = {{{ToFolder}}};
    $Mail     = {{{Mail}}};
        
     
        if($Mail.Folder.Length -eq 0)
        {
            $__Error.Exception("ERRORCONST_NEEDUSEIMAP");
            return;
        } 
        
        $psResult = $Mail.MoveToFolder($ToFolder);
        if($__Error.CheckResult($psResult)) { return; }       
    }
    catch 
    {      
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Mail" Tooltip="Mail to save" CatalogName="Required" Type="Variable" Value="$Mail" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Mail" />
                                   <core:Property Name="ToFolder" Tooltip="Destination folder" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Send Mail Message" InternalName="SendMailMessage" FriendlyName="Send Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="121">
                         <core:ToolboxItemSettings.Code><![CDATA[
  
function SendMailMessage{{{block_id}}}
{           
	try
	{
    {AddTypesMail}
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $port        = {{{Port}}};  
    $Server      = {{{Server}}};
    $usessl      = ${{{UseSSL}}};
    $Login       = {{{Login}}};
    $PasswordObj = {{{Password}}}; 
    $MailFrom    = {{{MailFrom}}}; 
    $NameFrom    = {{{NameFrom}}};
    $MailTo      = {{{MailTo}}};   
    $Subject     = {{{Subject}}}; 
    $Body        = {{{Body}}};
    $Attachments = {{{Attachments}}}; 
    $Timeout     = {{{Timeout}}}; 
    $IsBodyHtml  = ${{{IsBodyHtml}}};  
    $MailToCC    = {{{MailToCC}}};
    $MailToBCC   = {{{MailToBCC}}};
        
        if($port.Length -eq 0 -or $port -eq "0")
        {
            if($usessl) {$port = "465";}
            else {$port = "25";}    
        }
        
        $Password = _checkpassword($PasswordObj);
 
        $Timeout = $Timeout * 1000;
        
        $clsMail = [MailHelpers.ClassMain]::new();
        $textresult = $clsMail.GetSmtpClient($Server, [int]$port, $usessl, $Login, $Password, [int]$Timeout);
        if($textresult.Length -gt 0)
        {
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER: $textresult");
            return;
        }         
        $client = $clsMail._SmtpClient;
        
        $message = [MimeKit.MimeMessage]::new();
        $message.From.Add([MimeKit.MailboxAddress]::new($NameFrom, $MailFrom));
        
        $MailToArr = $MailTo.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $message.To.Add([MimeKit.MailboxAddress]::Parse($MailToStr.Trim()));
            }
        }   
        
        $MailToArr = $MailToCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $message.Cc.Add([MimeKit.MailboxAddress]::Parse($MailToStr.Trim()));
            }
        }
         
        $MailToArr = $MailToBCC.Split(";");
        foreach($MailToStr in $MailToArr)
        {
            if(-not [string]::IsNullOrEmpty($MailToStr.Trim()))
            {
                $message.Bcc.Add([MimeKit.MailboxAddress]::Parse($MailToStr.Trim()));
            }
        }
        
        $message.Subject = $Subject.Trim();
        
        $builder = [MimeKit.BodyBuilder]::new();
        if($IsBodyHtml)
        {
            $builder.HtmlBody = $Body;
        }
        else 
        {
            $builder.TextBody = $Body;
        }
            
        $vartype = $Attachments.GetType().Name;
        if($vartype -eq "String")
        {     
            $file = ExpandConstFilePath $Attachments
            if([System.IO.File]::Exists($file))
            {                               
                $builder.Attachments.Add($file);  
            }
        } 
        elseif($vartype.Contains("List") -or $vartype.Contains("[]"))
        {
            foreach($file in $Attachments)
            {                            
                $file = $file.ToString();  
                $file = ExpandConstFilePath $file
                if([System.IO.File]::Exists($file))
                {          
                    $builder.Attachments.Add($file);
                }
            } 
        } 
        elseif($vartype -eq "Hashtable")
        {
            foreach($key in $Attachments.Keys)
            {  
                $file = $Attachments[$key]; 
                $file = $file.ToString();  
                $file = ExpandConstFilePath $file
                if([System.IO.File]::Exists($file))
                {          
                    $builder.Attachments.Add($file);
                }
            }
        } 
        
        $message.Body = $builder.ToMessageBody();

        $client.Send($message);

        $clsMail.Dispose();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="Server SMTP" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Port" Tooltip="Port. Defaul port 25/465" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Login" Tooltip="" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UseSSL" Tooltip="" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="MailFrom" Tooltip="" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NameFrom" Tooltip="" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailTo" Tooltip="Send mail to" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Subject" Tooltip="Subject to send" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Body" Tooltip="Body to send" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IsBodyHtml" Tooltip="Is Body Html" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Attachments" Tooltip="List filenames" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List/Hashtable" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in ms" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MailToCC" Tooltip="Send mail to" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MailToBCC" Tooltip="Send mail to" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Mail Message" InternalName="SaveMailMessage" FriendlyName="Save Mail Message" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="35">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveMailMessage{{{block_id}}}
{      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $Mail     = {{{Mail}}};
    $PathName = {{{PathName}}};
        
        $PathName = ExpandConstFilePath $PathName
        
        $_ = [System.IO.Directory]::CreateDirectory($PathName);
        
        $Mail.SaveMessage($PathName);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Mail" Tooltip="Mail to save" CatalogName="Required" Type="Variable" Value="$Mail" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Mail" />
                                   <core:Property Name="PathName" Tooltip="Path to save mail" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Attachment" InternalName="SaveAttachment" FriendlyName="Save Attachment" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="59">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveAttachment{{{block_id}}}
{      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $Mail     = {{{Mail}}};
    $PathName = {{{PathName}}}; 
    $Filter   = {{{Filter}}};
        
        $PathName = ExpandConstFilePath $PathName
        
        $_ = [System.IO.Directory]::CreateDirectory($PathName);
                           
        if([string]::IsNullOrEmpty($Filter))
        {
            $psResult = $Mail.SaveAttachments($PathName);
        }
        else
        {    
            $psResult = $Mail.SaveAttachmentsWithFilter($PathName, $Filter);
        }

        if($__Error.CheckResult($psResult)) { return; } 
        try
        {
            {{{Result}}} = $__BinFormatter.frombin($psResult.Result);
        }
        catch{} 
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Mail" Tooltip="Mail to save" CatalogName="Required" Type="Variable" Value="$Mail" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Mail" />
                                   <core:Property Name="PathName" Tooltip="Path to save mail" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Filter" Tooltip="Filter regex" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="List saved files" CatalogName="Output" Type="Variable" Value="$AttachmentFiles" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Save Attachment As File" InternalName="SaveAttachmentAs" FriendlyName="Save Attachment As File" PathStyle="{StaticResource RedRectangle}" PathStyle_DragThumb="{StaticResource RedRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Email.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveAttachmentAs{{{block_id}}}
{      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $Mail     = {{{Mail}}};   
    $Index    = {{{Index}}};
    $FileName = {{{FileName}}};
        
        $FileName = ExpandConstFilePath $FileName
                
        $psResult = $Mail.SaveAttachmentAs($FileName, $Index); 
        if($__Error.CheckResult($psResult)) { return; }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Mail" Tooltip="Mail to save" CatalogName="Required" Type="Variable" Value="$Mail" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Mail" />
                                   <core:Property Name="Index" Tooltip="Index attachment" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileName" Tooltip="Fale name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="PDFToolboxSettings" Name="PDF Automation" ToolboxGridType="List" AliasDescription="Work with PDF files: extract pages, images, texts, links, tables from PDF, create PDF files from images and text">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Render To Images" InternalName="RenderToImages" FriendlyName="Render To Images" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="59">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RenderToImages{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $filename     = {{{FileName}}};
    $exportpath   = {{{DestinationPath}}};
    $IsAnnotation = ${{{IsAnnotation}}};
        
        {AddTypesPDF}
                  
        $filename = ExpandConstFilePath $filename
        $exportpath = ExpandConstFilePath $exportpath
        
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        New-Item -ItemType Directory -Force -Path $exportpath
                 
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
        $document = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes);
        $index = 1;
        foreach($page in $document.Pages)
        {
            $fileexport = [System.IO.Path]::Combine($exportpath, [System.IO.Path]::GetFileNameWithoutExtension($filename) + "_" + $index.ToString("D3") + ".png");
            $width      = [int]($page.Width / 72.0 * 300);
            $height     = [int]($page.Height / 72.0 * 300);
            while($width -gt 8000 -or $height -gt 8000) { $width = $width / 1.5; $height = $height / 1.5; }
            $bitmap     = [Patagames.Pdf.Net.PdfBitmap]::new($width, $height, $true);
            $bitmap.FillRect(0, 0, $width, $height, [Patagames.Pdf.FS_COLOR]::White);
            $flags = [Patagames.Pdf.Enums.RenderFlags]::FPDF_LCD_TEXT + [Patagames.Pdf.Enums.RenderFlags]::FPDF_NO_CATCH; 
            if($IsAnnotation)
            {
                $flags += [Patagames.Pdf.Enums.RenderFlags]::FPDF_ANNOT;
            }     
            $rot = $page.Rotation - $page.OriginalRotation; 
            if ($rot -lt 0) { $rot = 4 + $rot; }
            $page.Render($bitmap, 0, 0, $width, $height, [Patagames.Pdf.Enums.PageRotate]$rot, $flags);
            $bitmap.Image.Save($fileexport, [System.Drawing.Imaging.ImageFormat]::Png);
            $bitmap.Dispose();
            $index++;
        }

        $document.Dispose();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DestinationPath" Tooltip="Destination path" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IsAnnotation" Tooltip="IsAnnotation" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Generate From Images" InternalName="GenerateFromImages" FriendlyName="Generate From Images" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="29">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GenerateFromImages{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $SourceImages = {{{SourceImages}}};
    $newfilename  = {{{NewFileName}}};
        
        {AddTypesPDF}
              
        $SourceImages = ExpandConstFilePath $SourceImages
        $newfilename = ExpandConstFilePath $newfilename
                                      
        if(-not [System.IO.Directory]::Exists($SourceImages))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $SourceImages");
            return;
        }
        
        $pageIndex = 0;
        $document = [Patagames.Pdf.Net.PdfDocument]::CreateNew();
        $files = [System.IO.Directory]::GetFiles($SourceImages, "*.*", [System.IO.SearchOption]::TopDirectoryOnly);
        foreach ($file in $files)
        {
            $image = [System.Drawing.Bitmap]::FromFile($file, $true);
            $pdfBitmap = [Patagames.Pdf.Net.PdfBitmap]::new($image.Width, $image.Height, $true);
            $g = [System.Drawing.Graphics]::FromImage($pdfBitmap.Image);
            $g.DrawImage($image, 0, 0, $image.Width, $image.Height); 
            $g.Dispose();
            $imageObject = [Patagames.Pdf.Net.PdfImageObject]::Create($document, $pdfBitmap, 0, 0);
            $size        = [Patagames.Pdf.FS_SIZEF]::new($pdfBitmap.Width * 96 / $image.HorizontalResolution, $pdfBitmap.Height * 96 / $image.VerticalResolution);

            $newpage = $document.Pages.InsertPageAt($pageIndex, $size);
            $newpage.PageObjects.Add($imageObject);
            $imageObject.Matrix = [Patagames.Pdf.FS_MATRIX]::new($size.Width, 0, 0, $size.Height, 0, 0); 
            $newpage.GenerateContent();
            $pageIndex++;

            $pdfBitmap.Dispose();
            $image.Dispose();
        }

        $document.Save($newfilename, [Patagames.Pdf.Enums.SaveFlags]::NoIncremental);
        $document.Dispose();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SourceImages" Tooltip="Path source images" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileName" Tooltip="Name generated file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Count Pages" InternalName="GetCountPages" FriendlyName="Get Count Pages" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="34">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetCountPages{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
    $filename = {{{FileName}}};
   
        {AddTypesPDF}
              
        $filename = ExpandConstFilePath $filename
        
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        } 
        
        $listsizes = New-Object Collections.Generic.List[System.Drawing.Size];
        
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
        $document = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes); 
        {{{Result}}} = $document.Pages.Count;
        
        foreach($page in $document.Pages)
        {
            $width  = [int]($page.Width / 72.0 * 300);
            $height = [int]($page.Height / 72.0 * 300);
            $size = [System.Drawing.Size]::new($width, $height);
            $listsizes.Add($size);
        }
        
        $document.Dispose();  
        
        {{{ListSizes}}} = $listsizes;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Return count pages" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ListSizes" Tooltip="List Sizes" CatalogName="Output" Type="Variable" Value="$ListSizes" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Split Document" InternalName="SplitDocument" FriendlyName="Split Document" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="40">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SplitDocument{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $filename    = {{{FileName}}};
    $newfilename = {{{NewFileName}}};
    $pages       = {{{Pages}}};
        
        {AddTypesPDF}
            
        $filename = ExpandConstFilePath $filename
        $newfilename = ExpandConstFilePath $newfilename 
        
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
          
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
        $document = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes);
         
        $newdocument = [Patagames.Pdf.Net.PdfDocument]::CreateNew();
        $newdocument.Pages.ImportPages($document, $pages, 0);
            
        $newdocument.Save($newfilename, [Patagames.Pdf.Enums.SaveFlags]::Incremental);
        
        $newdocument.Dispose();
        $document.Dispose();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileName" Tooltip="Name generated file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Pages" Tooltip="Pages range in format &quot;NN-NN&quot;. Example: &quot;1-5&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Merge Document" InternalName="MergeDocument" FriendlyName="Merge Document" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="27">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MergeDocument{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $filename1   = {{{FileName1}}}; 
    $filename2   = {{{FileName2}}};
    $newfilename = {{{NewFileName}}};
        
        {AddTypesPDF}
               
        $filename1 = ExpandConstFilePath $filename1
        $newfilename = ExpandConstFilePath $newfilename
        
        if(-not [System.IO.File]::Exists($filename1))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND1: $filename1");
            return;
        }  
        
        $listfilename2    = New-Object Collections.Generic.List[string];
        $vartype = $filename2.GetType().Name;      
        if($vartype.Contains("List") -or $vartype -eq "Object[]" -or $vartype -eq "String[]")
        {        
            foreach($s in $filename2)
            {       
                $listfilename2.Add($s);
            }
        }
        else
        {
            $listfilename2.Add($filename2);
        }
         
        
        $documentBytes1 = [System.IO.File]::ReadAllBytes($filename1);
        $document1 = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes1);
        
        foreach($file2 in $listfilename2)
        {
            $file2 = ExpandConstFilePath $file2
        
            if(-not [System.IO.File]::Exists($file2))
            {
                $__Error.Exception("ERRORCONST_PATHNOTFOUND1: $file2");
                return;
            }
            
            $documentBytes2 = [System.IO.File]::ReadAllBytes($file2);
            $document2 = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes2);
            
            $document1.Pages.ImportPages($document2, [string]::Format("1-{0}", $document2.Pages.Count), $document1.Pages.Count);
            
            $document2.Dispose();
        }
        
        $document1.Save($newfilename, [Patagames.Pdf.Enums.SaveFlags]::NoIncremental);
        $document1.Dispose();

    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName1" Tooltip="Name pdf file1" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName2" Tooltip="Name pdf file2" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFileName" Tooltip="Name generated file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Extract Images" InternalName="ExtractImages" FriendlyName="Extract Images" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="32">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ExtractImages{{{block_id}}}
{          
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $filename   = {{{FileName}}};
    $exportpath = {{{DestinationPath}}};
        
        {AddTypesPDF}
             
        $filename = ExpandConstFilePath $filename
        $exportpath = ExpandConstFilePath $exportpath
                                       
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        New-Item -ItemType Directory -Force -Path $exportpath
                      
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
        $document      = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes); 
        $index         = 0;
        
        foreach($page in $document.Pages)
        {
            foreach ($obj in $page.PageObjects)
            {         
                try
                {
                    $imageObject = [Patagames.Pdf.Net.PdfImageObject]$obj;
                    if($imageObject -eq $null) { continue; }

                    $fileexport = [System.IO.Path]::Combine($exportpath, "image_" + $index.ToString() + ".png");
                    $imageObject.Bitmap.Image.Save($fileexport, [System.Drawing.Imaging.ImageFormat]::Png);
                    $index++;
                }
                catch { }
            }
        } 
        $document.Dispose();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DestinationPath" Tooltip="Destination path" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Page Text" InternalName="GetPageText" FriendlyName="Get Page Text" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="64">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetPageText{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $filename        = {{{FileName}}};   
    $PageIndex       = {{{PageIndex}}}; 
    $AlternateMethod = ${{{AlternateMethod}}}; 
    $GetLinks        = ${{{GetLinks}}};  
    $GetForms        = ${{{GetForms}}};
        
        {AddTypesPDF}
           
        $filename = ExpandConstFilePath $filename 
        
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
              
        if($PageIndex -lt 1) {$PageIndex = 1;}
                        
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
             
        $resulttext  = "";        
        $resultlinks = @{};
        $resultforms = @{};
       
        if($AlternateMethod -or $GetLinks)
        {
            $document = [UglyToad.PdfPig.PdfDocument]::Open($documentBytes);
            $page     = $document.GetPage($PageIndex);    
                          
            if($GetLinks)
            {
                $hyperlinks = $page.GetHyperlinks();
                foreach($hyp in $hyperlinks)
                {
                    $resultlinks[$hyp.Text] = $hyp.Uri;
                } 
            }  

            if($AlternateMethod)
            {
                $listwords = $page.GetWords();
                foreach($word in $listwords)
                {
                    $resulttext += $word.Text;
                }
            }
    
            
            $document.Dispose();
        }
        
        if(-not $AlternateMethod)
        {          
            $forms = $null;
            
            if($GetForms)
            {
                $forms        = [Patagames.Pdf.Net.PdfForms]::new(); 
                $patadocument = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes, $forms); 
            }
            else
            {
                $patadocument   = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes); 
            }
       
            $patapage       = $patadocument.Pages[$PageIndex - 1];            
            $totalCharCount = $patapage.Text.CountChars;       
            $resulttext     = $patapage.Text.GetText(0, $totalCharCount); 
                 
            if($null -ne $forms -and $null -ne $forms.InterForm -and $null -ne $forms.InterForm.Fields)
            {
                foreach ($field in $forms.InterForm.Fields)
                {             
                    $resultforms[$field.FullName] = $field.Value;
                }
            } 
            
            $patapage.Dispose();
            $patadocument.Dispose();
        }
             
        {{{Result}}} = $resulttext;
        {{{ResultLinks}}} = $resultlinks; 
        {{{ResultForms}}} = $resultforms;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Index page" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AlternateMethod" Tooltip="AlternateMethod" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="GetLinks" Tooltip="GetLinks" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="GetForms" Tooltip="GetForms" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result text" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultLinks" Tooltip="Links from page" CatalogName="Output" Type="Variable" Value="$ResultLinks" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ResultForms" Tooltip="ResultForms" CatalogName="Output" Type="Variable" Value="$ResultForms" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Page Text OCR" InternalName="GetPageTextOCR" FriendlyName="Get Page Text OCR" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" Proportional="True" Version="59" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetPageTextOCR{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $filename = {{{FileName}}}; 
    $PageIndex = {{{PageIndex}}}
    
    $OCRTextSplitMethod  = {{{OCRTextSplitMethod}}};    
    $OCRTextInsertSymbol = {{{OCRTextInsertSymbol}}}; 
    $OCRTextCountSymbols = {{{OCRTextCountSymbols}}};
    $OCRTextScale        = {{{OCRTextScale}}}; 
    
    $IsAnnotation = ${{{IsAnnotation}}};
        
       {AddTypesPDF}
       
        $filename = ExpandConstFilePath $filename
                     
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        $PageIndex--;
        if($PageIndex -lt 0) {$PageIndex = 0;}
                  
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
        $document  = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes); 
        if($PageIndex -ge $document.Pages.Count) {$PageIndex = $document.Pages.Count - 1;} 
        $page      = $document.Pages[$PageIndex]; 
        $tempname = [System.IO.Path]::GetRandomFileName();                                           
        $tempfile  = [System.IO.Path]::Combine($__WorkPath, $tempname);
        $fileimage  = [System.IO.Path]::ChangeExtension($tempfile, ".tmp");        
            
        $width  = [int]($page.Width / 72.0 * 300);
        $height = [int]($page.Height / 72.0 * 300);
        while($width -gt 8000 -or $height -gt 8000) { $width = $width / 1.5; $height = $height / 1.5; }
        $bitmap = [Patagames.Pdf.Net.PdfBitmap]::new($width, $height, $true);
        $bitmap.FillRect(0, 0, $width, $height, [Patagames.Pdf.FS_COLOR]::White);  
        $flags = [Patagames.Pdf.Enums.RenderFlags]::FPDF_LCD_TEXT + [Patagames.Pdf.Enums.RenderFlags]::FPDF_NO_CATCH; 
        if($IsAnnotation)
        {
            $flags += [Patagames.Pdf.Enums.RenderFlags]::FPDF_ANNOT;
        }               
        $rot = $page.Rotation - $page.OriginalRotation; 
        if ($rot -lt 0) { $rot = 4 + $rot; }
        $page.Render($bitmap, 0, 0, $width, $height, [Patagames.Pdf.Enums.PageRotate]$rot, $flags);
        $bmp = [System.Drawing.Bitmap]$bitmap.Image; 
        $bmp.SetResolution(300, 300);
        $bmp.Save($fileimage, [System.Drawing.Imaging.ImageFormat]::Png);
        $bmp.Dispose();
        $bitmap.Dispose();               
        $page.Dispose();
        $document.Dispose();
       
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>OCRImage</InternalName><InternalType>Desktop</InternalType><FileName>$fileimage</FileName><OCRTextLanguages>{{{OCRTextLanguages}}}</OCRTextLanguages><OCRTextModule>{{{OCRTextModule}}}</OCRTextModule><OCRTextSplitMethod>$OCRTextSplitMethod</OCRTextSplitMethod><OCRTextInsertSymbol>$OCRTextInsertSymbol</OCRTextInsertSymbol><OCRTextCountSymbols>$OCRTextCountSymbols</OCRTextCountSymbols><OCRTextScale>$OCRTextScale</OCRTextScale><AutoRotatedPage>{{{AutoRotatedPage}}}</AutoRotatedPage></block>");                        
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }   
            
        $page.Dispose();
        $document.Dispose();

        {{{Result}}} = $psResult.Result;    
        
        [System.IO.File]::Delete($fileimage);  
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                    
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Index page" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextLanguages" Tooltip="Languages to recognize" CatalogName="Main properties" Type="Enum" Value="eng+rus" EnumVariants="eng+rus;eng;rus" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextModule" Tooltip="Module to recognize" CatalogName="Main properties" Type="Enum" Value="Tesseract OCR" EnumVariants="Tesseract OCR;Yandex Vision;Microsoft OCR;Abbyy OCR;FineReader" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="OCRTextSplitMethod" Tooltip="Split method" CatalogName="Main properties" Type="String" Value="0,2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OCRTextInsertSymbol" Tooltip="Insert symbol" CatalogName="Main properties" Type="String" Value="20" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextCountSymbols" Tooltip="Count symbols" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OCRTextScale" Tooltip="Scale image" CatalogName="Main properties" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoRotatedPage" Tooltip="AutoRotatedPage" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsAnnotation" Tooltip="IsAnnotation" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into (string)" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Extract Table" InternalName="PDFExtractTables" FriendlyName="Extract Table" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="30">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PDFExtractTables{{{block_id}}}
{          
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileName   = {{{FileName}}};
        
        $FileName = ExpandConstFilePath $FileName
        
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        } 
        
        {{{Result}}} = $null;
             
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>PDFExtractTables</InternalName><ProcessID>$ProcessID</ProcessID><InternalType>Desktop</InternalType><FileName>$FileName</FileName><PageIndex>{{{PageIndex}}}</PageIndex><TableIndex>{{{TableIndex}}}</TableIndex></block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Index page" CatalogName="Required" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="TableIndex" Tooltip="Index table of page" CatalogName="Required" Type="Expression" Value="1" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result table" CatalogName="Output" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Page As Image" InternalName="GetPageAsImage" FriendlyName="Get Page As Image" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="36">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetPageAsImage{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
        $filename      = {{{FileName}}};
        $pageindex     = {{{PageIndex}}}; 
        $filenameimage = {{{FileNameImage}}}; 
        $ImageDPIObj   = {{{ImageDPI}}};
        
        {AddTypesPDF} 
        
        $ImageDPI = _toint($ImageDPIObj); 
        if($ImageDPI -le 0) { $ImageDPI = 300; }
                  
        $filename = ExpandConstFilePath $filename
        $filenameimage = ExpandConstFilePath $filenameimage
        
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }  
        
        if([string]::IsNullOrEmpty($filenameimage))
        {             
            $tempname      = [System.IO.Path]::GetRandomFileName();                                           
            $tempfile      = [System.IO.Path]::Combine($__WorkPath, $tempname);
            $filenameimage = [System.IO.Path]::ChangeExtension($tempfile, ".png");
        }
        else
        {
            [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($filenameimage));
        } 
        
        [System.IO.File]::Delete($filenameimage);
        
        
        $index = 0;
        [int]::TryParse($pageindex.ToString(), [ref] $index);
        
        $index--;  
        $documentBytes = [System.IO.File]::ReadAllBytes($filename);
        $document = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes);
        $count    = $document.Pages.Count;
        if($index -lt 0) { $index = 0; }
        if($index -ge $count) { $index = $count - 1; }
        
        $page = $document.Pages[$index];
        
        $width  = [int]($page.Width / 72.0 * $ImageDPI);
        $height = [int]($page.Height / 72.0 * $ImageDPI);
        while($width -gt 8000 -or $height -gt 8000) { $width = $width / 1.5; $height = $height / 1.5; }
        $bitmap = [Patagames.Pdf.Net.PdfBitmap]::new($width, $height, $true);
        $bitmap.FillRect(0, 0, $width, $height, [Patagames.Pdf.FS_COLOR]::White); 
        $rot = $page.Rotation - $page.OriginalRotation; 
        if ($rot -lt 0) { $rot = 4 + $rot; }
        $page.Render($bitmap, 0, 0, $width, $height, [Patagames.Pdf.Enums.PageRotate]$rot, [Patagames.Pdf.Enums.RenderFlags]::FPDF_LCD_TEXT);
        $bmp = [System.Drawing.Bitmap]$bitmap.Image; 
        $bmp.SetResolution($ImageDPI, $ImageDPI);
        $bmp.Save($filenameimage, [System.Drawing.Imaging.ImageFormat]::Png);
        $bmp.Dispose();
        $bitmap.Dispose();               
        $page.Dispose();
        $document.Dispose(); 
        
        {{{FileNameResult}}} = $filenameimage;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Page index" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileNameImage" Tooltip="File name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ImageDPI" Tooltip="ImageDPI" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FileNameResult" Tooltip="File name result" CatalogName="Output" Type="Variable" Value="$FileImage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Add Image To Page" InternalName="AddImageToPage" FriendlyName="Add Image To Page" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AddImageToPage{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        $FileNameImage    = {{{FileNameImage}}};
        $FileName         = {{{FileName}}};
        $PageIndexObj     = {{{PageIndex}}};  
        $PositionXObj     = {{{PositionX}}};
        $PositionYObj     = {{{PositionY}}}; 
        $PositionAsCenter = ${{{PositionAsCenter}}};  
        $FileNameSave     = {{{FileNameSave}}};
        
        $FileName = ExpandConstFilePath $FileName
        $FileNameImage = ExpandConstFilePath $FileNameImage
        
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }  
        
        if(-not [System.IO.File]::Exists($FileNameImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileNameImage");
            return;
        } 
        
        if([string]::IsNullOrEmpty($FileNameSave))
        {
            $FileNameSave = $FileName;
        }
        
        [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($FileNameSave));
        
        $pageindex = _toint($PageIndexObj);
        
        $imagebytes = [System.IO.File]::ReadAllBytes($FileNameImage); 
        $documentBytes = [System.IO.File]::ReadAllBytes($FileName);

        $outputPdfStream = [System.IO.MemoryStream]::new();
        $reader          = [iTextSharp.text.pdf.PdfReader]::new($documentBytes);
        $stamper         = [iTextSharp.text.pdf.PdfStamper]::new($reader, $outputPdfStream);

        $pdfContentByte = $stamper.GetOverContent($pageindex);

        if($null -ne $pdfContentByte)
        {
            $pagesize = $reader.GetPageSize($pageindex);
            $pagerotation = $reader.GetPageRotation($pageindex);
            $image = [iTextSharp.text.Image]::GetInstance($imagebytes);
            $X = _toint($PositionXObj);
            $Y = _toint($PositionYObj);
            $X = $X / 300 * 72.0;
            $Y = $Y / 300 * 72.0;
            $Width = $image.Width / 300 * 72.0;
            $Height = $image.Height / 300 * 72.0;

            if($PositionAsCenter)
            {
                $X -= $Width / 2;
                $Y -= $Height / 2;
            }

            if ($pagerotation -eq 0 -or $pagerotation -eq 180)
            {
                $Y = $pagesize.Height - $Y - $Height;
            }
            else
            {
                $Y = $pagesize.Width - $Y - $Height;
            }

            $image.SetAbsolutePosition($X, $Y);
            $image.ScaleAbsolute($Width, $Height);

            $pdfContentByte.AddImage($image);
        }
        
        $stamper.Dispose();
        $reader.Dispose();
        
        [System.IO.File]::Delete($FileNameSave); 
        [System.IO.File]::WriteAllBytes($FileNameSave, $outputPdfStream.ToArray());
        $outputPdfStream.Dispose();
        
        {{{FileNameResult}}} = $FileNameSave;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileNameImage" Tooltip="Name image file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Page index" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PositionX" Tooltip="PositionX" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PositionY" Tooltip="PositionY" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PositionAsCenter" Tooltip="PositionAsCenter" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FileNameSave" Tooltip="FileNameSave" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameResult" Tooltip="File name result" CatalogName="Output" Type="Variable" Value="$NewFilePdf" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rotate Pages" InternalName="RotatePages" FriendlyName="Rotate Pages" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RotatePages{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $FileName     = {{{FileName}}};
    $PageIndexObj = {{{PageIndex}}}; 
    $RotateType   = "{{{RotateType}}}"; 
    $AngleObj     = {{{Angle}}};
    $FileNameSave = {{{FileNameSave}}};
        
        {AddTypesPDF}
                  
        $FileName = ExpandConstFilePath $FileName
        
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }  
                
        if([string]::IsNullOrEmpty($FileNameSave))
        {
            $FileNameSave = $FileName;
        }
        
        [System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($FileNameSave));
                   
        $angle = _toint($AngleObj);
        
        $pageindex = _toint($PageIndexObj);
        $pageindex--; 
               
        $documentBytes = [System.IO.File]::ReadAllBytes($FileName);
        $document      = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes);
        $count         = $document.Pages.Count;  
        if($pageindex -ge $count) { $pageindex = $count - 1; }
        
        if($pageindex -ge 0)
        {
            $page       = $document.Pages[$pageindex];
            $pagewidth  = $page.Width;
            $pageheight = $page.Height; 

            $angleRotation = [int]$page.Rotation;
            if($RotateType -eq "Angle")
            {
                if($Angle -eq 90) { $angleRotation+=1; }
                elseif($Angle -eq 180) { $angleRotation+=2; }
                elseif($Angle -eq 270) { $angleRotation+=3; }
            }
            elseif($RotateType -eq "Portrait")
            {
                if($pagewidth -gt $pageheight) { $angleRotation+=1; }
            }
            elseif($RotateType -eq "Landscape")
            {
                if($pageheight -gt $pagewidth) { $angleRotation+=1; }
            }
            if($angleRotation -gt 3) { $angleRotation -= 3; }

            $page.Rotation = $angleRotation;
            $page.Dispose();
        }
        else            
        {
            for($ind = 0; $ind -lt $count; $ind++)
            {
                $page       = $document.Pages[$ind];
                $pagewidth  = $page.Width;
                $pageheight = $page.Height; 
    
                $angleRotation = [int]$page.Rotation;
                if($RotateType -eq "Angle")
                {
                    if($Angle -eq 90) { $angleRotation+=1; }
                    elseif($Angle -eq 180) { $angleRotation+=2; }
                    elseif($Angle -eq 270) { $angleRotation+=3; }
                }
                elseif($RotateType -eq "Portrait")
                {
                    if($pagewidth -gt $pageheight) { $angleRotation+=1; }
                }
                elseif($RotateType -eq "Landscape")
                {
                    if($pageheight -gt $pagewidth) { $angleRotation+=1; }
                }
                if($angleRotation -gt 3) { $angleRotation -= 3; }
    
                $page.Rotation = $angleRotation;
                $page.Dispose();            
            }
        }

        [System.IO.File]::Delete($FileNameSave);
        $document.Save($FileNameSave, [Patagames.Pdf.Enums.SaveFlags]::NoIncremental);
        $document.Dispose();  
        
        {{{FileNameResult}}} = $FileNameSave;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Page index" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="RotateType" Tooltip="RotateType" CatalogName="Main properties" Type="Enum" Value="Angle" EnumVariants="Angle;Portrait;Landscape" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Angle" Tooltip="Angle" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileNameSave" Tooltip="FileNameSave" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameResult" Tooltip="File name result" CatalogName="Output" Type="Variable" Value="$NewFilePdf" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Images From Page" InternalName="RemoveImagesFromPage" FriendlyName="Remove Images From Page" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_PDF.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveImagesFromPage{{{block_id}}}
{
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
        $FileName     = {{{FileName}}};    
        $PageIndexObj = {{{PageIndex}}};
        $FileNameSave = {{{FileNameSave}}};
                          
        $FileName = ExpandConstFilePath $FileName
        $FileNameImage = ExpandConstFilePath $FileNameImage
        
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }  
                
        if([string]::IsNullOrEmpty($FileNameSave))
        {
            $FileNameSave = $FileName;
        } 
        else
        {
            $FileNameSave = ExpandConstFilePath $FileNameSave
        }
        
        #[System.IO.Directory]::CreateDirectory([System.IO.Path]::GetDirectoryName($FileNameSave));
        
        $errmessage = [PSHelpers.PdfUtils]::RemoveImagesFromPage($FileName, $FileNameSave, $PageIndexObj);        
        if(-not [string]::IsNullOrEmpty($errmessage))
        {
            $__Error.Exception($errmessage);
            return;
        }
        
        {{{FileNameResult}}} = $FileNameSave;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="Name pdf file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PageIndex" Tooltip="Page index" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileNameSave" Tooltip="FileNameSave" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameResult" Tooltip="File name result" CatalogName="Output" Type="Variable" Value="$NewFilePdf" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="StringToolboxSettings" Name="String Automation" ToolboxGridType="List" AliasDescription="Manipulate text strings: search, replace, trim, compare, etc">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Replace String" InternalName="ReplaceString" FriendlyName="Replace String" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="54">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReplaceString{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
                 
    $InString = {{{InString}}};
    $OldValue = {{{OldValue}}};
    $NewValue = {{{NewValue}}};  
    $UseRegex = ${{{UseRegex}}};   
    $NewLine  = ${{{NewLine}}};
        
        if($null -eq $OldValue) { $OldValue = ""; }  
                                
        if($NewLine)
        {                    
            $chararr = [Environment]::NewLine.ToCharArray();
            foreach($ch in $chararr)
            {
                if($null -ne $NewValue) 
                {
                    $InString = $InString.Replace($ch.ToString(), $NewValue);
                }
                else 
                {
                    $InString = $InString.Replace($ch.ToString(), "");
                }
                $NewValue = $null;
            } 
            {{{Result}}} = $InString;
        }
        else
        {
            if($UseRegex)
            {
                {{{Result}}} = $InString -Replace $OldValue, $NewValue 
            }
            else
            {
                {{{Result}}} = $InString.Replace($OldValue, $NewValue); 
            }
        }
    }    
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OldValue" Tooltip="Old value" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewLine" Tooltip="Use new line as separator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="NewValue" Tooltip="New value" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UseRegex" Tooltip="Use regex" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Contains String" InternalName="ContainsString" FriendlyName="Contains String" PathStyle="{StaticResource OrangeVividRhombus}" PathStyle_DragThumb="{StaticResource OrangeVividRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="159">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ContainsString{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                     
    $InString      = {{{InString}}};
    $StartIndex    = {{{StartIndex}}};
    $SubString     = {{{SubString}}}; 
    $WholeWord     = ${{{WholeWord}}};
    $CheckType     = "{{{CheckType}}}"; 
    $ReverseCheck  = ${{{ReverseCheck}}}; 
    $UseWildcard   = ${{{UseWildcard}}};
    $CaseSensitive = ${{{CaseSensitive}}};
    
        $str1 = $InString.ToString(); 
        if(!$CaseSensitive) { $str1 = $str1.ToLower(); }
        
        $liststr = New-Object Collections.Generic.List[string];
        
        $vartype = $SubString.GetType().Name;
        
        if($vartype.Contains("List") -or $vartype -eq "Object[]" -or $vartype -eq "String[]")
        {        
            foreach($s in $SubString)
            {       
                $_str = $s.ToString();
                if($_str.Length -gt 0) { $liststr.Add($_str); }
            }
        }
        else
        {
            $_str = $SubString.ToString(); 
            if($_str.Length -gt 0) { $liststr.Add($_str); }
        }                 
            
        $countsuccess = 0;
        $issuccess    = $true;        
        if($UseWildcard)
        {  
            $cls = [MainHelpers.ClassWildcard]::new();
            
            foreach($ssstr2 in $liststr)
            {           
                $str2 = $ssstr2;
                if(!$CaseSensitive) { $str2 = $str2.ToLower(); }
                $result = $cls.IndexOf($str1, $str2, $StartIndex, $WholeWord, $ReverseCheck, $CaseSensitive);
                          
                {{{FindIndex}}} = $result.FindIndex; 
                {{{FindString}}} = $result.FindString; 
                
                if($result.Success)
                {               
                    $countsuccess++;
                    if($CheckType -eq "IncludeOne")
                    {
                        break;
                    }
                    if($CheckType -eq "Exclude")
                    {
                        $issuccess = $false;
                        break;
                    }
                }
                else
                {   
                    if($CheckType -eq "ExcludeOne")
                    {
                        break;
                    }
                    if($CheckType -eq "Include")
                    {
                        $issuccess = $false;
                        break;
                    }
                } 
            }
        }
        else
        {      
            $_stindex = 0;
            [int]::TryParse([string]$StartIndex, [ref] $_stindex);
            if($_stindex -gt $str1.Length) { $_stindex = $str1.Length - 1; }
            foreach($ssstr2 in $liststr)
            {           
                $str2 = $ssstr2;
                if(!$CaseSensitive) { $str2 = $str2.ToLower(); }
                $result = $str1.IndexOf($str2, $_stindex);
                          
                {{{FindIndex}}} = $result; 
                {{{FindString}}} = $str2; 
                
                if($result -ge 0)
                {               
                    $countsuccess++;
                    if($CheckType -eq "IncludeOne")
                    {
                        break;
                    }
                    if($CheckType -eq "Exclude")
                    {
                        $issuccess = $false;
                        break;
                    }
                }
                else
                {   
                    if($CheckType -eq "ExcludeOne")
                    {
                        break;
                    }
                    if($CheckType -eq "Include")
                    {
                        $issuccess = $false;
                        break;
                    }
                } 
            }
        } 
              
        if($CheckType -eq "IncludeOne" -and $countsuccess -eq 0)
        {
            $issuccess = $false;
        }
        
        $__Error.Detailed("Status: $issuccess");

        if($issuccess)
        {
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else 
        {
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SubString" Tooltip="New value" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/List" />
                                   <core:Property Name="StartIndex" Tooltip="Start index for search" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WholeWord" Tooltip="Whole word" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CheckType" Caption="" Tooltip="Check type" CatalogName="Main properties" Type="Enum" Value="Include" EnumVariants="Include;Exclude;IncludeOne;ExcludeOne" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReverseCheck" Tooltip="Reverse check" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="UseWildcard" Tooltip="Use Wildcard" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CaseSensitive" Tooltip="Case sensitive" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FindIndex" Tooltip="Index finded string" CatalogName="Output" Type="Variable" Value="$FindIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FindString" Tooltip="Fiinded string" CatalogName="Output" Type="Variable" Value="$FindString" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get SubString" InternalName="GetSubString" FriendlyName="Get SubString" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="36">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetSubString{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                  
    $InString     = {{{InString}}};
    $StartIndex   = {{{StartIndex}}};
    $CountSymbols = {{{CountSymbols}}};
        
        $substring = "";
        while($true)
        {
            if($StartIndex -lt 0)
            {
                $StartIndex += $InString.Length;                
            }
            
            if($StartIndex -lt 0) { $StartIndex = 0; }
            
            if($StartIndex -ge $InString.Length)
            {
                $substring = "";
                break;
            } 
                        
            if($CountSymbols -eq 0 -or $CountSymbols -eq "")
            { 
                $substring = $InString.Substring($StartIndex);
            } 
            else
            {        
                try 
                {
                    $substring = $InString.Substring($StartIndex, $CountSymbols);
                }
                catch {}
            }
            break;
        }
        {{{Result}}} = $substring;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="StartIndex" Tooltip="Start index" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CountSymbols" Tooltip="Count symbols" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Length String" InternalName="GetLengthString" FriendlyName="Get Length String" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetLengthString{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InString = {{{InString}}};
    
        $InString = $InString.ToString();
        {{{Result}}} = $InString.Length;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Split String" InternalName="SplitString" FriendlyName="Split String" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="92">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SplitString{{{block_id}}}
{           
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
                  
    $InString  = {{{InString}}};
    $separator = {{{Separator}}};
    
        if(${{{NewLine}}}) { $separator = [Environment]::NewLine.ToCharArray(); } 
           
        $InString = $InString.ToString();
        
        $resultlist = New-Object Collections.Generic.List[string];
        
        if(${{{RemoveEmpty}}})
        {
            $templist = $InString.Split($separator, [System.StringSplitOptions]::RemoveEmptyEntries);
        }
        else
        {
            $templist = $InString.Split($separator);
        }  
        
        if(${{{Trim}}}) 
        {
            for($i = 0; $i -lt $templist.Length; $i++)
            {             
                $str = $templist[$i].Trim();
                if(${{{RemoveEmpty}}})
                {
                    if([string]::IsNullOrEmpty($str)) { continue; }
                }
                $resultlist.Add($str);
            }    
        } 
        else 
        {
            $resultlist.AddRange($templist); 
        } 
        
        {{{Result}}} = $resultlist;
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Separator" Tooltip="Separator for split" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewLine" Tooltip="Use new line as separator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="RemoveEmpty" Tooltip="Remove empty values" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Trim" Tooltip="Trim all string" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result list string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Join String" InternalName="JoinString" FriendlyName="Join String" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function JoinString{{{block_id}}}
{           
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $list      = {{{InList}}};
    $separator = {{{Separator}}};
    
        if(${{{NewLine}}}) { $separator = [Environment]::NewLine; } 
        
        {{{Result}}} = [string]::Join($separator, $list);
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InList" Tooltip="List strings" CatalogName="Required" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Separator" Tooltip="Separator for split" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewLine" Tooltip="Use new line as separator" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Trim String" InternalName="TrimString" FriendlyName="Trim String" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="15">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TrimString{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
          
    $value = {{{InString}}};
    
        if($null -eq $value) { $value = ""; }
        {{{Result}}} = $value.Trim();
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result list string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get List Regex" InternalName="GetListRegex" FriendlyName="Get List Regex" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="65">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetListRegex{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                        
    $InString        = {{{InString}}};
    $Pattern         = {{{Pattern}}}; 
    $OperationParams = "{{{OperationParams}}}";
    $TimeOut         = {{{TimeOut}}};
    
        {{{Result}}} = New-Object Collections.Generic.List[string]; 
        {{{Groups}}} = New-Object Collections.Generic.List[string];    
        $resultlist = New-Object Collections.Generic.List[object];
        
        $options = [System.Text.RegularExpressions.RegexOptions]::None; 
        
        if($OperationParams.Contains("IgnoreCase")) { $options += [System.Text.RegularExpressions.RegexOptions]::IgnoreCase; }
        if($OperationParams.Contains("Multiline")) { $options += [System.Text.RegularExpressions.RegexOptions]::Multiline; }
        if($OperationParams.Contains("ExplicitCapture")) { $options += [System.Text.RegularExpressions.RegexOptions]::ExplicitCapture; }
        if($OperationParams.Contains("Compiled")) { $options += [System.Text.RegularExpressions.RegexOptions]::Compiled; }
        if($OperationParams.Contains("Singleline")) { $options += [System.Text.RegularExpressions.RegexOptions]::Singleline; }
        if($OperationParams.Contains("IgnorePatternWhitespace")) { $options += [System.Text.RegularExpressions.RegexOptions]::IgnorePatternWhitespace; }
        if($OperationParams.Contains("RightToLeft")) { $options += [System.Text.RegularExpressions.RegexOptions]::RightToLeft; }
        
        $timespan = [System.TimeSpan]::FromSeconds($TimeOut);
        $regex    = [System.Text.RegularExpressions.Regex]::new($Pattern, $options, $timespan);
        
        $m = $regex.Match($InString);
        while($m.Success)
        {
            try
            {
                {{{Result}}}.Add($m.Value);    
                $newdict = New-Object 'System.Collections.Generic.Dictionary[[string],[string]]'
                for($i = 1; $i -lt $m.Groups.Count; $i++)
                {
                    {{{Groups}}}.Add($m.Groups[$i].Value); 
                    $groupname = $m.Groups[$i].Name;
                    if(-not [string]::IsNullOrEmpty($groupname))
                    {                
                        $newdict[$groupname] = $m.Groups[$i].Value;
                    }                  
                } 
                $resultlist.Add($newdict);
            }
            catch {}
            $m = $m.NextMatch(); 
        } 
        
        {{{GroupsDict}}} = $resultlist;
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Pattern" Tooltip="Pattern for regex" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OperationParams" Tooltip="" CatalogName="Main properties" Type="EnumMulti" Value="IgnoreCase" EnumVariants="IgnoreCase;Multiline;ExplicitCapture;Compiled;Singleline;IgnorePatternWhitespace;RightToLeft" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TimeOut" Tooltip="Time wait" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="1" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result list string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="Groups" Tooltip="Groups" CatalogName="Output" Type="Variable" Value="$Groups" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="GroupsDict" Tooltip="GroupsDict" CatalogName="Output" Type="Variable" Value="$GroupsList" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Text Between" InternalName="FindTextBetween" FriendlyName="Find Text Between" PathStyle="{StaticResource OrangeVividRhombus}" PathStyle_DragThumb="{StaticResource OrangeVividRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="140">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindTextBetween{{{block_id}}}
{   
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
     
    $text       = {{{String}}};
    $text1      = {{{FindLeft}}};
    $text2      = {{{FindRight}}};
    $StartIndex = {{{StartIndex}}}; 
    $WholeWord     = ${{{WholeWord}}}; 
    $UseWildcard   = ${{{UseWildcard}}};
    $CaseSensitive = ${{{CaseSensitive}}};
    
        $ind1 = 0;
        $ind2 = 0;
       
        $_ = [int]::TryParse($StartIndex, [ref] $ind1); 
        
        if($null -eq $text1) { $text1 = ""; }
        if($null -eq $text2) { $text2 = ""; }
           
        $strcomp = [System.StringComparison]::OrdinalIgnoreCase;
        if($CaseSensitive) { $strcomp = [System.StringComparison]::Ordinal; } 
        
        if($UseWildcard)
        {
            $cls = [MainHelpers.ClassWildcard]::new();
            
            $resultcls = $cls.IndexOf($text, $text1, $ind1, $WholeWord, $false, $CaseSensitive);
            if($resultcls.Success)
            {
                $ind1 = $resultcls.FindIndex;
                $ind1 += $text1.Length;
                
                $ind2 = $text.Length;
                if ($text2.Length -eq 0)
                {
                    $indRN = $text.IndexOf("`r", $ind1, $strcomp);  
                    if($indRN  -lt 0) 
                    {
                        $indRN = $text.IndexOf("`n", $ind1, $strcomp);
                    } 
                    if ($indRN -ge 0) { $ind2 = $indRN; }
                }
                else
                {       
                    $ind2 = 0;
                    $resultcls = $cls.IndexOf($text, $text2, $ind1, $WholeWord, $false, $CaseSensitive);
                    if($resultcls.Success)
                    {
                        $ind2 = $resultcls.FindIndex;
                    }
                }
            }               
        }
        else
        {            
            while($true)
            {
                if ($text1.Length -gt 0)
                {
                    $ind1 = $text.IndexOf($text1, $ind1, $strcomp);
                    if ($ind1 -lt 0) { break; }
                    $ind1 += $text1.Length;
                }
                $ind2 = $text.Length; 
                if ($text2.Length -eq 0)
                {
                    $indRN = $text.IndexOf("`r", $ind1, $strcomp);  
                    if($indRN  -lt 0) 
                    {
                        $indRN = $text.IndexOf("`n", $ind1, $strcomp);
                    } 
                    if ($indRN -ge 0) { $ind2 = $indRN; }
                }
                else
                {
                    $ind2 = $text.IndexOf($text2, $ind1, $strcomp);
                    if ($ind2 -lt 0) { break; }
                }
                break;
            }
        }

        if($ind1 -ge 0 -and $ind2 -gt $ind1)
        {
            {{{FoundStartIndex}}} = $ind1;
            {{{FoundEndIndex}}} = $ind1 + ($ind2 - $ind1);
            {{{FoundString}}} = $text.SubString($ind1, $ind2 - $ind1); 
            {{{FoundLength}}} = $ind2 - $ind1;
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        } 
        else
        {
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
                                  
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="String" Tooltip="&quot;Input string&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FindLeft" Tooltip="Left part" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FindRight" Tooltip="Right part" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="StartIndex" Tooltip="Start index for search" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WholeWord" Tooltip="Whole word" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="UseWildcard" Tooltip="Use Wildcard" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CaseSensitive" Tooltip="Case sensitive" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FoundStartIndex" Tooltip="Found Start Index" CatalogName="Output" Type="Variable" Value="$FoundStartIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FoundEndIndex" Tooltip="Found End Index" CatalogName="Output" Type="Variable" Value="$FoundEndIndex" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FoundString" Tooltip="Found String" CatalogName="Output" Type="Variable" Value="$FoundString" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FoundLength" Tooltip="Found Length" CatalogName="Output" Type="Variable" Value="$FoundLength" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Full Replace Text With Variable" InternalName="FullReplaceText" FriendlyName="Full Replace Text " PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" Proportional="True" Version="36">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FullReplaceText{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $InString    = {{{InString}}};
    $InHashtable = {{{InHashtable}}};
    
        
         if($InHashtable)
         {
            foreach($key in $InHashtable.Keys)
            {          
                $varval      = $InHashtable[$key];
                $findtext    = "%" + $key + "%";
                $replacetext = $varval.ToString();                        
                
                $InString = $InString.Replace($findtext, $replacetext); 
            }
        }
        else
        {
            foreach($varname in $script:__VarsList.Keys)
            {          
                $variable = $script:__VarsList[$varname]; 
                $vartype  = $variable.GetType().Name;             
                      
                if($vartype -ne "String") #as string
                {
                    continue;
                }
                                  
                $varval      = Get-Variable $varname -ValueOnly;
                $findtext    = "%" + $varname + "%";
                $replacetext = $varval.ToString();                        
                
                $InString = $InString.Replace($findtext, $replacetext);
            } 
        }
        
        {{{Result}}} = $InString;
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InHashtable" Tooltip="Hashtable for replace" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="1" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="1" MaxOutConnections="0" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Change Case" InternalName="ChangeCase" FriendlyName="Change Case" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="2">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ChangeCase{{{block_id}}}
{                
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
              
        $InString = {{{InString}}};
        $Mode     = "{{{Mode}}}";
    
        if($Mode -eq "ToLower")
        {
            {{{Result}}} = $InString.ToLower();
        }
        elseif($Mode -eq "ToUpper")
        {
            {{{Result}}} = $InString.ToUpper();
        }
        elseif($Mode -eq "ToTitleCase")
        {
            {{{Result}}} = [CultureInfo]::GetCultureInfo("ru-RU").TextInfo.ToTitleCase($InString.ToLower());
        }
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Mode" Tooltip="Mode" CatalogName="Main properties" Type="Enum" Value="ToLower" EnumVariants="ToLower;ToUpper;ToTitleCase" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="HtmlEncode" InternalName="HtmlEncode" FriendlyName="HtmlEncode" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="3">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HtmlDecode{{{block_id}}}
{                
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
              
    $InString = {{{InString}}};
    
        {{{Result}}} = [System.Web.HttpUtility]::HtmlEncode($InString);
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="HtmlDecode" InternalName="HtmlDecode" FriendlyName="HtmlDecode" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="16">
                         <core:ToolboxItemSettings.Code><![CDATA[
function HtmlDecode{{{block_id}}}
{                
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $InString = {{{InString}}};
    
        {{{Result}}} = [System.Web.HttpUtility]::HtmlDecode($InString);
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="To Base64" InternalName="ToBase64" FriendlyName="To Base64" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="22">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ToBase64{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
    $InString = {{{InString}}};
    
        {{{Result}}} = [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($InString));
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="in string to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Reslt string as Base64" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="From Base64" InternalName="FromBase64" FriendlyName="From Base64" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FromBase64{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $InString = {{{InString}}};
    
        {{{Result}}} = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($InString));
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="in string to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Reslt string as from Base64" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="URL Encode" InternalName="URLEncode" FriendlyName="URL Encode" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function URLEncode{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InString = {{{InString}}};
    
        {{{Result}}} = [System.Web.HttpUtility]::UrlEncode($InString);
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="in string to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Reslt string as encode" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="URL Decode" InternalName="URLDecode" FriendlyName="URL Decode" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function URLDecode{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $InString = {{{InString}}};
    
        {{{Result}}} = [System.Web.HttpUtility]::UrlDecode($InString);
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="in string to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Reslt string as decode" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Is String Empty" InternalName="IsStringEmpty" FriendlyName="Is String Empty" PathStyle="{StaticResource OrangeVividRhombus}" PathStyle_DragThumb="{StaticResource OrangeVividRhombus_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="17">
                         <core:ToolboxItemSettings.Code><![CDATA[
function IsStringEmpty{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                     
    $InString = {{{InString}}};
    
        if([string]::IsNullOrEmpty($InString))
        {
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {   
            $InString = $InString.ToString();
            if($InString.Trim().Length -eq 0)
            {
                $__Error.Jump("{{{connector-Yes}}}");
                return;
            }
            else
            {
                $__Error.Jump("{{{connector-No}}}");
                return;
            }
        }
              
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorDirection" Caption="Направление выхода" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Right&quot; - направо; &quot;Bottom&quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &quot;Если ошибка&quot; (например блок &quot;Условие&quot;). Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Right;Bottom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Compare Similarity" InternalName="CompareSimilarity" FriendlyName="Compare Similarity" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="20" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CompareSimilarity{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                     
    $InString1 = {{{InString1}}};
    $InString2 = {{{InString2}}};
    
        $InString1 = $InString1.ToLower(); 
        $InString2 = $InString2.ToLower();
        
        
        if(!$script:__LevenshteinDistance) { $script:__LevenshteinDistance = [Levenshtein.ClassLevenshteinDistance]::new(); }
           
        $count = 0;
        
        {{{Percent}}} = $script:__LevenshteinDistance.CalculateSimilarityWithCount($InString1, $InString2, [ref] $count);
        {{{SymCount}}} = $count;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString1" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InString2" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Output" Type="Variable" Value="$Percent" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SymCount" Tooltip="SymCount" CatalogName="Output" Type="Variable" Value="$SymCount" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Transform String" InternalName="TransformString" FriendlyName="Transform String" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="60" ProtoName="Ignore">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TransformString{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $InString = {{{InString}}};
    $ThisType = "{{{ThisType}}}";
        
        $result = "";
            
        $InString = [string]$InString;  
        
        $isdot = $false;
        
        if($ThisType.Length -eq 0) { $ThisType = "Double"; }
        
        if($ThisType -eq "Int")
        {
            for($i = 0; $i -lt $InString.Length; $i++)
            {
                if([char]::IsDigit($InString[$i]))
                {
                    $result+=$InString[$i];
                }
            }    
            if($result.Length -eq 0)
            {
                $__Error.Exception("No numbers found in the string");
                return;
            }
            {{{Result}}} = [int]$result; 
            if ($InString.Length -gt 0 -and $InString[0] -eq '-')
            { {{{Result}}} = -{{{Result}}}; }  
        }
        elseif($ThisType -eq "Float" -or $ThisType -eq "Double")
        {
            for($i = 0; $i -lt $InString.Length; $i++)
            {
                $cc = $InString[$i];
                if([char]::IsDigit($cc))
                {
                    $result+=$cc;
                }
                elseif($cc -eq "." -or $cc -eq ",")
                {       
                    if($isdot) { $result = $result.Replace(".", ""); }
                    $result+="."; 
                    $isdot = $true;
                }
            }     
            if($result.Length -eq 0)
            {
                $__Error.Exception("No numbers found in the string");
                return;
            }
            {{{Result}}} = [double]$result; 
            if ($InString.Length -gt 0 -and $InString[0] -eq '-')
            { {{{Result}}} = -{{{Result}}}; } 
        } 
        elseif($ThisType -eq "Money")
        {
            for($i = 0; $i -lt $InString.Length; $i++)
            {
                $cc = $InString[$i];
                if([char]::IsDigit($cc))
                {
                    $result+=$cc;
                }
                elseif($cc -eq "." -or $cc -eq ",")
                {        
                    if($isdot) { $result = $result.Replace(".", ""); }
                    $result+=".";
                    $isdot = $true;
                }
            }     
            if($result.Length -eq 0)
            {
                $__Error.Exception("No numbers found in the string");
                return;
            }
            {{{Result}}} = [decimal]$result; 
            if ($InString.Length -gt 0 -and $InString[0] -eq '-')
            { {{{Result}}} = -{{{Result}}}; } 
        }
        elseif($ThisType -eq "LetterOrDigit")
        {
            for($i = 0; $i -lt $InString.Length; $i++)
            {
                $cc = $InString[$i];
                if([char]::IsLetterOrDigit($cc))
                {
                    $result+=$cc;
                }
            } 
            {{{Result}}} = $result;
        } 
        elseif($ThisType -eq "Letter")
        {
            for($i = 0; $i -lt $InString.Length; $i++)
            {
                $cc = $InString[$i];
                if([char]::IsLetter($cc))
                {
                    $result+=$cc;
                }
            } 
            {{{Result}}} = $result;
        } 
        elseif($ThisType -eq "Digit")
        {
            for($i = 0; $i -lt $InString.Length; $i++)
            {
                $cc = $InString[$i];
                if([char]::IsDigit($cc))
                {
                    $result+=$cc;
                }
            } 
            {{{Result}}} = $result;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="In string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ThisType" Tooltip="Type transform" CatalogName="Main properties" Type="Enum" Value="Int" EnumVariants="Int;Double;Money;LetterOrDigit;Letter;Digit" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="To Json" InternalName="ToJson" FriendlyName="To Json" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ToJson{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
    $InObject = {{{InObject}}}; 
    $NumDepth = {{{NumDepth}}}; 
    $AlternateMethod = ${{{AlternateMethod}}}; 
    
        if($AlternateMethod)
        {
            {{{Result}}} = [Newtonsoft.Json.JsonConvert]::SerializeObject($InString);
        }
        else
        {
            $_depth = 2;
            [int]::TryParse($NumDepth, [ref] $_depth);
            
            {{{Result}}} = ConvertTo-Json $InObject -Depth $_depth    
        }
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InObject" Tooltip="Object to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Any Datatype" />
                                   <core:Property Name="NumDepth" Tooltip="Number depth" CatalogName="Main properties" Type="Expression" Value="2" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AlternateMethod" Tooltip="Alternate method" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Reslt json string from object" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="From Json" InternalName="FromJson" FriendlyName="From Json" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FromJson{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $InString        = {{{InString}}}; 
    $AlternateMethod = ${{{AlternateMethod}}};  
    $AsDictionary    = ${{{AsDictionary}}};
    
        if($AlternateMethod)
        {
            {{{Result}}} = [Newtonsoft.Json.JsonConvert]::DeserializeObject($InString);
        }    
        elseif($AsDictionary)
        {          
            $hashtable = @{};
            (ConvertFrom-Json $InString).psobject.properties | Foreach { $hashtable[$_.Name] = $_.Value }
            {{{Result}}} = $hashtable;
        }
        else
        {
            {{{Result}}} = ConvertFrom-Json $InString
        }
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="in string to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AlternateMethod" Tooltip="Alternate method" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AsDictionary" Tooltip="AsDictionary" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Reslt object from json string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Object" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="To XML" InternalName="ToXML" FriendlyName="To XML" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ToXML{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
    $InObject = {{{InObject}}};
    
        $typename = $InObject.GetType().Name; 
        
        if($typename -eq "XmlDocument")
        {
            {{{Result}}} = $InObject.OuterXml;
        }
        else
        {
            {{{Result}}} = ConvertTo-Xml $InObject
        }
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InObject" Tooltip="Object to xml string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="AnyDataType" />
                                   <core:Property Name="Result" Tooltip="Return xml string from document" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="From XML" InternalName="FromXML" FriendlyName="From XML" PathStyle="{StaticResource OrangeVividRectangle}" PathStyle_DragThumb="{StaticResource OrangeVividRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FromXML{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    $InString = {{{InString}}};
    
        [System.Xml.XmlDocument]$xmldoc = new-object System.Xml.XmlDocument;
        if ($InString.Length -gt 0) { $xmldoc.LoadXml($InString); }
        {{{Result}}} = $xmldoc;
    }
    catch 
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InString" Tooltip="in string to convert" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Reslt XmlDocument from string" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="FTP" Name="FTP" ToolboxGridType="List" AliasDescription="User FTP to transfer files">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="List FTP Folders" InternalName="ListFTPFolders" FriendlyName="List FTP Folders" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="98">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListFTPFolders{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    [uri]$url = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}};   
    $Filter      = {{{Filter}}};
    
        $Credentials = $null;
        
		$FTPPassword = _checkpassword($FTPPasswordObj);
		
		
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

    
        $ftp             = [system.net.webrequest]::createdefault($url);
        $ftp.method      = [system.net.webrequestmethods+ftp]::listdirectory;
        $ftp.Credentials = $Credentials;
        $res             = $ftp.getresponse();
        $str             = $res.getresponsestream();
        $rdr             = new-object system.io.streamreader($str,'ascii');
        $list            = ($rdr.readtoend()).split();
        
        $listresult = New-Object System.Collections.Generic.List[string];
        foreach ($item in $list) 
        {
            if($item.Length -eq 0) { continue; }
            if($item -eq ".") { continue; }
            if($item -eq "..") { continue; }
            if ($Filter.Length -eq 0 -or ($item -match $Filter)) 
            {
                $listresult.Add(($item.Split("/") | Select -Last 1));
            }
        }            
        
        $res.Close();
        {{{Result}}} = $listresult;
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to directory. eq.: &quot;ftp://server.url/folder&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Filter" Tooltip="Select files match with this filter. (eq.: &quot;txt&quot;)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result list folders" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get FTP filesize" InternalName="GetFTPfilesize" FriendlyName="Get FTP filesize" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="78">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetFTPfilesize{{{block_id}}}
{ 
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
               
    [uri]$url = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}}; 
    
        $Credentials     = $null;

		$FTPPassword = _checkpassword($FTPPasswordObj);
		
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }
    
        $ftp             = [System.Net.WebRequest]::create($url);
        $ftp.method      = [System.Net.WebRequestMethods+Ftp]::GetFileSize;
        $ftp.Credentials = $Credentials;
        $res             = $ftp.getresponse();
        $SizeByte        = ($res.StatusDescription -split " ")[1].Trim();
        $res.Close()    
        
        if ("{{{TypeOutput}}}" -eq "Byte") { $value = $SizeByte }  
        elseif ("{{{TypeOutput}}}" -eq "Kb") { $value = [math]::Round(($SizeByte / 1024),2) }
        elseif ("{{{TypeOutput}}}" -eq "Mb") { $value = [math]::Round(($SizeByte / 1048576),2) }
        elseif ("{{{TypeOutput}}}" -eq "Gb") { $value = [math]::Round(($SizeByte / 1073741824),2) }
        else { $value = [math]::Round(($SizeByte / 1099511627776),2) }  
        
        {{{Result}}} = $value;
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to file. eq.: &quot;ftp://server.url/file.ext&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeOutput" Tooltip="Byte,Kb,Gb,Tb" CatalogName="Main properties" Type="Enum" Value="Kb" EnumVariants="Byte;Kb;Mb;Gb;Tb" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Output" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Download FTP Folder" InternalName="DownloadFTPFolder" FriendlyName="Download FTP Folder" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="153">
                         <core:ToolboxItemSettings.Code><![CDATA[function DownloadFTPFolder{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
          
    [string]$FTPURL = {{{URL}}};
    $FTPUsername     = {{{Username}}};
    $FTPPasswordObj     = {{{Password}}};   
    $LocalDir        = {{{LocalDir}}};
    $OverwriteExists = ${{{Overwrite}}};  
    $Not404          = 0;
     
        $LocalDir = ExpandConstFilePath $LocalDir
    
		$FTPPassword = _checkpassword($FTPPasswordObj);
	
        $Credentials     = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }
    
        if ($FTPURL[$FTPURL.length - 1] -eq '/') { $FTPURL = $FTPURL.Remove($FTPURL.Length - 1)};
        if ($FTPURL -notlike "ftp://*") { $FTPURL = "ftp://" + $FTPURL };

        $Queue = New-Object system.collections.Queue;
        $Queue.Enqueue($FTPURL);

        do 
        {
            try
            {
                ListFTPFolder{{{block_id}}} -FtpUrl $Queue.Dequeue() -credentials $Credentials | ForEach-Object { 
                    $Not404 += 1
                    if ($_.file) 
                    {
                        $localFile = $Null = Join-Path $LocalDir $_.url.Replace("$FTPURL/","") ;
                        $CurrentFolder = $Null = (($localfile.Split("\") | Select -SkipLast 1) -join '\') 
                        
                        if ($localfile.Split("\").Count -gt 1)
                        {
                            $WebClient = [System.Net.WebClient]::new() 
                            $WebClient.Credentials = $Credentials
                            $WebClient.AllowReadStreamBuffering = $true
                            $WebClient.AllowWriteStreamBuffering = $true

                            if (-not (Test-Path $CurrentFolder)) { New-Item -Path $CurrentFolder -ItemType Directory }
                            if ((Test-Path $localFile) -and $OverwriteExists)
                            {           
                                $WebClient.DownloadFileAsync($_.Url, $localFile)
                            }  
                            elseif (-not (Test-Path $localFile))
                            {
                                $WebClient.DownloadFile($_.Url, $localFile)
                            }   
                            $WebClient.Dispose()
                            $WebClient = $Null
                        }
                    }
                    else { $Queue.Enqueue($_.url) }
                }
            }
            catch
            {
                $__Error.ExceptionCatch($_);
                return;
            }
        }
        while ($Queue.Count -gt 0)         
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }
            
    if ($Not404 -lt 1)
    {     
        $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER");
        return;
    }         
    $__Error.Quit();
}

function ListFTPFolder{{{block_id}}}
{
    param(
            [parameter(Mandatory=$True,ValueFromPipeline=$True,Position=0)]$FtpUrl,
            [parameter(Mandatory=$False,ValueFromPipeline=$True,Position=1)]$credentials
    )
    try
    {
        $request = [Net.WebRequest]::Create($FtpUrl -as [string])
        $request.Method = [System.Net.WebRequestMethods+FTP]::ListDirectoryDetails
        if ($credentials) { $request.Credentials = $credentials }
        $response = $request.GetResponse()
        $reader = New-Object IO.StreamReader $response.GetResponseStream() 
        [array]$arr = ($reader.ReadToEnd()).Trim().Split("`n")
        $reader.Close()
        $response.Close()
        [array]$Out = @()
        foreach ($item in $arr) 
        {
            $null, [string]$IsDirectory, [string]$Flag, [string]$Link, [string]$UserName, [string]$GroupName, [string]$Size, [string]$Date, [string]$Name = `
            [regex]::split($item,'^([d-])([rwxt-]{9})\s+(\d{1,})\s+([.@A-Za-z0-9-]+)\s+([A-Za-z0-9-]+)\s+(\d{1,})\s+(\w+\s+\d{1,2}\s+\d{1,2}:?\d{2})\s+(.+?)\s?$',"SingleLine,IgnoreCase,IgnorePatternWhitespace")
            if (($Name -ne ". ") -and ($Name -ne ".. "))
            {
                if ($IsDirectory -eq "-") { $Out += @{url = ($FtpUrl.trim() + "/$Name"); file = $true }}
                else { $Out += @{url = ($FtpUrl.trim() + "/$Name"); file = $false }}
            }
        }
        return $Out
    }
    catch { }
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to directory. eq.: &quot;ftp://server.url/folder&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LocalDir" Tooltip="Local download directory " CatalogName="Required" Type="Expression" Value="Local folder path (ex:&quot;C:\LocalDir&quot;)" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Overwrite" Tooltip="overwrite file is exists" CatalogName="Main properties" Type="Bool" Value="true" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Download FTP File" InternalName="DownloadFTPFile" FriendlyName="Download FTP File" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="33">
                         <core:ToolboxItemSettings.Code><![CDATA[function DownloadFTPFile{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
        
    [string]$FTPURL = {{{URL}}};
    $FTPUsername     = {{{Username}}};
    $FTPPasswordObj     = {{{Password}}};   
    $LocalDir        = {{{LocalDir}}}; 
    $OverwriteExists = ${{{Overwrite}}};
     

        $LocalDir = ExpandConstFilePath $LocalDir
        
		$FTPPassword = _checkpassword($FTPPasswordObj);
		
        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

        
        if ($FTPURL[$FTPURL.length - 1] -eq '/') { $FTPURL = $FTPURL.Remove($FTPURL.Length - 1)};
        if ($FTPURL -notlike "ftp://*") { $FTPURL = "ftp://" + $FTPURL };
                           
        try
        {
            if (-not (Test-Path $LocalDir)) { New-Item -Path $LocalDir -ItemType Directory }
            $localFile = $Null = Join-Path $LocalDir ($FTPURL -split ("/") | Select -Last 1)
            if ($localfile.Split("\").Count -gt 1)
            {
                $WebClient = [System.Net.WebClient]::new() 
                $WebClient.Credentials = $Credentials
                $WebClient.AllowReadStreamBuffering = $true
                $WebClient.AllowWriteStreamBuffering = $true
                
                if ((Test-Path $localFile) -and $OverwriteExists)       
                {           
                    $WebClient.DownloadFileAsync($FTPURL, $localFile)
                }  
                elseif (-not (Test-Path $localFile))    
                {
                    $WebClient.DownloadFile($FTPURL, $localFile)
                }   
                $WebClient.Dispose()        
                $WebClient = $Null      
            }
        }
        catch
        {     
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER");
            return;
        } 
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to file. eq.: &quot;ftp://server.url/file.ext&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LocalDir" Tooltip="Local folder path (ex:&quot;C:\LocalDir&quot;)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Overwrite" Tooltip="overwrite file is exists" CatalogName="Main properties" Type="Bool" Value="true" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Upload FTP File" InternalName="UploadFTPFile" FriendlyName="Upload FTP File" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="32">
                         <core:ToolboxItemSettings.Code><![CDATA[function UploadFTPFile{{{block_id}}}
{             
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    [string]$RemoteDirectory = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}};   
    $LocalFile   = {{{LocalFile}}}; 
    

        $LocalFile = ExpandConstFilePath $LocalFile 
        
        if(-not [System.IO.File]::Exists($LocalFile))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $LocalFile");
            return;
        }
		
		$FTPPassword = _checkpassword($FTPPasswordObj);
        
        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

        
        if ($RemoteDirectory[$RemoteDirectory.length - 1] -eq '/') 
        {
            $RemoteDirectory = $RemoteDirectory.Remove($RemoteDirectory.Length - 1)
        }
        if ($RemoteDirectory -notlike "ftp://*") 
        {
            $RemoteDirectory = ("ftp://" + $RemoteDirectory);
        }

        try
        {
            if (-not (Test-Path $LocalFile)) 
            {
                doError -ErrorMessage "Local file not found. Check file exists, and try again." -NextBlockID $OnErrorBlockID; 
                return
            }
            $WebClient = [System.Net.WebClient]::new()      
            $WebClient.Credentials = $Credentials 
            $webclient.UploadFileAsync([uri]("$RemoteDirectory/" + (Get-Item $LocalFile).Name), $LocalFile)
            $WebClient.Dispose()        
            $WebClient = $Null      
        }
        catch
        {     
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER");
            return;
        } 
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="LocalFile" Tooltip="Local file to upload" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="URL" Tooltip="Full url to directory. eq.: &quot;ftp://server.url/folder&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Upload FTP Folder" InternalName="UploadFTPFolder" FriendlyName="Upload FTP Folder" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="31">
                         <core:ToolboxItemSettings.Code><![CDATA[function UploadFTPDirectory{{{block_id}}}
{                              
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    [string]$RemoteDirectory = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}};   
    $LocalFolder = {{{LocalFolder}}}; 

       
        $LocalFolder = ExpandConstFilePath $LocalFolder
             
        if(-not [System.IO.Directory]::Exists($LocalFolder))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $LocalFolder");
            return;
        }
        
		$FTPPassword = _checkpassword($FTPPasswordObj);
		
        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

        
        if ($RemoteDirectory[$RemoteDirectory.length - 1] -eq '/') 
        {
            $RemoteDirectory = $RemoteDirectory.Remove($RemoteDirectory.Length - 1)
        }
        if ($RemoteDirectory -notlike "ftp://*") 
        {
            $RemoteDirectory = ("ftp://" + $RemoteDirectory);
        }
        $Queue = New-Object System.Collections.Queue
        Get-ChildItem $LocalFolder -Recurse | ForEach-Object { $Queue.Enqueue($_.FullName)}

        try
        {
            do
            {
                $localFile = $Null = (Get-Item $Queue.Dequeue()).fullname
                $remoteFile = $Null = ("$RemoteDirectory/" + $localFile.Replace("$LocalFolder\","")).Replace('\','/')
                if ((Get-Item $localFile).Attributes -ne "Directory")
                {
                    Write-Host $remoteFile -ForegroundColor DarkCyan
                    $WebClient = [System.Net.WebClient]::new()      
                    $WebClient.Credentials = $Credentials 
                    $webclient.UploadFile([uri]($remoteFile), $localFile)
                    $WebClient.Dispose()        
                    $WebClient = $Null      
                }
                else
                {
                    try
                    {
                        $ftprequest = [System.Net.FtpWebRequest]::Create($remoteFile);
                        $ftprequest.Method = [System.Net.WebRequestMethods+Ftp]::MakeDirectory
                        $ftprequest.UseBinary = $true
                        $ftprequest.Credentials = $Credentials 
                        $response = $ftprequest.GetResponse();
                        Write-Host $response.StatusDescription
                    }
                    catch 
                    { 
                        
                    }
                    $response.Close();
                }
            }
            while ($Queue.Count -gt 0)
        }
        catch
        {     
            $__Error.Exception("ERRORCONST_ERRORCONNECTSERVER");
            return;
        } 
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="LocalFolder" Tooltip="Local folder path (ex:&quot;C:\LocalDir&quot;)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="URL" Tooltip="Full url to directory. eq.: &quot;ftp://server.url/folder&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create FTP Folder" InternalName="CreateFTPFolder" FriendlyName="Create FTP Folder" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="41">
                         <core:ToolboxItemSettings.Code><![CDATA[function CreateFTPDirectory{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    [string]$RemoteDirectory = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}};   
               
		$FTPPassword = _checkpassword($FTPPasswordObj);
	
        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

    
        if ($RemoteDirectory[$RemoteDirectory.length - 1] -eq '/') 
        {
            $RemoteDirectory = $RemoteDirectory.Remove($RemoteDirectory.Length - 1)
        }
        if ($RemoteDirectory -notlike "ftp://*") 
        {
            $RemoteDirectory = ("ftp://" + $RemoteDirectory);
        }
        $server = ($RemoteDirectory.Split("/") | Select -First 3) -join "/"
        $RemoteDirectory.replace("ftp://","").split("/") | Select -Skip 1 | ForEach-Object { $dir = $null = ($server + "/" + $_)
                try 
                {
                    $ftprequest = [System.Net.FtpWebRequest]::Create($dir);
                    $ftprequest.Method = [System.Net.WebRequestMethods+Ftp]::MakeDirectory
                    $ftprequest.UseBinary = $true
                    $ftprequest.Credentials = $Credentials 
                    $response = $ftprequest.GetResponse();
                    #{{{Result}}} = $dir + ' ' + ($response.StatusDescription -split '"' | Select -Last 1).trim() + "`n"
                }
                catch
                {   
                    doError -ErrorMessage $_.Exception.Message -NextBlockID $OnErrorBlockID; 
                    return;
                }
                $response.Close();
                $server = $server + "/" + $_
            }   
    }
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to directory. eq.: &quot;ftp://server.url/NewFolder&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove FTP file" InternalName="RemoveFTPfile" FriendlyName="Remove FTP file" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="34">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveFTPfile{{{block_id}}}
{                      
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    [string]$RemoteFile = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}};  
      
		$FTPPassword = _checkpassword($FTPPasswordObj);
	
        if ($RemoteFile[$RemoteFile.length - 1] -eq '/') { $RemoteFile = $RemoteFile.Remove($RemoteFile.Length - 1)};
        if ($RemoteFile -notlike "ftp://*") { $RemoteFile = "ftp://" + $RemoteFile };

        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

        $deleteRequest = [Net.WebRequest]::Create($RemoteFile)
        $deleteRequest.Credentials = $credentials
        $deleteRequest.Method = [System.Net.WebRequestMethods+Ftp]::DeleteFile
        $deleteRequest.GetResponse() | Out-Null  
    } 
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    } 
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to file. eq.: &quot;ftp://server.url/file.ext&quot;" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Ftp Folder" InternalName="RemoveFtpFolder" FriendlyName="Remove Ftp Folder" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="60">
                         <core:ToolboxItemSettings.Code><![CDATA[function RemoveFtpFolder{{{block_id}}}
{                
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    [string]$RemoteDirectory = {{{URL}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}};   
                                              
        if ($RemoteDirectory[$RemoteDirectory.length - 1] -ne '/') { $RemoteDirectory = $RemoteDirectory + '/' };
        if ($RemoteDirectory -notlike "ftp://*") { $RemoteDirectory = "ftp://" + $RemoteDirectory };

		$FTPPassword = _checkpassword($FTPPasswordObj);

        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

        $_ = func{{{block_id}}} -url $RemoteDirectory -Credentials $Credentials
    } 
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    } 
        
    $__Error.Quit();
}
  
function func{{{block_id}}}
{
    param(
            [Parameter(Mandatory=$True,ValueFromPipeline=$True,Position=0)]$url,
            [Parameter(Mandatory=$false,ValueFromPipeline=$True,Position=1)]$Credentials
    )
    
    try
    {
        $listRequest = [Net.WebRequest]::Create($url)
        $listRequest.Method = [System.Net.WebRequestMethods+Ftp]::ListDirectoryDetails
        $listRequest.Credentials = $Credentials

        $lines = New-Object System.Collections.ArrayList

        $listResponse = $listRequest.GetResponse()
        $listStream = $listResponse.GetResponseStream()
        $listReader = New-Object System.IO.StreamReader ($listStream, [System.Text.Encoding]::Default)
        while (!$listReader.EndOfStream)
        {
            $line = $listReader.ReadLine()
            $lines.Add($line) | Out-Null
        }
        $listReader.Dispose()
        $listStream.Dispose()
        $listResponse.Dispose()

        foreach ($line in $lines)
        {
            $tokens = $line.Split(" ", 9, [StringSplitOptions]::RemoveEmptyEntries)
            $name = $tokens[8]
            $permissions = $tokens[0]

            $fileUrl = ($url + $name)

            if (($name -ne ".") -and ($name -ne ".."))
            {
                if ($permissions[0] -eq 'd')
                {
                    {{{block_id}}} -url ($fileUrl + "/") -Credentials $credentials
                }
                else
                {
                    $deleteRequest = [Net.WebRequest]::Create($fileUrl)
                    $deleteRequest.Credentials = $credentials
                    $deleteRequest.Method = [System.Net.WebRequestMethods+Ftp]::DeleteFile
                    $deleteRequest.GetResponse()
                }
            }
        }

        $deleteRequest = [Net.WebRequest]::Create($url)
        $deleteRequest.Credentials = $Credentials
        $deleteRequest.Method = [System.Net.WebRequestMethods+Ftp]::RemoveDirectory
        $deleteRequest.GetResponse()
        return ("Папка " + ($url + $name) + " удалена")
    }
    catch
    {
        return $_
    }        
}
            ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to directory. eq.: &quot;ftp://server.url/folder&quot;" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rename FTP file/folder" InternalName="RenameFTPitem" FriendlyName="Rename FTP file/folder" PathStyle="{StaticResource BlueModerateRectangle}" PathStyle_DragThumb="{StaticResource BlueModerateRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FTP.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="72">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RenameFTPitem{{{block_id}}}
{             
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    [string]$RemoteFile = {{{URL}}};
    [string]$NewFilename = {{{NewFilename}}};
    $FTPUsername = {{{Username}}};
    $FTPPasswordObj = {{{Password}}}; 
                                              
        if ($RemoteFile[$RemoteFile.length - 1] -eq '/') { $RemoteFile = $RemoteFile.Remove($RemoteFile.Length - 1)};
        if ($RemoteFile -notlike "ftp://*") { $RemoteFile = "ftp://" + $RemoteFile };    
        $ParentPath = ($RemoteFile.Split("/") | Select -SkipLast 1) -join "/"

		$FTPPassword = _checkpassword($FTPPasswordObj);
		
        $Credentials = $null;   
        $FTPUsername_str = [string]$FTPUsername;
        $FTPPassword_str = [string]$FTPPassword;
        
        if ($FTPUsername_str.Length -gt 0 -or $FTPPassword_str.Length -gt 0)
        {
            $Credentials = New-Object System.Net.NetworkCredential($FTPUsername_str,$FTPPassword_str);
        }

        $renameRequest = [Net.WebRequest]::Create($RemoteFile)
        $renameRequest.Credentials = $credentials
        $renameRequest.Method = [System.Net.WebRequestMethods+Ftp]::Rename  
        $renameRequest.RenameTo = $NewFilename
        $renameRequest.GetResponse() | Out-Null  
    } 
    catch
    {
        $__Error.ExceptionCatch($_);
        return;
    } 
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Full url to file or folder. eq.: &quot;ftp://server.url/file.ext&quot;" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewFilename" Tooltip="New name (ex.:&quot;newFilename.ext&quot;)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Default empty (anonymous)" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Process/Service" Name="Process/Service" ToolboxGridType="List" AliasDescription="Search or kill Windows Processes, start or stop Windows Services">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="List Processes" InternalName="ListProcesses" FriendlyName="List Processes" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="89">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListProcesses{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $FilterName =  {{{FilterName}}};
    
        
        $hash = @{}

        foreach($process in [System.Diagnostics.Process]::GetProcesses())
        {
            if($FilterName.Length -eq 0 -OR $process.ProcessName.ToLower().Contains($FilterName.ToLower()))
            {
                $hash.Add($process.Id, $process.ProcessName); 
            }   
        } 
  
        {{{Result}}} = $hash;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }  
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FilterName" Tooltip="Filter contains process name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Hashtable - pid of process name" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Start Process" InternalName="StartProcess" FriendlyName="Start Process" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="78">
                         <core:ToolboxItemSettings.Code><![CDATA[
function StartProcess{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FilePath         = {{{FilePath}}};
    $ArgumentList     = {{{ArgumentList}}};
    $WorkingDirectory = {{{WorkingDirectory}}};
    $WindowStyle      = "{{{WindowStyle}}}"; 
    $WaitForExit      = ${{{WaitForExit}}};
        
        $FilePath = ExpandConstFilePath $FilePath $true
               
        if(-not [System.IO.File]::Exists($FilePath))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FilePath");
            return;
        }
        
        {{{ProcessID}}} = 0;
        $startinfo = [System.Diagnostics.ProcessStartInfo]::new();
        $startinfo.FileName = $FilePath;
        $startinfo.Arguments = $ArgumentList;
        $startinfo.WorkingDirectory = $WorkingDirectory;
        $startinfo.WindowStyle = [System.Diagnostics.ProcessWindowStyle]$WindowStyle;

        $proc = [System.Diagnostics.Process]::Start($startinfo);
        {{{ProcessID}}} = [MainHelpers.ProcessID]::CreatePID($proc.Id).Serialize(); 
        
        if($WaitForExit)
        {
            $proc.WaitForExit(60*60*1000); 
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FilePath" Tooltip="Fullname executing file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ArgumentList" Tooltip="Argument List" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WorkingDirectory" Tooltip="Working Directory" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowStyle" Tooltip="Window Style" CatalogName="Main properties" Type="Enum" Value="Normal" EnumVariants="Hidden;Maximized;Minimized;Normal" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitForExit" Tooltip="Wait for exit " CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Stop Process" InternalName="StopProcess" FriendlyName="Stop Process" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="117">
                         <core:ToolboxItemSettings.Code><![CDATA[
function StopProcess{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $process    = {{{Process}}}; 
    $force      = ${{{Force}}}; 
    $CurrentSID = ${{{CurrentSID}}}; 
    $WaitTime   = {{{WaitTime}}};

        
        $processid = [MainHelpers.ProcessID]::DeserializeStrong($process);
        if($processid)
        {
            $process = $processid.PID;
        } 
        
        $mysid = [System.Diagnostics.Process]::GetCurrentProcess().SessionId; 
        
        $_waittime = 10;
        [int]::TryParse($WaitTime,[ref]$_waittime);
            
        $id = 0;
        if([int]::TryParse($process,[ref]$id))
        {           
            try 
            {
                $p = [System.Diagnostics.Process]::GetProcessById($id);
                if ($force) { $p.Kill(); }
                else { $p.CloseMainWindow(); }
            }
            catch {}
        }
        else 
        {       
            $stopwatch = [System.Diagnostics.Stopwatch]::StartNew();
            $list      = [System.Diagnostics.Process]::GetProcessesByName($process);
            while($list.Length -gt 0)
            {         
                $needClose = $false;
                foreach($p in $list)
                {      
                    if($CurrentSID)
                    {
                        if($p.SessionId -ne $mysid) { continue; }
                    }
                    try 
                    {    
                        $needClose = $true;
                        if ($force) { $p.Kill(); }
                        else { $p.CloseMainWindow(); } 
                    }
                    catch {}    
                }
                if (-not $needClose) { break; } 
                $list = [System.Diagnostics.Process]::GetProcessesByName($process); 
                if($list.Length -eq 0) { break; }
                Start-Sleep -Seconds 1;
                if($stopwatch.Elapsed.TotalSeconds -ge $_waittime) 
                {     
                    $stopwatch.Stop();
                    $__Error.Exception("Error stopping the process by timeout");
                    return;
                }
            }  
            $stopwatch.Stop();
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }      
    $__Error.Quit();  
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Process" Tooltip="Process name or PID or ProcessID" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="Force" Tooltip="Force Close (without saving changes)" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="CurrentSID" Tooltip="Current SID" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time wait in secods" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Process" InternalName="GetProcess" FriendlyName="Get Process" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetProcess{{{block_id}}}
{ 
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $NameProcess = {{{NameProcess}}};
    $TextWindow  = {{{TextWindow}}};
    
        $procid = 0;
        if($NameProcess.Length -gt 0)
        {
            foreach($p in [System.Diagnostics.Process]::GetProcessesByName($NameProcess))
            {
                $procid = $p.Id;
                break;
            }
        } 
        elseif($TextWindow.Length -gt 0)
        {
            $cls = [MainHelpers.ClassWildcard]::new(); 
            $str2   = $TextWindow.ToLower();
            foreach($p in [System.Diagnostics.Process]::GetProcesses())
            {                 
                $str1   = $p.MainWindowTitle.ToLower();
                $result = $cls.IndexOf($str1, $str2, 0, $false, $false, $false);
                if($result.Success)
                {
                    $procid = $p.Id;
                    break;
                }
            }
        } 
        
        if($procid -eq 0)
        {
            $__Error.Exception("Process not found"); 
            return;
        }
        
        {{{ProcessID}}} = $procid;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="NameProcess" Tooltip="Name process" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TextWindow" Tooltip="Text window" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="Process ID" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Launch Application" InternalName="LaunchApp" FriendlyName="Launch Application" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LaunchApp{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
        
    $AppPath        = {{{AppPath}}};
    $AppCommandLine = {{{AppCommandLine}}};
    
        $AppPath = ExpandConstFilePath $AppPath $true
        
        if(![System.IO.File]::Exists($AppPath))
        {            
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $AppPath"); 
            return;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>LaunchApp</InternalName><InternalType>Desktop</InternalType><AppPath>$AppPath</AppPath><AppCommandLine>$AppCommandLine</AppCommandLine><AppWaitStart>{{{AppWaitStart}}}</AppWaitStart><AppWaitStartTime>{{{AppWaitStartTime}}}</AppWaitStartTime></block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }      
        
        
        {{{ProcessID}}} = $psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }                        
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AppPath" Tooltip="Path to executable" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AppCommandLine" Tooltip="Command line arguments" CatalogName="Main properties" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AppWaitStart" Tooltip="Delay execution until application is actually started" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AppWaitStartTime" Tooltip="Delay execution for not more than specified time (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="1" ValueType="" />
                                   <core:Property Name="Selector" Tooltip="" CatalogName="Main properties" Type="Selector" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Application" InternalName="CloseApp" FriendlyName="Close Application" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="2" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CloseApp{{{block_id}}}
{ 
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ProcessID = {{{ProcessID}}};
    
        if([MainHelpers.ProcessID]::CheckInternet($ProcessID))
        {
             $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>CloseInternet</InternalName><ProcessID>$ProcessID</ProcessID></block>");                     
            $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
            if($__Error.CheckResult($psResult)) { return; }
        } 
        else
        {
            $thispid = [MainHelpers.ProcessID]::GetPID($ProcessID);
            if($thispid -ne 0) { Stop-Process -Id $thispid }      
        }      
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="Process ID" CatalogName="Required" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List Services" InternalName="ListServices" FriendlyName="List Services" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="66">
                         <core:ToolboxItemSettings.Code><![CDATA[      
function ListServices{{{block_id}}}
{                       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
                
    $FilterName   = {{{FilterName}}};
    $FilterStatus = "{{{FilterStatus}}}";
    
        $list = New-Object System.Collections.Generic.List[string];

        foreach($s in [System.ServiceProcess.ServiceController]::GetServices())
        {
            if($FilterStatus -eq "Running")
            {
                if($s.Status -ne [System.ServiceProcess.ServiceControllerStatus]::Running) { continue; }
            }
            if($FilterStatus -eq "Stopped")
            {
                if($s.Status -ne [System.ServiceProcess.ServiceControllerStatus]::Stopped) { continue; }
            }
            if($FilterName.Length -eq 0 -OR $s.ServiceName.ToLower().Contains($FilterName.ToLower()) -OR $s.ServiceName.ToLower().Contains($FilterName.ToLower()))
            {
                $list.Add($s.ServiceName);
            }
        } 
          
        {{{Result}}} = $list;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FilterName" Tooltip="Filter contains service name or display name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterStatus" Tooltip="Select specific status" CatalogName="Main properties" Type="Enum" Value="All" EnumVariants="All;Running;Stopped" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="List of service name" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Start Service" InternalName="StartService" FriendlyName="Start Service" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="33">
                         <core:ToolboxItemSettings.Code><![CDATA[
function StartService{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ServiceName = {{{ServiceName}}};
    
        foreach($s in [System.ServiceProcess.ServiceController]::GetServices())
        {
            if($s.ServiceName.ToLower() -eq $ServiceName.ToLower())
            {
                $s.Start();
                break;
            }
        }  
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
        
    $__Error.Quit(); 
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ServiceName" Tooltip="Enter servce name (eq.: &quot;Fax&quot;)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Stop Service" InternalName="StopService" FriendlyName="Stop Service" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="41">
                         <core:ToolboxItemSettings.Code><![CDATA[
function StopService{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ServiceName = {{{ServiceName}}};
    
        foreach($s in [System.ServiceProcess.ServiceController]::GetServices())
        {
            if($s.ServiceName.ToLower() -eq $ServiceName.ToLower())
            {
                $s.Stop();
                break;
            }
        }  
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
        
    $__Error.Quit(); 
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ServiceName" Tooltip="Enter servce name (eq.: &quot;Fax&quot;)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Service Startup Type" InternalName="SetServiceStartupType" FriendlyName="Set Service Startup Type" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="39">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetServiceStartupType{{{block_id}}}
{       
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ServiceName = {{{ServiceName}}}; 
    
        {{{Result}}} = Set-Service -Name $ServiceName -StartupType "{{{StartupType}}}" -ErrorAction Stop
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit(); 
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ServiceName" Tooltip="Enter servce name (eq.: &quot;Fax&quot;)" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="StartupType" Tooltip="Force Close" CatalogName="Main properties" Type="Enum" Value="Automatic" EnumVariants="Automatic;Boot;Disabled;Manual;System" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Status Message" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Window State" InternalName="GetWindowState" FriendlyName="Get Window State" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="24">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetWindowState{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Process     = {{{Process}}}; 
    $ProcessName = {{{ProcessName}}};
    $WindowName  = {{{WindowName}}};

        if(!$script:__WndState)
        {
            $script:__WndState = [MainHelpers.ControlWindowState]::new();
        }  
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetWindowHandle</InternalName>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if(!$psResult.IsError)
        {            
            $Process     = "";
            $ProcessName = "";
            $WindowName = $psResult.Result;
        }
        
        $psResult = $script:__WndState.GetWindowState($Process, $ProcessName, $WindowName);
        if($__Error.CheckResult($psResult)) { return; }  
        
        {{{Result}}} = [int]$psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }      
    $__Error.Quit();  
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Process" Tooltip="Process name or PID or ProcessID" CatalogName="Main properties" Type="Expression" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ProcessName" Tooltip="Process name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowName" Tooltip="Window name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Windows state 0,1,2,3" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Window State" InternalName="SetWindowState" FriendlyName="Set Window State" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="21">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetWindowState{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Process     = {{{Process}}}; 
    $ProcessName = {{{ProcessName}}};
    $WindowName  = {{{WindowName}}};
    $AllWindows  = ${{{AllWindows}}};
    $NewState    = "{{{NewState}}}";

        
        if(!$script:__WndState)
        {
            $script:__WndState = [MainHelpers.ControlWindowState]::new();
        } 
              
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetWindowHandle</InternalName>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if(!$psResult.IsError)
        {            
            $Process     = "";
            $ProcessName = "";
            $WindowName = $psResult.Result;
        }
        
        $_newstate = 1;
        if($NewState -eq "Minimized") { $_newstate = 2; }
        if($NewState -eq "Hide") { $_newstate = 0; }
        if($NewState -eq "Maximized") { $_newstate = 3; }
        if($NewState -eq "Close") { $_newstate = 10; }
        
        $psResult = $script:__WndState.SetWindowState($Process, $ProcessName, $WindowName, $AllWindows, $_newstate);
        if($__Error.CheckResult($psResult)) { return; }  
         
        {{{LastState}}} = [int]$psResult.Result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }      
    $__Error.Quit();  
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Process" Tooltip="Process name or PID or ProcessID" CatalogName="Main properties" Type="Expression" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ProcessName" Tooltip="Process name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowName" Tooltip="Window name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AllWindows" Tooltip="All windows" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="NewState" Tooltip="New state" CatalogName="Main properties" Type="Enum" Value="Normal" EnumVariants="Normal;Minimized;Maximized;Hide;Close" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="LastState" Tooltip="Windows state 0,1,2,3" CatalogName="Output" Type="Variable" Value="$LastState" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Window Language" InternalName="SetWindowLanguage" FriendlyName="Set Window Language" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="7">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetWindowLanguage{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Process     = {{{Process}}}; 
    $ProcessName = {{{ProcessName}}};
    $WindowName  = {{{WindowName}}};
    $Language    = "{{{Language}}}";

        
        if(!$script:__WndState)
        {
            $script:__WndState = [MainHelpers.ControlWindowState]::new();
        } 
        
        $psResult = $script:__WndState.SetWindowLanguage($Process, $ProcessName, $WindowName, $Language);
        if($__Error.CheckResult($psResult)) { return; }  
         
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }      
    $__Error.Quit();  
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Process" Tooltip="Process name or PID or ProcessID" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ProcessName" Tooltip="Process name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowName" Tooltip="Window name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Language" Tooltip="New state" CatalogName="Main properties" Type="Enum" Value="ENG" EnumVariants="ENG;РУС;German;French;УКР;БЕЛ;Kazakh" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Window Position" InternalName="SetWindowPosition" FriendlyName="Set Window Position" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetWindowPosition{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Process     = {{{Process}}}; 
    $ProcessName = {{{ProcessName}}};
    $WindowName  = {{{WindowName}}};
    $PositionX   = {{{PositionX}}};
    $PositionY   = {{{PositionY}}};

        
        if(!$script:__WndState)
        {
            $script:__WndState = [MainHelpers.ControlWindowState]::new();
        } 
              
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetWindowHandle</InternalName>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if(!$psResult.IsError)
        {            
            $Process     = "";
            $ProcessName = "";
            $WindowName = $psResult.Result;
        }
        
        $psResult = $script:__WndState.SetWindowPosition($Process, $ProcessName, $WindowName, $PositionX, $PositionY);
        if($__Error.CheckResult($psResult)) { return; }  
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }      
    $__Error.Quit();  
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Process" Tooltip="Process name or PID or ProcessID" CatalogName="Main properties" Type="Expression" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ProcessName" Tooltip="Process name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowName" Tooltip="Window name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PositionX" Tooltip="PositionX" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PositionY" Tooltip="PositionY" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Attach Application" InternalName="AttachApplication" FriendlyName="Attach Application" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Process.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AttachApplication{{{block_id}}}
{   
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Process     = {{{Process}}}; 
    $ProcessName = {{{ProcessName}}};
    $WindowName  = {{{WindowName}}};

        if(!$script:__WndState)
        {
            $script:__WndState = [MainHelpers.ControlWindowState]::new();
        }  
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>GetWindowHandle</InternalName>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if(!$psResult.IsError)
        {            
            $Process     = "";
            $ProcessName = "";
            $WindowName = $psResult.Result;
        }
        
        $psResult = $script:__WndState.GetProcessId($Process, $ProcessName, $WindowName);
        if($__Error.CheckResult($psResult)) { return; }  
                                                 
        $__pid = [int]$psResult.Result; 
        
        if($__pid -lt 0)
        {
            $__Error.Exception("Process not found");
            return;             
        }
        
        {{{NewProcessID}}} = [MainHelpers.ProcessID]::CreatePID($__pid).Serialize();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }      
    $__Error.Quit();  
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Process" Tooltip="Process name or PID or ProcessID" CatalogName="Main properties" Type="Expression" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ProcessName" Tooltip="Process name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="WindowName" Tooltip="Window name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewProcessID" Tooltip="Process id" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="NewProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="TerminalAutomation" Name="Terminal Automation" ToolboxGridType="List" AliasDescription="Emulate IBM iAccess">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Connect Session" InternalName="TerminalConnectSession" FriendlyName="Connect Session" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="16" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalConnectSession{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $SessionID = {{{SessionID}}};
    $PathDLL   = {{{PathDLL}}};
  
        {AddTypesTerminal}
               
        try       
        {
            {{{Connection}}}.Disconnect(); 
            {{{Connection}}}.Dispose();
            {{{Connection}}} = $null;
        }
        catch {}
        
        $terminal   = [TerminalHelpers.ClassMain]::new($PathDLL);
        $resultinit = $terminal.Initialize();
        if($resultinit.IsError) {$__Error.Exception($resultinit.ToString()); return;} 
                        
        $result = $terminal.Connect($SessionID);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
        
        {{{Connection}}} = $terminal;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SessionID" Tooltip="Session name" CatalogName="Required" Type="Expression" Value="&quot;A&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PathDLL" Tooltip="Path to dll" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Connection" Tooltip="Return object terminal connection" CatalogName="Output" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Session" InternalName="TerminalCloseConnection" FriendlyName="Close Session" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalCloseConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
        {AddTypesTerminal}
                              
        try       
        {
            {{{Connection}}}.Disconnect(); 
            {{{Connection}}}.Dispose();
            {{{Connection}}} = $null;
        }
        catch {}
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Cursor" InternalName="TerminalGetCursor" FriendlyName="Get Cursor" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="23" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalGetCursor{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}  
        
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result   = $terminal.GetCursor();
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
        
        {{{PosX}}} = $result.ParamX;
        {{{PosY}}} = $result.ParamY;
        
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Output" Type="Variable" Value="$PosX" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Output" Type="Variable" Value="$PosY" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Move Cursor" InternalName="TerminalMoveCursor" FriendlyName="Move Cursor" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalMoveCursor{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX = {{{PosX}}};
    $PosY = {{{PosY}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
                  
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.MoveCursor($PosX, $PosY);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Text at Position" InternalName="TerminalGetTextPosition" FriendlyName="Get Text at Position" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="10" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalGetTextPosition{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX   = {{{PosX}}};
    $PosY   = {{{PosY}}};
    $Length = {{{Length}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
        
        Start-Sleep -Milliseconds $DelayBefore;
                 
        $lengthvalue = 0;
        [int]::TryParse($Length.ToString(), [ref] $lengthvalue)
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.GetTextPosition($PosX, $PosY, $lengthvalue);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        {{{Result}}} = $result.Result;   
        
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Length" Tooltip="Length text" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Field at Position" InternalName="TerminalGetFieldPosition" FriendlyName="Get Field at Position" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalGetFieldPosition{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX   = {{{PosX}}};
    $PosY   = {{{PosY}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
            
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.GetFieldPosition($PosX, $PosY);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        {{{Result}}} = $result.Result; 
        
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Text at Position" InternalName="TerminalSetTextPosition" FriendlyName="Set Text at Position" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalSetTextPosition{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX     = {{{PosX}}};
    $PosY     = {{{PosY}}};
    $NewValue = {{{NewValue}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
            
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.SetTextPosition($PosX, $PosY, $NewValue);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
            
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewValue" Tooltip="New value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Field at Position" InternalName="TerminalSetFieldPosition" FriendlyName="Set Field at Position" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalSetFieldPosition{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX     = {{{PosX}}};
    $PosY     = {{{PosY}}};
    $NewValue = {{{NewValue}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
          
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.SetFieldPosition($PosX, $PosY, $NewValue);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
           
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewValue" Tooltip="New value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Field" InternalName="TerminalGetField" FriendlyName="Get Field" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalGetField{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
          
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.GetField();
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        {{{Result}}} = $result.Result;   
        
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Field" InternalName="TerminalSetField" FriendlyName="Set Field" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalSetField{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $NewValue = {{{NewValue}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
         
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.SetField($NewValue);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
             
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="NewValue" Tooltip="New value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Screen Area" InternalName="TerminalGetScreenArea" FriendlyName="Get Screen Area" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalGetScreenArea{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $FromPosX = {{{FromPosX}}};
    $FromPosY = {{{FromPosY}}};
    $ToPosX   = {{{ToPosX}}}; 
    $ToPosY   = {{{ToPosY}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
          
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.GetScreenArea($FromPosX, $FromPosY, $ToPosX, $ToPosY);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        {{{Result}}} = $result.Result;  
        
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="FromPosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FromPosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ToPosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ToPosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Send Keys" InternalName="TerminalSendKeys" FriendlyName="Send Keys" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalSendKeys{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $Keys = {{{Keys}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
           
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.SendKeys($Keys);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
             
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="Keys" Tooltip="Keys" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Send Control Key" InternalName="TerminalSendControlKey" FriendlyName="Send Control Key" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalSendControlKey{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $ControlKey = "{{{ControlKey}}}";
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
            
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.SendControlKey($ControlKey);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
                
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="ControlKey" Tooltip="Keys" CatalogName="Main properties" Type="Enum" Value="Transmit" EnumVariants="Transmit;Tab;Backtab;Cursor Down;Cursor Up;Cursor Right;Cursor Left;Insert;F1;F2;F3;F4;F5;F6;F7;F8;F9;F10;F11;F12;F13;F14;F15;F16;F17;F18;F19;F20;F21;F22;F23;F24;PA1;PA2;PA3;Clear;Reset;Backspace;Enter;Home;Insert;New Line;Page Up;Page Down;Print Screen;Shift;Alt" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait Text at Position" InternalName="TerminalWaitTextPosition" FriendlyName="Wait Text at Position" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalWaitTextPosition{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX      = {{{PosX}}};
    $PosY      = {{{PosY}}};
    $WaitValue = {{{WaitValue}}}; 
    $MatchCase = ${{{MatchCase}}};
    $Timeout   = {{{Timeout}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
            
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        
        $result = $terminal.WaitTextPosition($PosX, $PosY, $WaitValue, $MatchCase, $Timeout);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
           
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitValue" Tooltip="New value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MatchCase" Tooltip="Matchcase" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Wait Field at Position" InternalName="TerminalWaitFieldPosition" FriendlyName="Wait Field at Position" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalWaitFieldPosition{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $PosX      = {{{PosX}}};
    $PosY      = {{{PosY}}};
    $WaitValue = {{{WaitValue}}}; 
    $MatchCase = ${{{MatchCase}}};
    $Timeout   = {{{Timeout}}};
    $DelayAfter   = {{{DelayAfter}}}; 
    $DelayBefore  = {{{DelayBefore}}};
    
        {AddTypesTerminal}
            
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        
        $result = $terminal.WaitFieldPosition($PosX, $PosY, $WaitValue, $MatchCase, $Timeout);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
         
        Start-Sleep -Milliseconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="PosX" Tooltip="Position X" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PosY" Tooltip="Position Y" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitValue" Tooltip="New value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="MatchCase" Tooltip="Matchcase" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Field Between" InternalName="TerminalGetFieldBetween" FriendlyName="Get Field Between" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="10" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalGetFieldBetween{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}};
    $TextFrom    = {{{TextFrom}}};
    $TextTo      = {{{TextTo}}}; 
    $Index       = {{{Index}}};
    
        {AddTypesTerminal}
          
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.GetFieldBetween($TextFrom, $TextTo, $Index);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        {{{Result}}} = $result.Result;   
        
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="TextFrom" Tooltip="Text from" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TextTo" Tooltip="TextTo" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Index" Tooltip="Index" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Field Between" InternalName="TerminalSetFieldBetween" FriendlyName="Set Field Between" PathStyle="{StaticResource GrayRectangle}" PathStyle_DragThumb="{StaticResource GrayRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Terminal.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TerminalSetFieldBetween{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
      
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}};
    $TextFrom    = {{{TextFrom}}};
    $TextTo      = {{{TextTo}}}; 
    $Index       = {{{Index}}};  
    $NewValue    = {{{NewValue}}};
    
        {AddTypesTerminal}
          
        Start-Sleep -Milliseconds $DelayBefore;
        
        $terminal = {{{Connection}}};
        $terminal.SetTimeout({{{Timeout}}});
        
        $result = $terminal.SetFieldBetween($TextFrom, $TextTo, $Index, $NewValue);
        if($result.IsError) {$__Error.Exception($result.ToString()); return;} 
          
        Start-Sleep -Milliseconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Object terminal connection" CatalogName="Required" Type="Variable" Value="$TerminalConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="TextFrom" Tooltip="Text from" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TextTo" Tooltip="TextTo" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Index" Tooltip="Index" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewValue" Tooltip="New value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Registry" Name="Registry" ToolboxGridType="List" AliasDescription="Work with Windows Registry">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Read Value From Registry" InternalName="ReadValueFromRegistry" FriendlyName="Read Value From Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="112">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReadValueFromRegistry{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Root = "{{{ROOT}}}";
    $Key  = {{{Key}}};
    $Name = {{{Name}}};

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }  

        $regkey = $mainkey.OpenSubKey($Key, $false);
        {{{Result}}} = $regkey.GetValue($Name, ""); 
        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Key" Tooltip="Key" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name property" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Write Value To Registry" InternalName="WriteValueToRegistry" FriendlyName="Write Value To Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="33">
                         <core:ToolboxItemSettings.Code><![CDATA[
function WriteValueToRegistry{{{block_id}}}
{                    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $Root  = "{{{ROOT}}}";
    $Key   = {{{Key}}};
    $Name  = {{{Name}}}; 
    $Value = {{{Value}}};

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }  

        $regkey = $mainkey.OpenSubKey($Key, $true);
        $regkey.SetValue($Name, $Value); 
        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Key" Tooltip="Key" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name property" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="List items From Registry" InternalName="ListitemsFromRegistry" FriendlyName="List items From Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="53">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ListitemsFromRegistry{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Root     = "{{{ROOT}}}";
    $Key      = {{{Key}}};
    $ItemType = "{{{ItemType}}}";

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }

        $regkey = $mainkey.OpenSubKey($Key, $false);

        if($ItemType -eq "Property")
        {
            $hash = @{}
           
            foreach($ar in $regkey.GetValueNames())
            {
                $hash.Add($ar, $regkey.GetValue($ar, "")); 
            }

            {{{Result}}} = $hash;
        }
        else 
        {
            $list = New-Object System.Collections.Generic.List[string];

            foreach($ar in $regkey.GetSubKeyNames())
            {
                $list.Add($ar); 
            }

            {{{Result}}} = $list;
        }

        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Key" Tooltip="Key" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ItemType" Tooltip="Type output (hive or property)" CatalogName="Required" Type="Enum" Value="Property" EnumVariants="Hive;Property" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="If Property then result is hashtables name of value, else list of hive names" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable/List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create Property In Registry" InternalName="CreatePropertyInRegistry" FriendlyName="Create Property In Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="39">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CreatePropertyInRegistry{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Root         = "{{{ROOT}}}";
    $Key          = {{{Key}}};
    $Name         = {{{Name}}}; 
    $Value        = {{{Value}}};
    $PropertyType = "{{{PropertyType}}}";

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }  

        $regkey = $mainkey.OpenSubKey($Key, $true);
        $regkey.SetValue($Name, $Value, [Microsoft.Win32.RegistryValueKind]$PropertyType); 
        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Key" Tooltip="Key" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PropertyType" Tooltip="Property Type" CatalogName="Main properties" Type="Enum" Value="String" EnumVariants="String;ExpandString;Binary;DWord;MultiString;Qword;Unknown" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Property in Registry" InternalName="RemovePropertyInRegistry" FriendlyName="Remove Property in Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="29">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemovePropertyInRegistry{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Root = "{{{ROOT}}}";
    $Key  = {{{Key}}};
    $Name = {{{Name}}}; 

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }  

        $regkey = $mainkey.OpenSubKey($Key, $true);
        $regkey.DeleteValue($Name); 
        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Key" Tooltip="Key" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create New Hive In Registry" InternalName="CreateHiveInRegistry" FriendlyName="Create New Hive In Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="40">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CreateHiveInRegistry{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Root = "{{{ROOT}}}";
    $Key  = {{{Key}}};
    $Name = {{{Name}}}; 

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }  

        $regkey = $mainkey.OpenSubKey($Key, $true);
        $_ = $regkey.CreateSubKey($Name); 
        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Key" Tooltip="Key" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name hive" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Remove Hive in Registry" InternalName="RemoveHiveInRegistry" FriendlyName="Remove Hive in Registry" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Regedit.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="60">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RemoveHiveInRegistry{{{block_id}}}
{     
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $Root = "{{{ROOT}}}";
    $Key  = {{{Key}}};
    $Name = {{{Name}}}; 

        if($Root -eq "HKEY_CURRENT_USER") { $mainkey = [Microsoft.Win32.Registry]::CurrentUser; }
        if($Root -eq "HKEY_CLASSES_ROOT") { $mainkey = [Microsoft.Win32.Registry]::ClassesRoot; }
        if($Root -eq "HKEY_CURRENT_CONFIG") { $mainkey = [Microsoft.Win32.Registry]::CurrentConfig; }
        if($Root -eq "HKEY_LOCAL_MACHINE") { $mainkey = [Microsoft.Win32.Registry]::LocalMachine; }
        if($Root -eq "HKEY_PERFORMANCE_DATA") { $mainkey = [Microsoft.Win32.Registry]::PerformanceData; }
        if($Root -eq "HKEY_USERS") { $mainkey = [Microsoft.Win32.Registry]::Users; }  

        $regkey = $mainkey.OpenSubKey($Key, $true);
        $regkey.DeleteSubKeyTree($Name, $false);
        $regkey.Close();
    }   
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ROOT" Tooltip="ROOT" CatalogName="Required" Type="Enum" Value="HKEY_CURRENT_USER" EnumVariants="HKEY_CLASSES_ROOT;HKEY_CURRENT_CONFIG;HKEY_CURRENT_USER;HKEY_LOCAL_MACHINE;HKEY_PERFORMANCE_DATA;HKEY_USERS" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Key" Tooltip="Path Key to delete" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name hive" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="1CToolboxSettings" Name="1C Automation" ToolboxGridType="List" AliasDescription="Work with 1C accounting software using direct connection">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Create Connection" InternalName="1CCreateConnection" FriendlyName="Create Connection" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_1_C.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="62" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function 1CCreateConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
             
    $ConnectorType    = "{{{ConnectorType}}}";
    $ConnectionString = {{{ConnectionString}}};
    $User             = {{{User}}};
    $PasswordObj         = {{{Password}}};
    $Version1C        = "{{{Version1C}}}";
       
    $instance1C = $null; 
            
        $Password = _checkpassword($PasswordObj);   
            
        $instance1C = [Namespace1C.Class1CConnector]::new();
        $psResult   = $instance1C.CreateConnection($ConnectorType, $ConnectionString, $User, $Password, $Version1C);
        if($__Error.CheckResult($psResult)) 
        { 
            if($null -ne $instance1C)
            {
                $instance1C.CloseConnection();
                $instance1C = $null;
            }
            return; 
        }               
                    
        {{{Connection}}} = $instance1C;    
    }
    catch 
    {    
        $__Error.ExceptionCatch($_); 
        if($null -ne $instance1C)
        {
            $instance1C.CloseConnection();
            $instance1C = $null;
        }
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ConnectorType" Tooltip="Connector type" CatalogName="Main properties" Type="Enum" Value="Server" EnumVariants="Server;Application;ApplicationHidden" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ConnectionString" Tooltip="Connection string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Version1C" Tooltip="Version 1C" CatalogName="Main properties" Type="Enum" Value="V83" EnumVariants="V83;V82" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Output" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Connection" InternalName="1CCloseConnection" FriendlyName="Close Connection" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_1_C.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="22" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function 1CCloseConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
        $instance1C = {{{Connection}}};
        
        $vartype = $instance1C.GetType().Name;
        if(-not $vartype.Contains("Class1CConnector"))
        {
            $__Error.Exception("Connection is not 1C");
            return;
        }
        
        $instance1C.CloseConnection();       
        $instance1C = $null;
        {{{Connection}}} = $null;   
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Execute Query" InternalName="1CExecuteQuery" FriendlyName="Execute Query" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_1_C.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="68" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function 1CExecuteQuery{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $QueryString = {{{QueryString}}};
        
        $instance1C = {{{Connection}}};
        
        $vartype = $instance1C.GetType().Name;
        if(-not $vartype.Contains("Class1CConnector"))
        {
            $__Error.Exception("Connection is not 1C");
            return;
        }
        
        $psResult = $instance1C.ExecuteQuery($QueryString);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="QueryString" Tooltip="Query string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result of data table" CatalogName="Output" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Execute Code" InternalName="1CExecuteCode" FriendlyName="Execute Code" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_1_C.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="44" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function 1CExecuteCode{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $CodeString = {{{CodeString}}};
        
        $instance1C = {{{Connection}}};
        
        $vartype = $instance1C.GetType().Name;
        if(-not $vartype.Contains("Class1CConnector"))
        {
            $__Error.Exception("Connection is not 1C");
            return;
        }
        
        $psResult = $instance1C.ExecuteCode($CodeString);
        if($__Error.CheckResult($psResult)) { return; }  
        
        {{{Result}}} = $psResult.Result;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="CodeString" Tooltip="Code string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Collect Data" InternalName="1CCollectData" FriendlyName="Collect Data" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_1_C.png" ImageType="LeftImage" Proportional="True" Version="26" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function 1CCollectData{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
   
    $ProcessID      = {{{ProcessID}}};
    $DelayAfter     = {{{DelayAfter}}};  
    $DelayBefore    = {{{DelayBefore}}};
    $WaitTime       = {{{WaitTime}}}; 
    $RowsCount      = {{{RowsCount}}};  
    $ListColumnsObj = {{{ListColumns}}};
    
        {{{Result}}} = $null;
                  
        $ListColumns = "";
        if($ListColumnsObj)
        {
            $ListColumns = [string]::Join("|||", $ListColumnsObj);
        }
        
        Start-Sleep -Seconds $DelayBefore; 
     
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>CollectData</InternalName><ProcessID>$ProcessID</ProcessID><RowsCount>$RowsCount</RowsCount><InternalType>Desktop</InternalType><WaitTime>$WaitTime</WaitTime><ListColumns>$ListColumns</ListColumns>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
        
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="RowsCount" Tooltip="Exctract limit rows count" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ListColumns" Tooltip="ListColumns" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Return DataTable results" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="1C Table Cell Click" InternalName="1CTableCellClick" FriendlyName="1C Table Cell Click" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_1_C.png" ImageType="LeftImage" Proportional="True" Version="20" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function 1CTableCellClick{{{block_id}}}
{          
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
    $DelayAfter  = {{{DelayAfter}}}; 
    $DelayBefore = {{{DelayBefore}}};
    $ProcessID   = {{{ProcessID}}}; 
    $OffsetX     = {{{OffsetX}}};
    $OffsetY     = {{{OffsetY}}};
    $WaitTime    = {{{WaitTime}}}; 
    $IndexRow    = {{{IndexRow}}};
    $IndexCol    = {{{IndexCol}}};
    $CanUsedFast = ${{{CanUsedFast}}};
      
        Start-Sleep -Seconds $DelayBefore; 
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>1CTableCellClick</InternalName><InternalType>Desktop</InternalType><Action>{{{Action}}}</Action><OffsetX>$OffsetX</OffsetX><OffsetY>$OffsetY</OffsetY><ProcessID>$ProcessID</ProcessID><IndexRow>$IndexRow</IndexRow><IndexCol>$IndexCol</IndexCol><WaitTime>$WaitTime</WaitTime><CanUsedFast>$CanUsedFast</CanUsedFast>{{{Selector}}}</block>");                      
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }  
                           
        Start-Sleep -Seconds $DelayAfter; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    } 
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IndexRow" Tooltip="Index row" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexCol" Tooltip="Index col" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetX" Tooltip="Offset X left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="OffsetY" Tooltip="Offset Y left up point element" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CanUsedFast" Tooltip="Can used fast method" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="DatabaseToolboxSettings" Name="Database Automation" ToolboxGridType="List" AliasDescription="Connect to database and perform SQL queries">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Create Connection" InternalName="DatabaseCreateConnection" FriendlyName="Create Connection" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (SQL).png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="81" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DatabaseCreateConnection{{{block_id}}}
{         
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $ConnectionString = {{{ConnectionString}}};
    $User             = {{{User}}};
    $PasswordObj         = {{{Password}}};
    $Provider         = "{{{Provider}}}";
        
        $Password = _checkpassword($PasswordObj);
    
        if($Provider -eq "SQL")
        {              
            {AddTypesProvidersSQL}
            if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }

            $sqlconnection = [System.Data.SqlClient.SqlConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
        }
        elseif($Provider -eq "MySQL")
        {     
            {AddTypesProvidersMySQL}
            if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }
            
            $sqlconnection                  = [MySqlConnector.MySqlConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
        }
        elseif($Provider -eq "SQLite")
        {           
            {AddTypesProvidersSQLite}
            if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }  
            
            $sqlconnection = [System.Data.SQLite.SQLiteConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
        }
        elseif($Provider -eq "Firebird")
        {       
            {AddTypesProvidersFirebird}
            if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
            
            $sqlconnection = [FirebirdSql.Data.FirebirdClient.FbConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
        }
        elseif($Provider -eq "Oracle")
        {       
            {AddTypesProvidersOracle} 
            
            if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
            
            $sqlconnection = [Oracle.ManagedDataAccess.Client.OracleConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
            
            {AddTypesProvidersOracleEnd}
        } 
        elseif($Provider -eq "OleDb")
        {       
            {AddTypesProvidersOleDb}
            if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
            
            $sqlconnection = [System.Data.OleDb.OleDbConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
        }
        elseif($Provider -eq "PostgreSQL")
        {       
            {AddTypesProvidersPostgreSQL} 
            
            if($User.Length -gt 0) { $ConnectionString += "Username=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
            
            $sqlconnection = [Npgsql.NpgsqlConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
            
            {AddTypesProvidersPostgreSQLEnd}
        } 
        elseif($Provider -eq "Odbc")
        {              
            {AddTypesProvidersOdbc}
            if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
            if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }

            $sqlconnection = [System.Data.Odbc.OdbcConnection]::new();
            $sqlconnection.ConnectionString = $ConnectionString;
            $sqlconnection.Open();
        }

        {{{Connection}}} = $sqlconnection;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ConnectionString" Tooltip="Connection string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Provider" Tooltip="Provider sql" CatalogName="Main properties" Type="Enum" Value="SQL" EnumVariants="SQL;MySQL;SQLite;Firebird;Oracle;OleDb;PostgreSQL;Odbc" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Output" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Connection" InternalName="DatabaseCloseConnection" FriendlyName="Close Connection" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (SQL).png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="32" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DatabaseCloseConnection{{{block_id}}}
{             
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $sqlconnection = {{{Connection}}};
        
        $sqlconnection.Close();
        $sqlconnection.Dispose();

        {{{Connection}}} = $null;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Select Query" InternalName="DatabaseSelectQuery" FriendlyName="Select Query" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (SQL).png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="76" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DatabaseSelectQuery{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ConnectionString = {{{ConnectionString}}};
    $User             = {{{User}}};
    $PasswordObj      = {{{Password}}};
    $Provider         = "{{{Provider}}}";   
    $sqlconnection    = {{{Connection}}};
    $QueryString      = {{{QueryString}}}; 
    $InParams         = {{{InParams}}};
    $Timeout_str      = {{{Timeout}}};
        
        $Password = _checkpassword($PasswordObj);
    
        $resulttable = New-Object System.Data.DataTable;  
        
        $Timeout = _toint($Timeout_str);
        if($Timeout -eq 0) { $Timeout = 60; }
                          
        if($ConnectionString.Length -gt 0)
        {
            if($Provider -eq "SQL")
            {              
                {AddTypesProvidersSQL}
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }

                $sqlconnection = [System.Data.SqlClient.SqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "MySQL")
            {     
                {AddTypesProvidersMySQL}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }
                
                $sqlconnection                  = [MySqlConnector.MySqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "SQLite")
            {           
                {AddTypesProvidersSQLite}
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }  
                
                $sqlconnection = [System.Data.SQLite.SQLiteConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Firebird")
            {       
                {AddTypesProvidersFirebird}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [FirebirdSql.Data.FirebirdClient.FbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Oracle")
            {       
                {AddTypesProvidersOracle} 
                
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Oracle.ManagedDataAccess.Client.OracleConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();         
                
                {AddTypesProvidersOracleEnd}
            } 
            elseif($Provider -eq "OleDb")
            {       
                {AddTypesProvidersOleDb}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [System.Data.OleDb.OleDbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "PostgreSQL")
            {       
                {AddTypesProvidersPostgreSQL}
                
                if($User.Length -gt 0) { $ConnectionString += "Username=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Npgsql.NpgsqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();  
                
                {AddTypesProvidersPostgreSQLEnd}
            }
            elseif($Provider -eq "Odbc")
            {              
                {AddTypesProvidersOdbc}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }

                $sqlconnection = [System.Data.Odbc.OdbcConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
        }
        
        $typename = $sqlconnection.GetType().Name; 

        if($typename -eq "SqlConnection")
        {
            $command                = [System.Data.SqlClient.SqlCommand]::new($QueryString, $sqlconnection);  
            $command.CommandTimeout = $Timeout;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];  
                    if($null -eq $value) { continue; }
                    $valuetype = $value.GetType().Name;
                    if($valuetype -eq "DateTime") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::DateTime); }
                    elseif($valuetype -eq "Double") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Float); }
                    elseif($valuetype -eq "Decimal") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Decimal); }
                    elseif($valuetype -eq "Int32") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Int); }
                    else { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::NVarChar, -1); }
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $adapter                = [System.Data.SqlClient.SqlDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        }
        elseif($typename -eq "MySqlConnection")
        {
            $command = $sqlconnection.CreateCommand(); 
            
            $command.CommandText    = $QueryString;
            $command.CommandTimeout = $Timeout; 
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.DbType]::String);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $adapter                = [MySqlConnector.MySqlDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        }
        elseif($typename -eq "SQLiteConnection")
        {
            $command                = [System.Data.SQLite.SQLiteCommand]::new($sqlconnection);
            $command.CommandTimeout = $Timeout;
            $command.CommandText    = $QueryString;    
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.DbType]::String);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }  
            $adapter                = [System.Data.SQLite.SQLiteDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();  
        }
        elseif($typename -eq "FbConnection")
        {
            $command                = [FirebirdSql.Data.FirebirdClient.FbCommand]::new($QueryString, $sqlconnection);
            $command.CommandTimeout = $Timeout;   
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [FirebirdSql.Data.FirebirdClient.FbDbType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }  
            $adapter                = [FirebirdSql.Data.FirebirdClient.FbDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        }
        elseif($typename -eq "OracleConnection")
        {
            $command                = [Oracle.ManagedDataAccess.Client.OracleCommand]::new($QueryString, $sqlconnection);  
            $command.CommandTimeout = $Timeout;   
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {                     
                    $value = $InParams[$key];  
                    if($null -eq $value) { continue; }
                    $valuetype = $value.GetType().Name;
                    if($valuetype -eq "DateTime") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Date); }
                    elseif($valuetype -eq "Double") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Double); }
                    elseif($valuetype -eq "Decimal") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Decimal); }
                    elseif($valuetype -eq "Int32") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Int32); }
                    elseif(_isbase64($value.ToString())) { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Clob); }
                    else { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Varchar2); }
                    $command.Parameters["@" + $key].Value = $value;
                }
            } 
            $adapter                = [Oracle.ManagedDataAccess.Client.OracleDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        }
        elseif($typename -eq "OleDbConnection")
        {
            $command                = [System.Data.OleDb.OleDbCommand]::new($QueryString, $sqlconnection);
            $command.CommandTimeout = $Timeout;    
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.OleDb.OleDbType]::VarWChar);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }  
            $adapter                = [System.Data.OleDb.OleDbDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        } 
        elseif($typename -eq "NpgsqlConnection")
        {
            $command                = [Npgsql.NpgsqlCommand]::new($QueryString, $sqlconnection);  
            $command.CommandTimeout = $Timeout;    
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [NpgsqlTypes.NpgsqlDbType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $adapter                = [Npgsql.NpgsqlDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        }
        elseif($typename -eq "OdbcConnection")
        {
            $command                = [System.Data.Odbc.OdbcCommand]::new($QueryString, $sqlconnection); 
            $command.CommandTimeout = $Timeout;  
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.Odbc.OdbcType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }  
            $adapter                = [System.Data.Odbc.OdbcDataAdapter]::new($command);
            $_                      = $adapter.Fill($resulttable); 
            $command.Dispose();
        }
        
        if($ConnectionString.Length -gt 0)
        {
            $sqlconnection.Close();
            $sqlconnection.Dispose();
            $sqlconnection = $null;
        }

        {{{Result}}} = $resulttable;        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ConnectionString" Tooltip="Connection string" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Provider" Tooltip="Provider sql" CatalogName="Main properties" Type="Enum" Value="SQL" EnumVariants="SQL;MySQL;SQLite;Firebird;Oracle;OleDb;PostgreSQL;Odbc" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Main properties" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="QueryString" Tooltip="Query string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InParams" Tooltip="In params" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result of data table" CatalogName="Output" Type="Variable" Value="$Table" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Execute Query" InternalName="DatabaseExecuteQuery" FriendlyName="Execute Query" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (SQL).png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="92" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DatabaseExecuteQuery{{{block_id}}}
{    
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ConnectionString = {{{ConnectionString}}};
    $User             = {{{User}}};
    $PasswordObj         = {{{Password}}};
    $Provider         = "{{{Provider}}}";   
    $sqlconnection    = {{{Connection}}};
    $QueryString      = {{{QueryString}}};  
    $InParams         = {{{InParams}}};
    $Timeout_str          = {{{Timeout}}};
        
        $Password = _checkpassword($PasswordObj);
                            
        $Timeout = _toint($Timeout_str);
        if($Timeout -eq 0) { $Timeout = 60; }
        
        $resultindex = "0";
        
        if($ConnectionString.Length -gt 0)
        {
            if($Provider -eq "SQL")
            {              
                {AddTypesProvidersSQL}
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }

                $sqlconnection = [System.Data.SqlClient.SqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "MySQL")
            {     
                {AddTypesProvidersMySQL}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }
                
                $sqlconnection                  = [MySqlConnector.MySqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "SQLite")
            {           
                {AddTypesProvidersSQLite}
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }  
                
                $sqlconnection = [System.Data.SQLite.SQLiteConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Firebird")
            {       
                {AddTypesProvidersFirebird}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [FirebirdSql.Data.FirebirdClient.FbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Oracle")
            {       
                {AddTypesProvidersOracle}  
                
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Oracle.ManagedDataAccess.Client.OracleConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();  
                
                {AddTypesProvidersOracleEnd}
            } 
            elseif($Provider -eq "OleDb")
            {       
                {AddTypesProvidersOleDb}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [System.Data.OleDb.OleDbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "PostgreSQL")
            {       
                {AddTypesProvidersPostgreSQL}  
                
                if($User.Length -gt 0) { $ConnectionString += "Username=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Npgsql.NpgsqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open(); 
                
                {AddTypesProvidersPostgreSQLEnd}
            }
            elseif($Provider -eq "Odbc")
            {              
                {AddTypesProvidersOdbc}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }

                $sqlconnection = [System.Data.Odbc.OdbcConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
        }
        
        $typename = $sqlconnection.GetType().Name; 

        if($typename -eq "SqlConnection")
        {           
            if($QueryString.ToUpper().StartsWith("INSERT")) { $QueryString += "; SELECT SCOPE_IDENTITY()"; }
            $command                = [System.Data.SqlClient.SqlCommand]::new($QueryString, $sqlconnection); 
            $command.CommandTimeout = $Timeout;  
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];  
                    if($null -eq $value) { continue; }
                    $valuetype = $value.GetType().Name;
                    if($valuetype -eq "DateTime") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::DateTime); }
                    elseif($valuetype -eq "Double") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Float); }
                    elseif($valuetype -eq "Decimal") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Decimal); }
                    elseif($valuetype -eq "Int32") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Int); }
                    else { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::NVarChar, -1); }
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $lastId                 = $command.ExecuteScalar(); 
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); }
            $command.Dispose();
        }
        elseif($typename -eq "MySqlConnection")
        {
            $command                = $sqlconnection.CreateCommand(); 
            $command.CommandTimeout = $Timeout;
            $command.CommandText    = $QueryString; 
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.DbType]::String);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $command.ExecuteNonQuery();
            $lastId = $command.LastInsertedId;
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); }
            $command.Dispose();
        }
        elseif($typename -eq "SQLiteConnection")
        {
            $command                = [System.Data.SQLite.SQLiteCommand]::new($sqlconnection); 
            $command.CommandTimeout = $Timeout;
            $command.CommandText    = $QueryString; 
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.DbType]::String);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $lastId                 = $command.ExecuteScalar(); 
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); } 
            $command.Dispose();  
        }
        elseif($typename -eq "FbConnection")
        {          
            if($QueryString.ToUpper().StartsWith("INSERT")) { $QueryString += "; returning ID"; }
            $command                = [FirebirdSql.Data.FirebirdClient.FbCommand]::new($QueryString, $sqlconnection);
            $command.CommandTimeout = $Timeout;   
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [FirebirdSql.Data.FirebirdClient.FbDbType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $lastId                 = $command.ExecuteScalar(); 
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); }
            $command.Dispose();
        }
        elseif($typename -eq "OracleConnection")
        {          
            $command                = [Oracle.ManagedDataAccess.Client.OracleCommand]::new($QueryString, $sqlconnection);  
            $command.CommandTimeout = $Timeout;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {                     
                    $value = $InParams[$key];  
                    if($null -eq $value) { continue; }
                    $valuetype = $value.GetType().Name;
                    if($valuetype -eq "DateTime") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Date); }
                    elseif($valuetype -eq "Double") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Double); }
                    elseif($valuetype -eq "Decimal") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Decimal); }
                    elseif($valuetype -eq "Int32") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Int32); }
                    elseif(_isbase64($value.ToString())) { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Clob); }
                    else { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Varchar2); }
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $command.ExecuteNonQuery();
            $lastId = 0; 
            $command.Dispose();
        }
        elseif($typename -eq "OleDbConnection")
        {          
            $command                = [System.Data.OleDb.OleDbCommand]::new($QueryString, $sqlconnection); 
            $command.CommandTimeout = $Timeout; 
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.OleDb.OleDbType]::VarWChar);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $command.ExecuteScalar(); 
            $command.Dispose();
            $command = [System.Data.OleDb.OleDbCommand]::new("SELECT @@Identity", $sqlconnection);
            $lastId  = $command.ExecuteScalar(); 
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); }
            $command.Dispose();
        }
        elseif($typename -eq "NpgsqlConnection")
        {
            #if($QueryString.ToUpper().StartsWith("INSERT")) { $QueryString += " RETURNING id"; }
            $command                = [Npgsql.NpgsqlCommand]::new($QueryString, $sqlconnection);   
            $command.CommandTimeout = $Timeout;    
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [NpgsqlTypes.NpgsqlDbType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $lastId                 = $command.ExecuteScalar(); 
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); }
            $command.Dispose();
        }
        elseif($typename -eq "OdbcConnection")
        {
            #if($QueryString.ToUpper().StartsWith("INSERT")) { $QueryString += "; SELECT @@IDENTITY"; }
            $command                = [System.Data.Odbc.OdbcCommand]::new($QueryString, $sqlconnection); 
            $command.CommandTimeout = $Timeout;   
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.Odbc.OdbcType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }
            $lastId                 = $command.ExecuteScalar(); 
            if($lastId -ne $null) { $resultindex = $lastId.ToString(); }
            $command.Dispose();
        } 
        
        if($ConnectionString.Length -gt 0)
        {
            $sqlconnection.Close();
            $sqlconnection.Dispose();
            $sqlconnection = $null;
        }

        {{{Result}}} = [int]$resultindex;     
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ConnectionString" Tooltip="Connection string" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Provider" Tooltip="Provider sql" CatalogName="Main properties" Type="Enum" Value="SQL" EnumVariants="SQL;MySQL;SQLite;Firebird;Oracle;OleDb;PostgreSQL;Odbc" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Main properties" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="QueryString" Tooltip="Query string" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InParams" Tooltip="In params" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result of insert index" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Insert DataTable" InternalName="DatabaseInsertDataTable" FriendlyName="Insert DataTable" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (SQL).png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="27" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DatabaseInsertDataTable{{{block_id}}}
{    
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ConnectionString  = {{{ConnectionString}}};
    $User              = {{{User}}};
    $PasswordObj       = {{{Password}}};
    $Provider          = "{{{Provider}}}";   
    $sqlconnection     = {{{Connection}}};
    $InsertTable       = {{{InsertTable}}};  
    $TableName         = {{{TableName}}}; 
    $ExcludeColumnsObj = {{{ExcludeColumns}}};
    $Timeout_str       = {{{Timeout}}};
        
        $Password = _checkpassword($PasswordObj);
                            
        $Timeout = _toint($Timeout_str);
        if($Timeout -eq 0) { $Timeout = 60; }
        
        $resultindex = 0; 
        
        if($null -eq $ExcludeColumnsObj) { $ExcludeColumnsObj = ""; }
        $ExcludeColumns = $ExcludeColumnsObj.ToString().Split(",");
       
        if($ConnectionString.Length -gt 0)
        {
            if($Provider -eq "SQL")
            {              
                {AddTypesProvidersSQL}
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }

                $sqlconnection = [System.Data.SqlClient.SqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "MySQL")
            {     
                {AddTypesProvidersMySQL}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }
                
                $sqlconnection                  = [MySqlConnector.MySqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "SQLite")
            {           
                {AddTypesProvidersSQLite}
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }  
                
                $sqlconnection = [System.Data.SQLite.SQLiteConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Firebird")
            {       
                {AddTypesProvidersFirebird}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [FirebirdSql.Data.FirebirdClient.FbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Oracle")
            {       
                {AddTypesProvidersOracle}  
                
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Oracle.ManagedDataAccess.Client.OracleConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();  
                
                {AddTypesProvidersOracleEnd}
            } 
            elseif($Provider -eq "OleDb")
            {       
                {AddTypesProvidersOleDb}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [System.Data.OleDb.OleDbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "PostgreSQL")
            {       
                {AddTypesProvidersPostgreSQL}  
                
                if($User.Length -gt 0) { $ConnectionString += "Username=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Npgsql.NpgsqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open(); 
                
                {AddTypesProvidersPostgreSQLEnd}
            }
            elseif($Provider -eq "Odbc")
            {              
                {AddTypesProvidersOdbc}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }

                $sqlconnection = [System.Data.Odbc.OdbcConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
        }
        
        $typename = $sqlconnection.GetType().Name;  
        
        $queryNames = "";
        $queryValues = "";
        foreach ($column in $InsertTable.Columns) {
            if ($ExcludeColumns.Contains($column.Ordinal.ToString())) { continue; }

            if ($queryNames.Length -gt 0) { $queryNames += ","; }
            if($typename -eq "OracleConnection")
            {
                $queryNames += $column.ColumnName;
            } 
            elseif($typename -eq "MySqlConnection")
            {
                $queryNames += "``" + $column.ColumnName + "``";
            }
            else
            {
                $queryNames += "[" + $column.ColumnName + "]";
            }

            if ($queryValues.Length -gt 0) { $queryValues += ","; }
            $queryValues += "@param" + $column.ColumnName;
        }
        $QueryString     = "INSERT INTO " + $TableName + " (" + $queryNames + ") VALUES (" + $queryValues + ")";
        $listQueryString = New-Object Collections.Generic.List[string];
        foreach ($row in $InsertTable.Rows) 
        {
            $thisQueryString = $QueryString;
            for ($indcol = 0; $indcol -lt $InsertTable.Columns.Count; $indcol++) 
            {
                $thisValue = "''";  
                $cellvalue = _tostring($row[$indcol]);  
                
                if($cellvalue -ne "")
                {
                    if ($InsertTable.Columns[$indcol].DataType.Name -eq "DateTime")
                    {
                        if($typename -eq "OracleConnection")
                        {
                            $thisValue = "TO_DATE('"+ $row[$indcol].ToString("yyyy-MM-dd HH:mm:ss") +"', 'yyyy-mm-dd hh24:mi:ss')";
                        }
                        else
                        {
                            $thisValue = $row[$indcol].ToString("yyyy-MM-dd HH:mm:ss");
                            $thisValue = "'" + $thisValue + "'";
                        }
                    }
                    else
                    {
                        $thisValue = "'" + $row[$indcol].ToString() + "'";
                    }
                }
                                               
                $paramname       = "@param" + $InsertTable.Columns[$indcol].ColumnName;
                $thisQueryString = $thisQueryString.Replace($paramname, $thisValue);
            }

            $listQueryString.Add($thisQueryString);
        }

        if($typename -eq "SqlConnection")
        {           
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {
                $command                = [System.Data.SqlClient.SqlCommand]::new($qstr, $sqlconnection);
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "MySqlConnection")
        {   
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {           
                $command                = $sqlconnection.CreateCommand();
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout; 
                $command.CommandText    = $qstr;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "SQLiteConnection")
        {     
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {
                $command                = [System.Data.SQLite.SQLiteCommand]::new($sqlconnection); 
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout; 
                $command.CommandText    = $qstr;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "FbConnection")
        {         
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {
                $command                = [FirebirdSql.Data.FirebirdClient.FbCommand]::new($qstr, $sqlconnection);
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "OracleConnection")
        {          
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {     
                $command                = [Oracle.ManagedDataAccess.Client.OracleCommand]::new($qstr, $sqlconnection);
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "OleDbConnection")
        {       
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {
                $command                = [System.Data.OleDb.OleDbCommand]::new($qstr, $sqlconnection); 
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "NpgsqlConnection")
        {
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {
                $command                = [Npgsql.NpgsqlCommand]::new($qstr, $sqlconnection); 
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        }
        elseif($typename -eq "OdbcConnection")
        {        
            $transaction = $sqlconnection.BeginTransaction();
            foreach ($qstr in $listQueryString) 
            {
                $command                = [System.Data.Odbc.OdbcCommand]::new($qstr, $sqlconnection); 
                $command.Transaction    = $transaction; 
                $command.CommandTimeout = $Timeout;
                $command.ExecuteNonQuery(); 
                $command.Dispose(); 
                $resultcount++;
            }
            $transaction.Commit();
            $transaction.Dispose();
        } 
        
        if($ConnectionString.Length -gt 0)
        {
            $sqlconnection.Close();
            $sqlconnection.Dispose();
            $sqlconnection = $null;
        }

        {{{Result}}} = $resultindex;     
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ConnectionString" Tooltip="Connection string" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Provider" Tooltip="Provider sql" CatalogName="Main properties" Type="Enum" Value="SQL" EnumVariants="SQL;MySQL;SQLite;Firebird;Oracle;OleDb;PostgreSQL;Odbc" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Main properties" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="InsertTable" Tooltip="Insert table" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="TableName" Tooltip="Table name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ExcludeColumns" Tooltip="Exclude columns" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number/Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result of insert index" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Execute Procedure" InternalName="DatabaseExecuteProcedure" FriendlyName="Execute Procedure" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (SQL).png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="91" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DatabaseExecuteProcedure{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $ConnectionString = {{{ConnectionString}}};
    $User             = {{{User}}};
    $PasswordObj      = {{{Password}}};
    $Provider         = "{{{Provider}}}";   
    $sqlconnection    = {{{Connection}}};
    $NameProcedure    = {{{NameProcedure}}}; 
    $InParams         = {{{InParams}}};
    $OutParams        = {{{OutParams}}};
    $IsOutParamTable  = ${{{IsOutParamTable}}};
    $Timeout_str      = {{{Timeout}}};
        
        $Password = _checkpassword($PasswordObj);
                
        $Timeout = _toint($Timeout_str);
        if($Timeout -eq 0) { $Timeout = 60; }
        
        $resultOutParamDict  = @{};
        $resultOutParamTable = $null;
        
        if($ConnectionString.Length -gt 0)
        {
            if($Provider -eq "SQL")
            {              
                {AddTypesProvidersSQL}
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }

                $sqlconnection = [System.Data.SqlClient.SqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "MySQL")
            {     
                {AddTypesProvidersMySQL}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }
                
                $sqlconnection                  = [MySqlConnector.MySqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "SQLite")
            {           
                {AddTypesProvidersSQLite}
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }  
                
                $sqlconnection = [System.Data.SQLite.SQLiteConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Firebird")
            {       
                {AddTypesProvidersFirebird}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [FirebirdSql.Data.FirebirdClient.FbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "Oracle")
            {       
                {AddTypesProvidersOracle}  
                
                if($User.Length -gt 0) { $ConnectionString += "User Id=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Oracle.ManagedDataAccess.Client.OracleConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open(); 
                
                {AddTypesProvidersOracleEnd}
            } 
            elseif($Provider -eq "OleDb")
            {       
                {AddTypesProvidersOleDb}
                if($User.Length -gt 0) { $ConnectionString += "user=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "password=" + $Password + ";"; }
                
                $sqlconnection = [System.Data.OleDb.OleDbConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
            elseif($Provider -eq "PostgreSQL")
            {       
                {AddTypesProvidersPostgreSQL} 
                
                if($User.Length -gt 0) { $ConnectionString += "Username=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Password=" + $Password + ";"; }
                
                $sqlconnection = [Npgsql.NpgsqlConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open(); 
                
                {AddTypesProvidersPostgreSQLEnd}
            }
            elseif($Provider -eq "Odbc")
            {              
                {AddTypesProvidersOdbc}
                if($User.Length -gt 0) { $ConnectionString += "Uid=" + $User + ";"; }
                if($Password.Length -gt 0) { $ConnectionString += "Pwd=" + $Password + ";"; }

                $sqlconnection = [System.Data.Odbc.OdbcConnection]::new();
                $sqlconnection.ConnectionString = $ConnectionString;
                $sqlconnection.Open();
            }
        }
        
        $typename = $sqlconnection.GetType().Name; 

        if($typename -eq "SqlConnection")
        {           
            $command                = [System.Data.SqlClient.SqlCommand]::new($NameProcedure, $sqlconnection); 
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure; 
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];  
                    if($null -eq $value) { continue; }
                    $valuetype = $value.GetType().Name;
                    if($valuetype -eq "DateTime") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::DateTime); }
                    elseif($valuetype -eq "Double") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Float); }
                    elseif($valuetype -eq "Decimal") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Decimal); }
                    elseif($valuetype -eq "Int32") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Int); }
                    else { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::NVarChar, -1); }
                    $command.Parameters["@" + $key].Value = $value;
                }
            }  
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [System.Data.SqlDbType]::NVarChar, -1); 
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            } 
                           
            if($IsOutParamTable)
            {
                $resultOutParamTable = New-Object System.Data.DataTable;
                $adapter     = [System.Data.SqlClient.SqlDataAdapter]::new($command);
                $_           = $adapter.Fill($resultOutParamTable);
            }
            else
            {
                $command.ExecuteNonQuery(); 
            }
              
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
               
            $command.Dispose();
        }
        elseif($typename -eq "MySqlConnection")
        {
            $command                = [MySqlConnector.MySqlCommand]::new($NameProcedure, $sqlconnection);  
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.DbType]::String);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }    
            
            if($OutParams)
            {        
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [System.Data.DbType]::String);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            }

            $command.ExecuteNonQuery(); 
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }

            $command.Dispose();
        }
        elseif($typename -eq "SQLiteConnection")
        {
            $command                = [System.Data.SQLite.SQLiteCommand]::new($NameProcedure, $sqlconnection); 
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.DbType]::String);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }   
            
            if($OutParams)
            {               
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [System.Data.DbType]::String);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            }
            
            $command.ExecuteNonQuery();
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
            
            $command.Dispose(); 
        }
        elseif($typename -eq "FbConnection")
        {          
            $command                = [FirebirdSql.Data.FirebirdClient.FbCommand]::new($NameProcedure, $sqlconnection);  
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [FirebirdSql.Data.FirebirdClient.FbDbType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }    
            
            if($OutParams)
            {         
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [FirebirdSql.Data.FirebirdClient.FbDbType]::Text);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            }
            
            $command.ExecuteNonQuery();
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
            
            $command.Dispose();
        }
        elseif($typename -eq "OracleConnection")
        {          
            $command                = [Oracle.ManagedDataAccess.Client.OracleCommand]::new($NameProcedure, $sqlconnection); 
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {                     
                    $value = $InParams[$key];  
                    if($null -eq $value) { continue; }
                    $valuetype = $value.GetType().Name;
                    if($valuetype -eq "DateTime") { $command.Parameters.Add("@" + $key, [System.Data.SqlDbType]::Date); }
                    elseif($valuetype -eq "Double") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Double); }
                    elseif($valuetype -eq "Decimal") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Decimal); }
                    elseif($valuetype -eq "Int32") { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Int32); }
                    elseif(_isbase64($value.ToString())) { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Clob); }
                    else { $command.Parameters.Add("@" + $key, [Oracle.ManagedDataAccess.Client.OracleDbType]::Varchar2); }
                    $command.Parameters["@" + $key].Value = $value;
                }
            }     
            
            if($OutParams)
            {        
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [Oracle.ManagedDataAccess.Client.OracleDbType]::Varchar2);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            }     
            
            $command.ExecuteNonQuery();
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
            
            $command.Dispose();
        }
        elseif($typename -eq "OleDbConnection")
        {          
            $command                = [System.Data.OleDb.OleDbCommand]::new($NameProcedure, $sqlconnection); 
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.OleDb.OleDbType]::VarWChar);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }      
            
            if($OutParams)
            {           
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [System.Data.OleDb.OleDbType]::VarWChar);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            }  

            $command.ExecuteNonQuery();
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
            
            $command.Dispose();
        }
        elseif($typename -eq "NpgsqlConnection")
        {
            $command                = [Npgsql.NpgsqlCommand]::new($NameProcedure, $sqlconnection);  
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [NpgsqlTypes.NpgsqlDbType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }       
            
            if($OutParams)
            {       
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [NpgsqlTypes.NpgsqlDbType]::Text);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            } 

            $command.ExecuteNonQuery(); 
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
            
            $command.Dispose();
        }
        elseif($typename -eq "OdbcConnection")
        {
            $command                = [System.Data.Odbc.OdbcCommand]::new($NameProcedure, $sqlconnection); 
            $command.CommandTimeout = $Timeout;
            $command.CommandType    = [System.Data.CommandType]::StoredProcedure;
            if($InParams)
            {
                foreach($key in $InParams.Keys)
                {       
                    $value = $InParams[$key];
                    $command.Parameters.Add("@" + $key, [System.Data.Odbc.OdbcType]::Text);
                    $command.Parameters["@" + $key].Value = $value;
                }
            }     
            
            if($OutParams)
            {         
                foreach($name in $OutParams)
                {       
                    $command.Parameters.Add("@" + $name, [System.Data.Odbc.OdbcType]::Text);
                    if($name.ToLower() -eq "returnvalue")
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::ReturnValue;
                    }
                    else
                    {
                        $command.Parameters["@" + $name].Direction = [System.Data.ParameterDirection]::Output;
                    }
                }
            } 

            $command.ExecuteNonQuery();
            
            if($OutParams)
            {
                foreach($name in $OutParams)
                {                            
                    $resultOutParamDict[$name] = $command.Parameters["@" + $name].Value;
                }
            }
            
            $command.Dispose();
        } 
        
        if($ConnectionString.Length -gt 0)
        {
            $sqlconnection.Close();
            $sqlconnection.Dispose();
            $sqlconnection = $null;
        }  
        
        if($IsOutParamTable)
        {
            {{{Result}}} = $resultOutParamTable;
        }
        else
        {
            {{{Result}}} = $resultOutParamDict;
        }             
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ConnectionString" Tooltip="Connection string" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Provider" Tooltip="Provider sql" CatalogName="Main properties" Type="Enum" Value="SQL" EnumVariants="SQL;MySQL;SQLite;Firebird;Oracle;OleDb;PostgreSQL;Odbc" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Connection" Tooltip="Connection instance" CatalogName="Main properties" Type="Variable" Value="$Connection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Connection" />
                                   <core:Property Name="NameProcedure" Tooltip="Name Procedure" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="InParams" Tooltip="In params" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="OutParams" Tooltip="OutParams" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="IsOutParamTable" Tooltip="OutParamTable" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout in sec" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result of out param" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable/Data Table" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Load DBF DataBase" InternalName="LoadDBFDataBase" FriendlyName="Load DBF DataBase" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Database (DBF).png" ImageType="LeftImage" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LoadDBFDataBase{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $DbfPath     = {{{Path}}};
    $EncodingStr = "{{{Encoding}}}";
        
        $DbfPath = ExpandConstFilePath $DbfPath 
        
        if(![System.IO.File]::Exists($DbfPath))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $DbfPath");
            return;
        } 
        
        $cls = [MainHelpers.ClassReadDbf]::new();
                
        {{{Table}}} = $cls.ReadDbf($DbfPath, $EncodingStr);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="Path to dbf file" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Encoding" Tooltip="Encoding" CatalogName="Main properties" Type="Enum" Value="ANSI" EnumVariants="ANSI;UTF8" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Table" Tooltip="DataTable " CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="GoogleSheetsToolboxSettings" Name="Google Sheets" ToolboxGridType="List" AliasDescription="Work with Google Sheets">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Get Cell Value" InternalName="GetGoogleSheetsCellValue" FriendlyName="Get Cell Value" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\google-sheets 1.png" ImageType="LeftImage" Proportional="True" Version="35">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetGoogleSheetsCellValue{{{block_id}}}
{
	try
	{
    {AddTypesGoogleSheets}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                 
    $DocumentID = {{{DocumentID}}}; 
    $SheetName  = {{{SheetName}}};
    $Range      = {{{Range}}};
    
        {{{Result}}} = "";
        
        if($null -eq $script:__GoogleSheetsID) { $script:__GoogleSheetsID = @{}; }  
        $SheetsService = $null;        
        if($script:__GoogleSheetsID.ContainsKey($DocumentID)) { $SheetsService = $script:__GoogleSheetsID[$DocumentID]; }
        if($null -eq $SheetsService)
        {
            $SheetsService = [NamespaceGoogle.ClassGoogleSheets]::Authorize();
            if($null -eq $SheetsService)
            {
                $__Error.Exception("ERRORCONST_ERRORAUTHGOOGLE");
                return;
            }
            $script:__GoogleSheetsID.Add($DocumentID, $SheetsService);
        } 
        
        if($SheetName.Length -ne 0)
        {
            $Range = "'"+ $SheetName +"'!" + $Range;
        }

        $request = $SheetsService.Spreadsheets.Values.Get($DocumentID, $Range);
        $response = $request.Execute();
        $values = $response.Values;
        if($values -ne $null -and $values.Count -gt 0)
        {
            {{{Result}}} = $values[0][0];
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="DocumentID" Tooltip="Identificator document" CatalogName="Required" Type="Expression" Value="$DocumentID" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SheetName" Tooltip="Sheet name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Range" Tooltip="Range name cell (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Variable to save result into" CatalogName="Output" Type="Variable" Value="$Result" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Cell Value" InternalName="SetGoogleSheetsCellValue" FriendlyName="Set Cell Value" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\google-sheets 1.png" ImageType="LeftImage" Proportional="True" Version="60">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetGoogleSheetsCellValue{{{block_id}}}
{
	try
	{
    {AddTypesGoogleSheets}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                 
    $DocumentID = {{{DocumentID}}};  
    $SheetName  = {{{SheetName}}};
    $Range      = {{{Range}}};
    $Value      = {{{Value}}};   
    $TypeValue  = "{{{TypeValue}}}";
    $TypeWrite  = "{{{TypeWrite}}}";
    
        if($null -eq $script:__GoogleSheetsID) { $script:__GoogleSheetsID = @{}; }  
        $SheetsService = $null;        
        if($script:__GoogleSheetsID.ContainsKey($DocumentID)) { $SheetsService = $script:__GoogleSheetsID[$DocumentID]; }
        if($null -eq $SheetsService)
        {
            $SheetsService = [NamespaceGoogle.ClassGoogleSheets]::Authorize();
            if($null -eq $SheetsService)
            {
                $__Error.Exception("ERRORCONST_ERRORAUTHGOOGLE");
                return;
            }
            $script:__GoogleSheetsID.Add($DocumentID, $SheetsService);
        }
           
        $valueInputOption = 1;
        $value_str = [string]$Value;
        if($TypeWrite -eq "Raw")
        {
            if($TypeValue -eq "Number")
            {
                $writeValue = [float]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
            }
            elseif($TypeValue -eq "Money")
            {                                     
                $valmoney   = [decimal]::Parse($value_str.Replace(",", "."), [CultureInfo]::InvariantCulture);
                $writeValue = [decimal][Math]::Round($valmoney, 2);
            } 
            else 
            {
                $writeValue = $value_str;
            }  
            
            if($writeValue.GetType().Name -eq "String")
            {
                if($writeValue.Length -gt 0)
                {
                    if($writeValue[0] -eq "=") 
                    { $valueInputOption = 2; }
                }    
            }
        }
        else
        {
            $writeValue = $Value;
            $valueInputOption = 2;
        } 
        
        #count rows
        $body        = [NamespaceGoogle.ClassGoogleSheets]::GetValueRange(1);  
        $body.Values[0].Add($writeValue);
               
        if($SheetName.Length -ne 0)
        {
            $Range = "'"+ $SheetName +"'!" + $Range;
        }
        
        $update = $SheetsService.Spreadsheets.Values.Update($body, $DocumentID, $Range);
        $update.ValueInputOption = $valueInputOption;
        $_ = $update.Execute();
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="DocumentID" Tooltip="Identificator document" CatalogName="Required" Type="Expression" Value="$DocumentID" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SheetName" Tooltip="Sheet name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Range" Tooltip="Range name celll (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Value" Tooltip="Variable to save result into" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeValue" Tooltip="Type value" CatalogName="Main properties" Type="Enum" Value="Text" EnumVariants="Text;Number;Money" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="TypeWrite" Tooltip="Type write" CatalogName="Main properties" Type="Enum" Value="Raw" EnumVariants="Raw;UserEntered" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Range" InternalName="GetGoogleSheetsRange" FriendlyName="Get Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\google-sheets 1.png" ImageType="LeftImage" Proportional="True" Version="27">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetGoogleSheetsRange{{{block_id}}}
{
    try
    {
    {AddTypesGoogleSheets}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
                 
    $DocumentID = {{{DocumentID}}}; 
    $SheetName  = {{{SheetName}}};
    $Range      = {{{Range}}};  
    $HasHeaders = ${{{HasHeaders}}};
    
        $resulttable = New-Object System.Data.DataTable;
        
        if($null -eq $script:__GoogleSheetsID) { $script:__GoogleSheetsID = @{}; }  
        $SheetsService = $null;        
        if($script:__GoogleSheetsID.ContainsKey($DocumentID)) { $SheetsService = $script:__GoogleSheetsID[$DocumentID]; }
        if($null -eq $SheetsService)
        {
            $SheetsService = [NamespaceGoogle.ClassGoogleSheets]::Authorize();
            if($null -eq $SheetsService)
            {
                $__Error.Exception("ERRORCONST_ERRORAUTHGOOGLE");
                return;
            }
            $script:__GoogleSheetsID.Add($DocumentID, $SheetsService);
        }   
        
        if($SheetName.Length -ne 0)
        {
            $Range = "'"+ $SheetName +"'!" + $Range;
        }

        $request = $SheetsService.Spreadsheets.Values.Get($DocumentID, $Range);
        $response = $request.Execute();
        $values = $response.Values;
        if($values -ne $null)
        {
            $indexCol = 0;
            $indexRow = 0; 
            
            foreach($row in $values)
            {
                $indexCol = 0;
                foreach($cell in $row)
                {
                    while ($indexCol -ge $resultTable.Columns.Count)
                    {
                        $_ = $resultTable.Columns.Add([System.Guid]::NewGuid().ToString());
                    }

                    while ($indexRow -ge $resultTable.Rows.Count)
                    {
                        $arr = $null;
                        for ($i = 0; $i -lt $resultTable.Columns.Count; $i++) 
                        { 
                            $arr += @(""); 
                        }
                        $_ = $resultTable.Rows.Add($arr);
                    }

                    $resultTable.Rows[$indexRow][$indexCol] = $cell;
                    $indexCol++;
                }
                $indexRow++;
            }
        } 
        
        if($HasHeaders -and $resultTable.Rows.Count -gt 0)
        {
            $firstRow = $resultTable.Rows[0];
            for ($i = 0; $i -lt $resultTable.Columns.Count; $i++)
            {      
                $cellValue  = $firstRow[$i];
                $columnName = _tostring($cellValue);  
                if([string]::IsNullOrEmpty($columnName)) { $columnName = "column" + ($i + 1); }
                while($resultTable.Columns.Contains($columnName)) { $columnName += $resultTable.Columns.Count.ToString(); }
                $resultTable.Columns[$i].ColumnName = $columnName;
            } 
            $resultTable.Rows.RemoveAt(0);
        }
        else
        {
            for ($i = 0; $i -lt $resultTable.Columns.Count; $i++)
            {
                $resultTable.Columns[$i].ColumnName = "column" + ($i + 1);
            }
        }
        
        
        {{{Result}}} = $resulttable;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="DocumentID" Tooltip="Identificator document" CatalogName="Required" Type="Expression" Value="$DocumentID" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SheetName" Tooltip="Sheet name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Range" Tooltip="Range name cell (eq. &quot;A1:C3&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="HasHeaders" Tooltip="First row as headers" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Return table" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Set Range" InternalName="SetGoogleSheetsRange" FriendlyName="Set Range" PathStyle="{StaticResource GreenRectangle}" PathStyle_DragThumb="{StaticResource GreenRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\google-sheets 1.png" ImageType="LeftImage" Proportional="True" Version="43">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetGoogleSheetsRange{{{block_id}}}
{
	try
	{
    {AddTypesGoogleSheets}
    
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                 
    $DocumentID    = {{{DocumentID}}}; 
    $SheetName     = {{{SheetName}}};
    $Range         = {{{Range}}};
    $Table         = {{{Table}}}; 
    $TypeWrite     = "{{{TypeWrite}}}"; 
    $InsertHeaders = ${{{InsertHeaders}}};
    
        if($null -eq $script:__GoogleSheetsID) { $script:__GoogleSheetsID = @{}; }  
        $SheetsService = $null;        
        if($script:__GoogleSheetsID.ContainsKey($DocumentID)) { $SheetsService = $script:__GoogleSheetsID[$DocumentID]; }
        if($null -eq $SheetsService)
        {
            $SheetsService = [NamespaceGoogle.ClassGoogleSheets]::Authorize();
            if($null -eq $SheetsService)
            {
                $__Error.Exception("ERRORCONST_ERRORAUTHGOOGLE");
                return;
            }
            $script:__GoogleSheetsID.Add($DocumentID, $SheetsService);
        }
              
        $valueInputOption = 1;
        if($TypeWrite -ne "Raw")
        {
            $valueInputOption = 2;
        } 
               
        $indRowBody = 0;        
        $rowcount = $Table.Rows.Count; 
        
        if($InsertHeaders)
        {
            $rowcount   = $rowcount + 1; 
            $indRowBody = 1;
        }
        
        #count rows
        $body = [NamespaceGoogle.ClassGoogleSheets]::GetValueRange($rowcount);
        
        if($InsertHeaders)
        {
            for($i = 0; $i -lt $Table.Columns.Count; $i++)
            {
                $columnName = $Table.Columns[$i].ColumnName;
                $body.Values[0].Add($columnName);
            }
        }
        
        for($i = 0; $i -lt $Table.Rows.Count; $i++)
        {
            foreach($c in $Table.Rows[$i].ItemArray)
            {       
                $body.Values[$indRowBody + $i].Add($c);
            }
        }
        
        if($SheetName.Length -ne 0)
        {
            $Range = "'"+ $SheetName +"'!" + $Range;
        }
        
        $update                  = $SheetsService.Spreadsheets.Values.Update($body, $DocumentID, $Range);
        $update.ValueInputOption = $valueInputOption;
        $_                       = $update.Execute();
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                                                                                                
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="DocumentID" Tooltip="Identificator document" CatalogName="Required" Type="Expression" Value="$DocumentID" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="SheetName" Tooltip="Sheet name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Range" Tooltip="Range name celll (eq. &quot;A1&quot;)" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table to insert" CatalogName="Required" Type="Variable" Value="" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="TypeWrite" Tooltip="Type write" CatalogName="Main properties" Type="Enum" Value="Raw" EnumVariants="Raw;UserEntered" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="InsertHeaders" Tooltip="Insert headers" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="RDPAutomation" Name="RDP" ToolboxGridType="List" AliasDescription="Create or use RDP or Citrix connection. transfer files between local and remote RDP connection">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Generate Connection" InternalName="RDPGenerateConnection" FriendlyName="Generate Connection" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="34" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPGenerateConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $Server            = {{{Server}}};
    $Port              = {{{Port}}};
    $User              = {{{User}}};
    $PasswordObj          = {{{Password}}}; 
    $ScreenMode        = "{{{ScreenMode}}}"; 
    $RedirectPrinters  = ${{{RedirectPrinters}}};
    $RedirectClipboard = ${{{RedirectClipboard}}};
    $QualityConnect    = "{{{QualityConnect}}}";
  
        $Password = _checkpassword($PasswordObj);
    
        if($Port.Length -eq 0)
        {
            $Port = "3389";
        }

        $data = [RDPHelpers.ClassMain]::GenerateConnection($Server, [int]$Port, $User, $Password, $ScreenMode, $RedirectPrinters, $RedirectClipboard, $QualityConnect);
        if($data.Length -eq 0)
        {
            $__Error.Exception("ERRORCONST_ERRORGENERATECONNECT");
            return;
        }

        {{{RDPData}}} = $data;    
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Server" Tooltip="Server for connect. Domain or IP address" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Port" Tooltip="Port. Default port 3389" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="User" Tooltip="User for connect" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password for connect" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="RDPData" Tooltip="RDP Data" CatalogName="Output" Type="Variable" Value="$RDPData" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ScreenMode" Tooltip="Screen mode" CatalogName="Main properties" Type="Enum" Value="Full screen" EnumVariants="Full screen;1920x1080;1680x1050;1400x1050;1440x900;1366x768;1280x1024;1280x800;1280x768;1280x720;1024x768;800x600;640x480" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="RedirectPrinters" Tooltip="Redirect printers" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="RedirectClipboard" Tooltip="Redirect clipboard" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="QualityConnect" Tooltip="Quality connect" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;Maximum;Normal;Minimum" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create Connection" InternalName="RDPCreateConnection" FriendlyName="Create Connection" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="32" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPCreateConnection{{{block_id}}}
{    
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
        $RDPData    = {{{RDPData}}}; 
        $TimeoutObj = {{{Timeout}}};
        
        $Timeout = _toint($TimeoutObj); 
        $Timeout = $Timeout * 1000;
  
        [string]$datastr = $RDPData;
        if([System.IO.File]::Exists($RDPData))
        {
            $datastr = [System.IO.File]::ReadAllText($RDPData);
        }

        $servername = "";
        $ind1 = $datastr.IndexOf("full address:s:");
        if($ind1 -gt 0)
        {
            $ind1 += "full address:s:".Length;
            $ind2 = $datastr.IndexOf("`n", $ind1);
            $servername = $datastr.Substring($ind1, $ind2 - $ind1);     
        } 
        
        $tempname = [System.IO.Path]::GetRandomFileName();                                           
        $tempfile = [System.IO.Path]::Combine($__WorkPath, $tempname);
        $tempfile = [System.IO.Path]::ChangeExtension($tempfile, ".rdp");
        [System.IO.File]::WriteAllText($tempfile, $datastr);

        $proc = [System.Diagnostics.Process]::new();
        $proc.StartInfo.FileName = "mstsc.exe";
        $proc.StartInfo.UseShellExecute = $false;
        $proc.StartInfo.Arguments = """" + $tempfile + """";
        $_ = $proc.Start();
        $_ = $proc.WaitForInputIdle();
                              
        $data = [RDPHelpers.ClassMain]::ConnectInstance2Id([int]$proc.Id, $servername, $Timeout);
        if($data.Length -eq 0)
        {
            $__Error.Exception("ERRORCONST_ERRORCREATECONNECT");
            return;
        }
        
        {{{ProcessID}}} = $data;   
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="RDPData" Tooltip="RDP data or file (.rdp)" CatalogName="Required" Type="Expression" Value="$RDPData" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ProcessID" Tooltip="ProcessID" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Connect Instance" InternalName="RDPConnectInstance" FriendlyName="Connect Instance" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPConnectInstance{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
       
    $ServerName = {{{ServerName}}};
  
        $data = [RDPHelpers.ClassMain]::ConnectInstance($ServerName);
        if($data.Length -eq 0)
        {
            $__Error.Exception("ERRORCONST_ERRORGENERATECONNECT");
            return;
        }
        
        {{{ProcessID}}} = $data;  
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ServerName" Tooltip="Server name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="ProcessID" CatalogName="Output" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Close Connection" InternalName="RDPCloseConnection" FriendlyName="Close Connection" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="18" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPCloseConnection{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $ProcessID = {{{ProcessID}}};
  
        Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RDPCloseConnection</InternalName><ProcessID>$ProcessID</ProcessID></block>"); 
        
        [RDPHelpers.ClassMain]::CloseConnection($ProcessID);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="ProcessID" CatalogName="Required" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Disconnect session" InternalName="RDPDisconnectSession" FriendlyName="Disconnect session" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPDisconnectSession{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
        Write-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RDPDisconnectSession</InternalName></block>");
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Operation with file" InternalName="RDPOperationFile" FriendlyName="Operation with file" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="15" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPOperationFile{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $ProcessID = {{{ProcessID}}};
    $RemoteFile = {{{RemoteFile}}};
    $LocalFile = {{{LocalFile}}};  
    $Timeout = {{{Timeout}}};
  
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RDPOperationFile</InternalName><ProcessID>$ProcessID</ProcessID><RemoteFile>$RemoteFile</RemoteFile><LocalFile>$LocalFile</LocalFile><OperationType>{{{OperationType}}}</OperationType><Timeout>$Timeout</Timeout></block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="ProcessID" CatalogName="Required" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="RemoteFile" Tooltip="Remote path to file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LocalFile" Tooltip="Local path to file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OperationType" Tooltip="Operation type" CatalogName="Main properties" Type="Enum" Value="Upload" EnumVariants="Upload;Download" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Timeout" Tooltip="Wait timeout" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Run script" InternalName="RDPRunScript" FriendlyName="Run script" PathStyle="{StaticResource BlueStrongRectangle}" PathStyle_DragThumb="{StaticResource BlueStrongRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_RDP.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RDPRunScript{{{block_id}}}
{    
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $ProcessID    = {{{ProcessID}}};
    $LocalFile    = {{{LocalFile}}};  
    $TimeoutStart = {{{TimeoutStart}}};
    $Timeout      = {{{Timeout}}}; 
  
    $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>RDPRunScript</InternalName><ProcessID>$ProcessID</ProcessID><LocalFile>$LocalFile</LocalFile><Timeout>$Timeout</Timeout><Timeout2>$TimeoutStart</Timeout2><DontUploadFile>{{{DontUploadFile}}}</DontUploadFile></block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ProcessID" Tooltip="ProcessID" CatalogName="Required" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Reference" />
                                   <core:Property Name="LocalFile" Tooltip="Local path to file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DontUploadFile" Tooltip="Dont upload file" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TimeoutStart" Tooltip="Wait timeout start" CatalogName="Main properties" Type="Expression" Value="20" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Timeout" Tooltip="Wait timeout" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Archive" Name="Archive" ToolboxGridType="List" AliasDescription="Extract or create archives in ZIP and other formats">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Extract Archive" InternalName="ExtractArchive" FriendlyName="Extract Archive" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_extract.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="48" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ExtractArchive{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $FileName    = {{{FileName}}};
    $TargetPath  = {{{TargetPath}}}; 
    $NameAsPath  = ${{{NameAsPath}}};
    $TypeArchive = "{{{TypeArchive}}}";
    $PasswordObj    = {{{Password}}};
    
        {AddTypesArchive} 
             
        $Password = _checkpassword($PasswordObj);
             
        $FileName = ExpandConstFilePath $FileName
        $TargetPath = ExpandConstFilePath $TargetPath
        
        $FileName = [System.IO.Path]::GetFullPath($FileName); 
        
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        }
        
        if($TargetPath.Length -eq 0)
        {
            $TargetPath = [System.IO.Path]::GetDirectoryName($FileName);
        }
        
        if($NameAsPath) 
        {
            $TargetPath = [System.IO.Path]::Combine($TargetPath, [System.IO.Path]::GetFileNameWithoutExtension($FileName));        
        }

        $extractoptions                 = [SharpCompress.Common.ExtractionOptions]::new();
        $extractoptions.ExtractFullPath = $true;
        $extractoptions.Overwrite       = $true;

        $readeroptions = [SharpCompress.Readers.ReaderOptions]::new();
        $archenc = [SharpCompress.Common.ArchiveEncoding]::new();
        $archenc.Forced = [System.Text.Encoding]::GetEncoding(866);
        $readeroptions.ArchiveEncoding = $archenc;
                    
        if(-not [string]::IsNullOrEmpty($Password))
        {
            $readeroptions.Password = $Password;
        } 
        
        [System.IO.Directory]::CreateDirectory($TargetPath);
        
        $stream = [System.IO.File]::OpenRead($FileName);

        if($TypeArchive -eq "auto")
        {      
            $ext = [System.IO.Path]::GetExtension($FileName).ToLower();
            
            while($true)
            {
                if($ext -eq ".zip")
                {
                    $TypeArchive = "zip";
                    break;
                }
                elseif($ext -eq ".rar")
                {
                    $TypeArchive = "rar";
                    break;
                }
                elseif($ext -eq ".7z")
                {
                    $TypeArchive = "7z";
                    break;
                }
                elseif($ext -eq ".tar")
                {
                    $TypeArchive = "tar";
                    break;
                }
                elseif($ext -eq ".gz")
                {
                    $TypeArchive = "gz";
                    break;
                }
                elseif($ext -eq ".bz2")
                {
                    $TypeArchive = "bz2";
                    break;
                }
                elseif($ext -eq ".lz")
                {
                    $TypeArchive = "lz";
                    break;
                }
                
                $reader = [SharpCompress.Readers.ReaderFactory]::Open($stream, $readeroptions);
                [SharpCompress.Readers.IReaderExtensions]::WriteAllToDirectory($reader, $TargetPath, $extractoptions);
                $reader.Dispose();
                break; 
            }
        }
        
        if ($TypeArchive -eq "zip") 
        {
            $archive = [SharpCompress.Archives.Zip.ZipArchive]::Open($stream, $readeroptions);
            [SharpCompress.Archives.IArchiveExtensions]::WriteToDirectory($archive, $TargetPath, $extractoptions);
            $archive.Dispose();
        }
        elseif ($TypeArchive -eq "rar") 
        {
            $archive = [SharpCompress.Archives.Rar.RarArchive]::Open($stream, $readeroptions);
            [SharpCompress.Archives.IArchiveExtensions]::WriteToDirectory($archive, $TargetPath, $extractoptions);
            $archive.Dispose();
        }
        elseif ($TypeArchive -eq "7z") 
        {
            $archive = [SharpCompress.Archives.SevenZip.SevenZipArchive]::Open($stream, $readeroptions);
            [SharpCompress.Archives.IArchiveExtensions]::WriteToDirectory($archive, $TargetPath, $extractoptions);
            $archive.Dispose();
        }
        elseif ($TypeArchive -eq "tar") 
        {
            $archive = [SharpCompress.Archives.Tar.TarArchive]::Open($stream, $readeroptions);
            [SharpCompress.Archives.IArchiveExtensions]::WriteToDirectory($archive, $TargetPath, $extractoptions);
            $archive.Dispose();
        }
        elseif ($TypeArchive -eq "gz") 
        {
            $archive = [SharpCompress.Archives.GZip.GZipArchive]::Open($stream, $readeroptions);
            [SharpCompress.Archives.IArchiveExtensions]::WriteToDirectory($archive, $TargetPath, $extractoptions);
            $archive.Dispose();
        }
        elseif ($TypeArchive -eq "bz2") 
        {
            $reader = [SharpCompress.Readers.ReaderFactory]::Open($stream, $readeroptions);
            [SharpCompress.Readers.IReaderExtensions]::WriteAllToDirectory($reader, $TargetPath, $extractoptions);
            $reader.Dispose();
        }
        elseif ($TypeArchive -eq "lz") 
        {
            $reader = [SharpCompress.Readers.ReaderFactory]::Open($stream, $readeroptions);
            [SharpCompress.Readers.IReaderExtensions]::WriteAllToDirectory($reader, $TargetPath, $extractoptions);
            $reader.Dispose();
        }

        $stream.Dispose();
        
        {{{PathUnpack}}} = $TargetPath;        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    } 
    finally
    {
        {AddTypesArchiveEnd}
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="File for extract" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TargetPath" Tooltip="Path for extract" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NameAsPath" Tooltip="Add name archive as path" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TypeArchive" Tooltip="Type archive" CatalogName="Main properties" Type="Enum" Value="auto" EnumVariants="auto;zip;rar;7z;tar;bz2;gz;lz" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="PathUnpack" Tooltip="Path result" CatalogName="Output" Type="Variable" Value="$PathUnpack" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Create ZIP Archive" InternalName="CreateZIPArchive" FriendlyName="Create ZIP Archive" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_zip.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="32" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CreateZIPArchive{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileOrPath  = {{{FileOrPath}}};
    $FileArchive = {{{FileArchive}}};
    $PasswordObj = {{{Password}}};
    
        {AddTypesArchive}
              
        $FileOrPath = ExpandConstFilePath $FileOrPath 
        $FileArchive = ExpandConstFilePath $FileArchive 
        
        [System.IO.File]::Delete($FileArchive);
        
        $Password = _checkpassword($PasswordObj);
        
        if([string]::IsNullOrEmpty($Password))
        {
            $archenc = [SharpCompress.Common.ArchiveEncoding]::new();
            $archenc.Forced = [System.Text.Encoding]::GetEncoding(866);
            $options = [SharpCompress.Writers.WriterOptions]::new([SharpCompress.Common.CompressionType]::Deflate);
            $options.ArchiveEncoding = $archenc;

            if([System.IO.File]::Exists($FileOrPath))
            {
                $zip = [System.IO.File]::OpenWrite($FileArchive);
                $zipWriter = [SharpCompress.Writers.WriterFactory]::Open($zip, [SharpCompress.Common.ArchiveType]::Zip, $options);   
                $stream = [System.IO.File]::OpenRead($FileOrPath);
                $fi = [System.IO.FileInfo]::new($FileOrPath);
                $zipWriter.Write([System.IO.Path]::GetFileName($FileOrPath), $stream, $fi.LastWriteTime);
                $stream.Dispose();
                $zipWriter.Dispose();
                $zip.Dispose();
            }
            else 
            {
                $archive = [SharpCompress.Archives.Zip.ZipArchive]::Create();
                [SharpCompress.Archives.IWritableArchiveExtensions]::AddAllFromDirectory($archive, $FileOrPath); 
                [SharpCompress.Archives.IWritableArchiveExtensions]::SaveTo($archive, $FileArchive, $options);
                $archive.Dispose();   
            }
        }
        else
        {
            $zip = [Ionic.Zip.ZipFile]::new();
            
            $zip.AlternateEncodingUsage = [Ionic.Zip.ZipOption]::Always;
            $zip.AlternateEncoding      = [System.Text.Encoding]::GetEncoding(866); 
            $zip.Password               = $Password;
            
            if([System.IO.File]::Exists($FileOrPath))
            {
                $zip.AddFile($FileOrPath);
            }
            else
            {
                $zip.AddDirectory($FileOrPath);
            }
            
            $zip.Save($FileArchive);
            $zip.Dispose();
        } 
     
        {{{ResultFileArchive}}} = $FileArchive;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    finally
    {
        {AddTypesArchiveEnd}
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileOrPath" Tooltip="File or path to pack" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileArchive" Tooltip="File name archive" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text/SecureString" />
                                   <core:Property Name="ResultFileArchive" Tooltip="ResultFileArchive" CatalogName="Output" Type="Variable" Value="$FileArchive" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="BusinessMethods" Name="Business Methods" ToolboxGridType="List">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Yandex Translate" InternalName="YandexTranslate" FriendlyName="Yandex Translate" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_Translate.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="33" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function YandexTranslate{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InData         = {{{InData}}};
    $SourceLanguage = "{{{SourceLanguage}}}"; 
    $TargetLanguage = "{{{TargetLanguage}}}"; 
      
        
        $InDataType = $InData.GetType().Name;
        
        $texts = New-Object Collections.Generic.List[string];
        if($InDataType.Contains("List") -or $InDataType.Contains("[]"))
        {
            foreach($s in $InData) { $texts.Add($s.ToString()); }
        }
        else 
        {
            $texts.Add($InData.ToString());
        }
        
        if(!$script:__YandexTranslate) { $script:__YandexTranslate = [BusinessMethods.ClassYandexTranslate]::new(); }  
        
        $resultdata = $script:__YandexTranslate.Processed($texts, $SourceLanguage, $TargetLanguage);
        if(!$resultdata)
        {
            $__Error.Exception("ERRORCONST_ERRORYANDEXTRANSLATE");
            return;
        } 
        
        if($InDataType.Contains("List") -or $InDataType.Contains("[]"))
        {              
            {{{Result}}} = New-Object Collections.Generic.List[string];
            foreach($s in $resultdata) { {{{Result}}}.Add($s); }
        }
        else 
        {
            {{{Result}}} = $resultdata[0];
        }
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InData" Tooltip="In data" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List/Text" />
                                   <core:Property Name="SourceLanguage" Tooltip="source Language" CatalogName="Main properties" Type="Enum" Value="auto" EnumVariants="auto;en;ru" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TargetLanguage" Tooltip="target Language" CatalogName="Main properties" Type="Enum" Value="ru" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List/Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Yandex Synthesize Speech" InternalName="YandexSynthesizeSpeech" FriendlyName="Yandex Synthesize Speech" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_SynthesizeSpeech.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function YandexSynthesizeSpeech{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Text       = {{{Text}}};
    $LangVoice  = "{{{LangVoice}}}"; 
    $TargetFile = {{{TargetFile}}}; 
      
           
        if([string]::IsNullOrEmpty($TargetFile)) 
        {     
            $tempname = [System.IO.Path]::GetRandomFileName();                                           
            $tempfile = [System.IO.Path]::Combine($__WorkPath, $tempname);
            $TargetFile = [System.IO.Path]::ChangeExtension($tempfile, ".mp3");
        }
        
        $TargetFile = ExpandConstFilePath $TargetFile
                      
        if(!$script:__YandexSpeechKit) { $script:__YandexSpeechKit = [BusinessMethods.ClassYandexSpeechKit]::new(); }  
             
        $strarr = $LangVoice.Split(":");
        
        $psResult = $script:__YandexSpeechKit.SynthesizeSpeech($Text, $strarr[1], $strarr[0], $TargetFile); 
        if($__Error.CheckResult($psResult)) { return; }

        {{{ResultFile}}} = $psResult.Result;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Text" Tooltip="Text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LangVoice" Tooltip="LangVoice" CatalogName="Main properties" Type="Enum" Value="alena:ru-RU" EnumVariants="alena:ru-RU;filipp:ru-RU;ermil:ru-RU;jane:ru-RU;madirus:ru-RU;omazh:ru-RU;zahar:ru-RU;john:en-US;lea:de-DE;amira:kk-KK;madi:kk-KK;nigora:uz-UZ" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TargetFile" Tooltip="Target file" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResultFile" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$ResultFile" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Yandex Recognize Speech" InternalName="YandexRecognizeSpeech" FriendlyName="Yandex Recognize Speech" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_RecognizeSpeech.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function YandexRecognizeSpeech{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $AudioFile       = {{{AudioFile}}};
    $Lang  = "{{{Lang}}}"; 
    
      
        $AudioFile = ExpandConstFilePath $AudioFile  
        
        if(-not [System.IO.File]::Exists($AudioFile))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $AudioFile");
            return;
        }
                      
        if(!$script:__YandexSpeechKit) { $script:__YandexSpeechKit = [BusinessMethods.ClassYandexSpeechKit]::new(); }  
                     
        $psResult = $script:__YandexSpeechKit.RecognizeSpeech($AudioFile, $Lang); 
        if($__Error.CheckResult($psResult)) { return; }

        {{{Result}}} = $psResult.Result;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AudioFile" Tooltip="Audio file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Lang" Tooltip="Lang" CatalogName="Main properties" Type="Enum" Value="ru-RU" EnumVariants="auto;ru-RU;en-US;de-DE;es-ES;fi-FI;fr-FR;it-IT;kk-KK;nl-NL;pl-PL;pt-PT;pt-BR;sv-SE;tr-TR;uz-UZ" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Names Split" InternalName="NamesSplit" FriendlyName="Names Split" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_people.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="28" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function NamesSplit{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InData      = {{{InData}}};
    $OnlyCorrect = ${{{OnlyCorrect}}}; 
      
        {AddTypesCorrectFIO}
        
        if(!$script:__CorrectFIO) { $script:__CorrectFIO = [CorrectFIO.ClassCorrectFIO]::new(); }
        
        $result = $script:__CorrectFIO.Processed($InData);
        if(!$result)
        {
            $__Error.Exception("ERRORCONST_ERRORNAMESCORRECTION");
            return;
        }
         
        if($OnlyCorrect)
        {
            if(-not $result.NameCorrect -and -not $result.SurnameCorrect)
            {
                $__Error.Exception("ERRORCONST_ERRORNAMESCORRECTION");
                return;
            } 
        }

        {{{Surname}}} = $result.Surname;
        {{{Name}}} = $result.Name;
        {{{Patronymic}}} = $result.Patronymic;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InData" Tooltip="In data" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OnlyCorrect" Tooltip="Only correct" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Surname" Tooltip="Surname" CatalogName="Output" Type="Variable" Value="$Surname" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Name" Tooltip="Name" CatalogName="Output" Type="Variable" Value="$Name" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Patronymic" Tooltip="Patronymic" CatalogName="Output" Type="Variable" Value="$Patronymic" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="PhoneNumber Normalization" InternalName="PhoneNumberNormalization" FriendlyName="PhoneNumber Normalization" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_Phone.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="13" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function PhoneNumberNormalization{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InData        = {{{InData}}};
    $DefaultRegion = "{{{DefaultRegion}}}";
      
        
        if(!$script:__PhoneNumber) { $script:__PhoneNumber = [BusinessMethods.ClassPhoneNumber]::new(); }
        
        $result = $script:__PhoneNumber.Validation($InData, $DefaultRegion);
        if(!$result)
        {
            $__Error.Exception("ERRORCONST_ERRORPHONENORMALIZATION");
            return;
        }

        {{{Result}}} = $result;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InData" Tooltip="In data" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DefaultRegion" Tooltip="Default region" CatalogName="Main properties" Type="Enum" Value="RU" EnumVariants="RU;US;DE;FR" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Result" Tooltip="Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Search Organization" InternalName="SearchOrganization" FriendlyName="Search Organization" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_SearchOrg.png" ImageType="LeftImage" Proportional="True" Version="24" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SearchOrganization{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $InnOrg         = {{{InnOrg}}}; 
    $NameOrg        = {{{NameOrg}}}; 
    $CityOrg        = {{{CityOrg}}};
    $TitlesLanguage = "{{{TitlesLanguage}}}";
        
        if(!$script:__DaData) { $script:__DaData = [PSHelpers.ClassDaData]::new(); }
        
        $returnvalue = $script:__DaData.SearchOrganization($InnOrg, $NameOrg, $CityOrg);
        if($returnvalue.IsError)
        {      
            $__Error.Exception("ERRORCONST_INTERNALBLOCKERROR: " + $returnvalue.ErrorMessage);
            return;
        } 

        {{{Items}}} = $returnvalue.GetItems($TitlesLanguage); 
        {{{ItemsCount}}} = $returnvalue.Count;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }    
    $__Error.Quit();                     
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InnOrg" Tooltip="Inn org" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NameOrg" Tooltip="Name org" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CityOrg" Tooltip="City org" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TitlesLanguage" Tooltip="Titles Language" CatalogName="Main properties" Type="Enum" Value="en" EnumVariants="en;ru" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Items" Tooltip="Array of hashtables" CatalogName="Output" Type="Variable" Value="$Items" Visible="True" DefaultValue="&quot;&quot;" ValueType="Array" />
                                   <core:Property Name="ItemsCount" Tooltip="Attributes" CatalogName="Output" Type="Variable" Value="$Count" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Currency To String" InternalName="CurrencyToString" FriendlyName="Currency To String" PathStyle="{StaticResource RedVividRectangle}" PathStyle_DragThumb="{StaticResource RedVIvidRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_money.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="19" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CurrencyToString{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $inamount    = {{{InAmount}}};
    $converttype = "{{{ConvertType}}}"; 
      
        $amounttext = "";         
        
        $valueinamount = 0;        
        if([double]::TryParse($inamount.ToString().Replace(",", "."), [System.Globalization.NumberStyles]::Float, [CultureInfo]::InvariantCulture, [ref] $valueinamount))
        {
            $inamount = $valueinamount;
        }
        
        $cls = [PSHelpers.ClassRuDateAndMoneyConverter]::new();
        
        if($converttype -eq "OnlyText")
        {
            $amounttext = $cls.CurrencyToTxt($inamount, $true);
        }
        else
        {
            $amounttext = $cls.CurrencyToTxtFull($inamount, $true);
        }
        
        {{{AmountText}}} = $amounttext;
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InAmount" Tooltip="In amount" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ConvertType" Tooltip="Convert type" CatalogName="Main properties" Type="Enum" Value="OnlyText" EnumVariants="OnlyText;FullText" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AmountText" Tooltip="Amount text" CatalogName="Output" Type="Variable" Value="$AmountText" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Random" InternalName="Random" FriendlyName="Random" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Random.png" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="1">
                         <core:ToolboxItemSettings.Code><![CDATA[
function Random{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $minvalue  = {{{MinValue}}};
    $maxvalue  = {{{MaxValue}}};
    $valuestep = {{{ValueStep}}};
        
        if($minvalue -eq $maxvalue) 
        {
            {{{Result}}} = $minvalue;
            $__Error.Quit();
            return;
        }
        
        if($script:__randomarray{{{block_id}}} -eq $null -or $script:__minvalue{{{block_id}}} -ne $minvalue -or $script:__maxvalue{{{block_id}}} -ne $maxvalue)
        {         
            $script:__minvalue{{{block_id}}} = $minvalue;
            $script:__maxvalue{{{block_id}}} = $maxvalue;
            if($valuestep -le 0) { $valuestep = 1; }
            $newsize = ($maxvalue - $minvalue) / $valuestep;
            if($newsize -lt 0) { $newsize = 1; }
            $script:__randomarray{{{block_id}}} = New-Object 'float[]' $newsize;

            $newvalue = $minvalue;
            for($i=0;$i -lt $newsize; $i++)
            {
                $script:__randomarray{{{block_id}}}[$i] = $newvalue;
                $newvalue += $valuestep;
            }
        }

        {{{Result}}} = $script:__randomarray{{{block_id}}} | Get-Random
        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="MinValue" Tooltip="Min value" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MaxValue" Tooltip="Max value" CatalogName="Required" Type="Expression" Value="100" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ValueStep" Tooltip="Step value" CatalogName="Required" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Calculate Hash" InternalName="CalculateHash" FriendlyName="Calculate Hash" PathStyle="{StaticResource BlueLightRectangle}" PathStyle_DragThumb="{StaticResource BlueLightRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Hash.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="20">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CalculateHash{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Value     = {{{Value}}};
    $TypeValue = "{{{TypeValue}}}"; 
    $ToUpper   = ${{{ToUpper}}};
    
        $result = "";
        
        if($TypeValue -eq "String")
        {
            $md5 = [System.Security.Cryptography.MD5CryptoServiceProvider]::new();
            $originalBytes = [System.Text.ASCIIEncoding]::Default.GetBytes($value);
            $encodedBytes = $md5.ComputeHash($originalBytes);
            $result = [BitConverter]::ToString($encodedBytes).Replace("-", ""); 
            $md5.Dispose();
        }
        elseif($TypeValue -eq "File")
        {               
            $FileName = $Value; 
            
            $FileName = ExpandConstFilePath $FileName
            
            if(-not [System.IO.File]::Exists($FileName))
            {
                $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
                return;
            } 
            
            $md5           = [System.Security.Cryptography.MD5CryptoServiceProvider]::new();
            $originalBytes = [System.IO.File]::ReadAllBytes($FileName);
            $encodedBytes  = $md5.ComputeHash($originalBytes);
            $result        = [BitConverter]::ToString($encodedBytes).Replace("-", ""); 
            $md5.Dispose();
        } 
        
        if($ToUpper) { $result = $result.ToUpper(); }
        else { $result = $result.ToLower(); }
 
        {{{Result}}} = $result; 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="Value" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeValue" Tooltip="Type value" CatalogName="Main properties" Type="Enum" Value="String" EnumVariants="String;File" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ToUpper" Tooltip="To upper" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="Result value" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Images" Name="Images" ToolboxGridType="List" AliasDescription="Transform images, find and click OCR images on screen, search image in document, find barcodes or stamps, make screenshots">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Click Image On Screen" InternalName="ClickImageScreen" FriendlyName="Click Image On Screen" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="52" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClickImageScreen{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ImagePointX = {{{ImagePointX}}};
    $ImagePointY = {{{ImagePointY}}};
    $ProcessID   = {{{ProcessID}}};
    $CompareType = "{{{CompareType}}}"; 
    $Percent     = {{{Percent}}};
    $IndexImage_str  = {{{IndexImage}}};
    $WaitTime     = {{{WaitTime}}};
    
        $IndexImage = 0;  
        $tempind   = 0;
        if([int]::TryParse([string]$IndexImage_str, [ref] $tempind))
        {
            $IndexImage = $tempind;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickImageScreen</InternalName><InternalType>Desktop</InternalType><Action>{{{Action}}}</Action><ProcessID>$ProcessID</ProcessID><ImagePointX>$ImagePointX</ImagePointX><ImagePointY>$ImagePointY</ImagePointY><ImageName>{{{ImageName}}}</ImageName><CompareType>$CompareType</CompareType><Percent>$Percent</Percent><SimulateMove>{{{SimulateMove}}}</SimulateMove><IndexImage>$IndexImage</IndexImage><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImageName" Tooltip="Image to find and click" CatalogName="Main properties" Type="Image" Value="" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImagePointX" Tooltip="Horizontal offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ImagePointY" Tooltip="Vertical offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexImage" Tooltip="Index image" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CompareType" Caption="" Tooltip="Compare type" CatalogName="Main properties" Type="Enum" Value="SQDIFF" EnumVariants="SQDIFF;CCORR;CCOEFF" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Main properties" Type="Double" Value="95" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Click Image On Control" InternalName="ClickImageControl" FriendlyName="Click Image On Control" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="42" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClickImageControl{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
    
    $ImagePointX = {{{ImagePointX}}};
    $ImagePointY = {{{ImagePointY}}};
    $ProcessID   = {{{ProcessID}}};
    $CompareType = "{{{CompareType}}}"; 
    $Percent     = {{{Percent}}}; 
    $IndexImage_str  = {{{IndexImage}}};
    $WaitTime     = {{{WaitTime}}};
        
        $IndexImage = 0;  
        $tempind   = 0;
        if([int]::TryParse([string]$IndexImage_str, [ref] $tempind))
        {
            $IndexImage = $tempind;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>ClickImageControl</InternalName><InternalType>Desktop</InternalType><Action>{{{Action}}}</Action><ProcessID>$ProcessID</ProcessID><ImagePointX>$ImagePointX</ImagePointX><ImagePointY>$ImagePointY</ImagePointY><ImageName>{{{ImageName}}}</ImageName><CompareType>$CompareType</CompareType><Percent>$Percent</Percent><SimulateMove>{{{SimulateMove}}}</SimulateMove><IndexImage>$IndexImage</IndexImage><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                      
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="Action" Tooltip="What to do with the element" CatalogName="Main properties" Type="Enum" Value="Click" EnumVariants="Click;DoubleClick;RightClick;Over" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImageName" Tooltip="Image to find and click" CatalogName="Main properties" Type="Image" Value="" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImagePointX" Tooltip="Horizontal offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ImagePointY" Tooltip="Vertical offset of click point (can be negative)" CatalogName="Main properties" Type="Expression" Value="0" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexImage" Tooltip="Index image" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CompareType" Caption="" Tooltip="Compare type" CatalogName="Main properties" Type="Enum" Value="SQDIFF" EnumVariants="SQDIFF;CCORR;CCOEFF" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Main properties" Type="Double" Value="95" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="SimulateMove" Tooltip="Simulate move" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="false" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Image In Screen" InternalName="FindImageScreen" FriendlyName="Find Image In Screen" PathStyle="{StaticResource AquamarineDarkRhombus}" PathStyle_DragThumb="{StaticResource AquamarineDarkRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="NoImage" Proportional="True" Version="27" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindImageScreen{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ProcessID   = {{{ProcessID}}};
    $CompareType = "{{{CompareType}}}"; 
    $Percent     = {{{Percent}}};
    $IndexImage_str  = {{{IndexImage}}};
    $WaitTime     = {{{WaitTime}}};
    
        $IndexImage = 0;  
        $tempind   = 0;
        if([int]::TryParse([string]$IndexImage_str, [ref] $tempind))
        {
            $IndexImage = $tempind;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>FindImageScreen</InternalName><InternalType>Desktop</InternalType><ProcessID>$ProcessID</ProcessID><ImageName>{{{ImageName}}}</ImageName><CompareType>$CompareType</CompareType><Percent>$Percent</Percent><IndexImage>$IndexImage</IndexImage><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr); 
        
        if(!$psResult.IsError)
        {         
            $strarr = $psResult.Result.Split("|");
        
            {{{ImagePointX}}} = [int]::Parse($strarr[0]);  
            {{{ImagePointY}}} = [int]::Parse($strarr[1]);
            $__Error.Jump("{{{connector-Next}}}");
            return;
        }
        else
        {               
            $__Error.Jump("{{{connector-Error}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ImageName" Tooltip="Image to find and click" CatalogName="Main properties" Type="Image" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IndexImage" Tooltip="Index image" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CompareType" Caption="" Tooltip="Compare type" CatalogName="Main properties" Type="Enum" Value="SQDIFF" EnumVariants="SQDIFF;CCORR;CCOEFF" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Main properties" Type="Double" Value="95" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="False" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImagePointX" Tooltip="Horizontal offset position" CatalogName="Output" Type="Variable" Value="$PointX" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ImagePointY" Tooltip="Vertical offset position" CatalogName="Output" Type="Variable" Value="$PointY" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Image In Control" InternalName="FindImageControl" FriendlyName="Find Image In Control" PathStyle="{StaticResource AquamarineDarkRhombus}" PathStyle_DragThumb="{StaticResource AquamarineDarkRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="NoImage" Proportional="True" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindImageControl{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
        
    $ProcessID   = {{{ProcessID}}};
    $CompareType = "{{{CompareType}}}"; 
    $Percent     = {{{Percent}}};
    $IndexImage_str  = {{{IndexImage}}};
    $WaitTime     = {{{WaitTime}}};
    
        $IndexImage = 0;  
        $tempind   = 0;
        if([int]::TryParse([string]$IndexImage_str, [ref] $tempind))
        {
            $IndexImage = $tempind;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>FindImageControl</InternalName><InternalType>Desktop</InternalType><ProcessID>$ProcessID</ProcessID><ImageName>{{{ImageName}}}</ImageName><CompareType>$CompareType</CompareType><Percent>$Percent</Percent><IndexImage>$IndexImage</IndexImage><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr); 
        
        if(!$psResult.IsError)
        {         
            $strarr = $psResult.Result.Split("|");
        
            {{{ImagePointX}}} = [int]::Parse($strarr[0]);  
            {{{ImagePointY}}} = [int]::Parse($strarr[1]);
            $__Error.Jump("{{{connector-Next}}}");
            return;
        }
        else
        {               
            $__Error.Jump("{{{connector-Error}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="ImageName" Tooltip="Image to find and click" CatalogName="Main properties" Type="Image" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IndexImage" Tooltip="Index image" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CompareType" Caption="" Tooltip="Compare type" CatalogName="Main properties" Type="Enum" Value="SQDIFF" EnumVariants="SQDIFF;CCORR;CCOEFF" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Main properties" Type="Double" Value="95" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="" Visible="False" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ImagePointX" Tooltip="Horizontal offset position" CatalogName="Output" Type="Variable" Value="$PointX" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ImagePointY" Tooltip="Vertical offset position" CatalogName="Output" Type="Variable" Value="$PointY" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Нет" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Да" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Image In Files" InternalName="FindImageFiles" FriendlyName="Find Image In FIles" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="14" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindImageFiles{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileBigImage   = {{{FileBigImage}}};
    $FileSmallImage = {{{FileSmallImage}}};
    $CompareType    = "{{{CompareType}}}"; 
    $Percent        = {{{Percent}}};
        
        $FileBigImage = ExpandConstFilePath $FileBigImage
        $FileSmallImage = ExpandConstFilePath $FileSmallImage
             
        if(-not [System.IO.File]::Exists($FileBigImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileBigImage");
            return;
        }
        
        if(-not [System.IO.File]::Exists($FileSmallImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileSmallImage");
            return;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>FindImageFiles</InternalName><InternalType>Desktop</InternalType><FileBigImage>$FileBigImage</FileBigImage><FileSmallImage>$FileSmallImage</FileSmallImage><CompareType>$CompareType</CompareType><Percent>$Percent</Percent></block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; } 
        $strarr = $psResult.Result.Split("|");
        
        {{{ImagePointX}}} = [int]::Parse($strarr[0]);  
        {{{ImagePointY}}} = [int]::Parse($strarr[1]);
        {{{CountMatches}}} = [int]::Parse($strarr[2]);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileBigImage" Tooltip="File name big image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileSmallImage" Tooltip="File name small image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CompareType" Caption="" Tooltip="Compare type" CatalogName="Main properties" Type="Enum" Value="SQDIFF" EnumVariants="SQDIFF;CCORR;CCOEFF" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Main properties" Type="Double" Value="95" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ImagePointX" Tooltip="Horizontal offset position" CatalogName="Output" Type="Variable" Value="$PointX" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ImagePointY" Tooltip="Vertical offset position" CatalogName="Output" Type="Variable" Value="$PointY" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CountMatches" Tooltip="Count matches" CatalogName="Output" Type="Variable" Value="$CountMatches" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Compare Images" InternalName="CompareImages" FriendlyName="Compare Images" PathStyle="{StaticResource AquamarineDarkRhombus}" PathStyle_DragThumb="{StaticResource AquamarineDarkRhombus_DragThumb}" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="NoImage" Proportional="True" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CompareImages{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileBigImage   = {{{FileBigImage}}};
    $FileSmallImage = {{{FileSmallImage}}};
    $CompareType    = "{{{CompareType}}}"; 
    $Percent        = {{{Percent}}};
        
        $FileBigImage = ExpandConstFilePath $FileBigImage
        $FileSmallImage = ExpandConstFilePath $FileSmallImage
             
        if(-not [System.IO.File]::Exists($FileBigImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileBigImage");
            return;
        }
        
        if(-not [System.IO.File]::Exists($FileSmallImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileSmallImage");
            return;
        }
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>FindImageFiles</InternalName><InternalType>Desktop</InternalType><FileBigImage>$FileBigImage</FileBigImage><FileSmallImage>$FileSmallImage</FileSmallImage><CompareType>$CompareType</CompareType><Percent>$Percent</Percent></block>");                       
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if(!$psResult.IsError)
        {
            $__Error.Jump("{{{connector-Yes}}}");
            return;
        }
        else
        {  
            $__Error.Jump("{{{connector-No}}}");
            return;
        }
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileBigImage" Tooltip="File name big image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileSmallImage" Tooltip="File name small image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="String" />
                                   <core:Property Name="CompareType" Caption="" Tooltip="Compare type" CatalogName="Main properties" Type="Enum" Value="SQDIFF" EnumVariants="SQDIFF;CCORR;CCOEFF" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Percent" Tooltip="Percent" CatalogName="Main properties" Type="Double" Value="95" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Непохожи" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="Похожи" Color="#008000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Make Screenshot" InternalName="MakeScreenshot" FriendlyName="Make Screenshot" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="25" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function MakeScreenshot{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");  
    
    $ProcessID   = {{{ProcessID}}};
    $FileName    = {{{FileName}}};
    $DelayBefore = {{{DelayBefore}}};
    $DelayAfter  = {{{DelayAfter}}};
    $WaitTime    = {{{WaitTime}}};
    
        $FileName = ExpandConstFilePath $FileName
        
        Start-Sleep -Seconds $DelayBefore;
        
        $psresultstr = Read-Host("<block><ID>{{{block_native_id}}}</ID><InternalName>MakeScreenshot</InternalName><ProcessID>$ProcessID</ProcessID><WaitTime>$WaitTime</WaitTime>{{{Selector}}}</block>");                     
        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);
        if($__Error.CheckResult($psResult)) { return; }
        
        [System.IO.File]::Delete($FileName);
        [System.IO.File]::Move($psResult.Result, $FileName); 
   
        Start-Sleep -Seconds $DelayAfter;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                                            
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Selector" Tooltip="Selector helps to find window, button or other element type" CatalogName="Main properties" Type="Selector" Value="" DefaultValue="&quot;&quot;" ValueType="Selector" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="FileName" Tooltip="File name for save image" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="DelayBefore" Tooltip="Delay Before Seconds" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="DelayAfter" Tooltip="Delay After Secons" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="WaitTime" Tooltip="Maximum time to wait until element appears (seconds)" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Count Color HSV" InternalName="GetCountColorHSV" FriendlyName="Get Count Color HSV" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="18" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetCountColorHSV{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileImage       = {{{FileImage}}};
    $ColorsFormat    = {{{ColorsFormat}}};
    $RectangleFormat = {{{RectangleFormat}}}; 
        
        $FileImage = ExpandConstFilePath $FileImage
             
        if(-not [System.IO.File]::Exists($FileImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileImage");
            return;
        }
        
        $psResult = [OCRModules.ClassColorHSV]::GetCountFromFile($FileImage, $ColorsFormat, $RectangleFormat);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{Result}}} = [int]::Parse($psResult.Result); 
        {{{ResultPercent}}} = [int]::Parse($psResult.Result2);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileImage" Tooltip="File name big image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ColorsFormat" Caption="" Tooltip="Colors format" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="RectangleFormat" Tooltip="Rectangle format" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Count pixels" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResultPercent" Tooltip="Result percent" CatalogName="Output" Type="Variable" Value="$ResultPercent" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Find Stamp On Image" InternalName="FindStampOnImage" FriendlyName="Find Stamp On Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="22" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function FindStampOnImage{{{block_id}}}
{
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileImage   = {{{FileImage}}};
    $TypeStamp   = "{{{TypeStamp}}}"; 
    $ColorStamp  = "{{{colorStamp}}}";
    $CustomColor = {{{CustomColor}}};
        
        $FileImage = ExpandConstFilePath $FileImage
             
        if(-not [System.IO.File]::Exists($FileImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileImage");
            return;
        } 
        
        if($ColorStamp -eq "Custom")
        {
            $ColorStamp = $CustomColor;
        }
        
        $psResult = [OCRModules.ClassStampDetect]::Processed($FileImage, $TypeStamp, $ColorStamp);
        if($__Error.CheckResult($psResult)) { return; } 
        $strarr = $psResult.Result.Split("|");
        
        {{{StampPointX}}} = [int]::Parse($strarr[0]);  
        {{{StampPointY}}} = [int]::Parse($strarr[1]);
        {{{CountStamps}}} = [int]::Parse($strarr[2]);
        
        try { {{{StampRects}}} = $psResult.RawResult; }
        catch{}
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileImage" Tooltip="File name image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeStamp" Caption="" Tooltip="Type stamp" CatalogName="Main properties" Type="Enum" Value="Circle" EnumVariants="Circle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ColorStamp" Tooltip="Color stamp" CatalogName="Main properties" Type="Enum" Value="Auto" EnumVariants="Auto;Blue;Red;Custom" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CustomColor" Tooltip="Custom color H1-H2;S1-S2;V1-V2" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="StampPointX" Tooltip="Horizontal offset position" CatalogName="Output" Type="Variable" Value="$PointX" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="StampPointY" Tooltip="Vertical offset position" CatalogName="Output" Type="Variable" Value="$PointY" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="CountStamps" Tooltip="Count matches" CatalogName="Output" Type="Variable" Value="$CountStamps" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="StampRects" Tooltip="StampRects" CatalogName="Output" Type="Variable" Value="$StampAreas" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Recognize Barcode On Image" InternalName="RecognizeBarcodeOnImage" FriendlyName="Recognize Barcode On Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_BarcodeScan.png" ImageType="LeftImage" Proportional="True" Version="17" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RecognizeBarcodeOnImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileImage    = {{{FileImage}}};
    $TypeBarcode  = "{{{TypeBarcode}}}"; 
    $FindMultiple = ${{{FindMultiple}}};
    $AutoRotate   = ${{{AutoRotate}}};
        
        $FileImage = ExpandConstFilePath $FileImage
             
        if(-not [System.IO.File]::Exists($FileImage))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileImage");
            return;
        }  
        
        if(!$script:__RecognizeBarcode)
        {
            $script:__RecognizeBarcode  = [OCRModules.ClassRecognizeBarcode]::new();
        } 
        
        $script:__RecognizeBarcode.TypeBarcode = $TypeBarcode;
        $script:__RecognizeBarcode.FindMultiple = $FindMultiple;
        $script:__RecognizeBarcode.AutoRotate = $AutoRotate;
        
        $psResult = $script:__RecognizeBarcode.Processed($FileImage);
        if($__Error.CheckResult($psResult)) { return; } 
                               
        {{{Barcodes}}} = $script:__RecognizeBarcode.GetResult();
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileImage" Tooltip="File name image" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeBarcode" Tooltip="Type barcode" CatalogName="Main properties" Type="EnumMulti" Value="" EnumVariants="QR_CODE;AZTEC;CODABAR;CODE_39;CODE_93;CODE_128;DATA_MATRIX;EAN_8;EAN_13;ITF;MAXICODE;PDF_417;RSS_14;RSS_EXPANDED;UPC_A;UPC_E;UPC_EAN_EXTENSION;MSI;PLESSEY;IMB;PHARMA_CODE" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FindMultiple" Tooltip="Find multiple" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="AutoRotate" Tooltip="Auto Rotate" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Barcodes" Tooltip="Barcode values" CatalogName="Output" Type="Variable" Value="$Barcodes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Link/List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get DPI From Image" InternalName="GetDPIFromImage" FriendlyName="Get DPI From Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetDPIFromImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileName = {{{FileName}}};
        
        {AddTypesPDF}
        
        $FileName = ExpandConstFilePath $FileName
             
        if(-not [System.IO.File]::Exists($FileName))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileName");
            return;
        } 
        
        $HorizRes = 0.0;
        $VertRes = 0.0;

        $ext = [System.IO.Path]::GetExtension($FileName);
        $ext = $ext.ToLower();
        if($ext -eq ".pdf")
        {
            $documentBytes = [System.IO.File]::ReadAllBytes($FileName);
            $document      = [Patagames.Pdf.Net.PdfDocument]::Load($documentBytes); 
            
            $maxwidth = 0;
            $maxheight = 0;
            foreach ($obj in $document.Pages[0].PageObjects)
            {         
                try
                {
                    $imageObject = [Patagames.Pdf.Net.PdfImageObject]$obj;
                    if($null -eq $imageObject) { continue; }

                    if($imageObject.Bitmap.Width -gt $maxwidth) { $maxwidth = $imageObject.Bitmap.Width; }
                    if($imageObject.Bitmap.Height -gt $maxheight) { $maxheight = $imageObject.Bitmap.Height; } 
                }
                catch { }
            }
            $document.Dispose();

            if($maxwidth -lt $maxheight)
            {
                $HorizRes = [Math]::Round($maxwidth / 8.3);
                $VertRes = [Math]::Round($maxheight / 11.8);
            }
            else 
            {
                $HorizRes = [Math]::Round($maxheight / 8.3);
                $VertRes = [Math]::Round($maxwidth / 11.8);
            }
        }
        else
        {
            $image = [System.Drawing.Image]::FromFile($FileName);
            $HorizRes = $image.HorizontalResolution;
            $VertRes = $image.VerticalResolution;
            $image.Dispose();
        }

        $res = $HorizRes;
        if($VertRes -lt $HorizRes) { $res = $VertRes; }
        
        {{{Result}}} = $res;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileName" Tooltip="File image pr pdf" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Count pixels" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Rotate Flip Image" InternalName="RotateFlipImage" FriendlyName="Rotate Flip Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="14" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RotateFlipImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileNameIn     = {{{FileNameIn}}};
    $FileNameOut    = {{{FileNameOut}}};
    $AngleRotateObj = {{{AngleRotate}}};
    $FlipHoriz      = ${{{FlipHoriz}}};
    $FlipVert       = ${{{FlipVert}}};
        
        {AddTypesImages}
        
        $FileNameIn = ExpandConstFilePath $FileNameIn
        $FileNameOut = ExpandConstFilePath $FileNameOut
             
        if(-not [System.IO.File]::Exists($FileNameIn))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileNameIn");
            return;
        }
        
        if([string]::IsNullOrEmpty($FileNameOut))
        {
            $FileNameOut = $FileNameIn;
        } 
        
        
        $AngleRotate = _todouble($AngleRotateObj);

        $inBytes = [System.IO.File]::ReadAllBytes($FileNameIn);
        $imFac = [SherpaImages.ImageFactory]::new();
        $imFac.Load($inBytes);
        
        if($AngleRotate -ne 0)
        {
            $flval = [float]$AngleRotate;
            $imFac.Rotate($flval);   
        }

        if($FlipHoriz)
        {
            $imFac.Flip($false); 
        }

        if($FlipVert)
        {
            $imFac.Flip($true); 
        }    
            
        $extIn  = [System.IO.Path]::GetExtension($FileNameIn).ToLower();
        $extOut = [System.IO.Path]::GetExtension($FileNameOut).ToLower();
        if($extIn -ne $extOut)
        {
            if($extOut -eq ".jpg" -or $extOut -eq ".jpeg")
            {
                $frm = [SherpaImages.Imaging.Formats.JpegFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".png")
            {
                $frm = [SherpaImages.Imaging.Formats.PngFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".bmp")
            {
                $frm = [SherpaImages.Imaging.Formats.BitmapFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".gif")
            {
                $frm = [SherpaImages.Imaging.Formats.GifFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".tiff")
            {
                $frm = [SherpaImages.Imaging.Formats.TiffFormat]::new();
                $imFac.Format($frm);
            } 
        }
        
        
        $imFac.Save($FileNameOut);
        $imFac.Dispose();
        $imFac = $null;        
        
        {{{Result}}} = $FileNameOut;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileNameIn" Tooltip="File name in" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameOut" Tooltip="File name out" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="AngleRotate" Caption="" Tooltip="Angle rotate" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FlipHoriz" Tooltip="Flip horizontal" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FlipVert" Tooltip="Flip vertical" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="File Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Scale Image" InternalName="ScaleImage" FriendlyName="Scale Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="17" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ScaleImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileNameIn       = {{{FileNameIn}}};
    $FileNameOut      = {{{FileNameOut}}};
    $NewWidthObj      = {{{NewWidth}}};  
    $NewHeightObj     = {{{NewHeight}}};
    $NewPercentObj    = {{{NewPercent}}}; 
    $NewDPIObj        = {{{NewDPI}}};    
    $IsProportionally = ${{{IsProportionally}}};
    $IsStretch        = ${{{IsStretch}}};
        
        {AddTypesImages}
        
        $FileNameIn = ExpandConstFilePath $FileNameIn
        $FileNameOut = ExpandConstFilePath $FileNameOut
             
        if(-not [System.IO.File]::Exists($FileNameIn))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileNameIn");
            return;
        }
        
        if([string]::IsNullOrEmpty($FileNameOut))
        {
            $FileNameOut = $FileNameIn;
        } 
        
        $NewWidth   = _toint($NewWidthObj);
        $NewHeight  = _toint($NewHeightObj);
        $NewPercent = _toint($NewPercentObj);
        $NewDPI     = _toint($NewDPIObj);

        $inBytes = [System.IO.File]::ReadAllBytes($FileNameIn);
        $imFac = [SherpaImages.ImageFactory]::new();
        $imFac.Load($inBytes);
        
        if($NewPercent -ne 0)
        {
            $percent = $NewPercent / 100;
            $NewWidth = $imFac.Image.Width + ($imFac.Image.Width * $percent);
            $NewHeight = $imFac.Image.Height + ($imFac.Image.Height * $percent);
        }

        if($NewWidth -gt 0 -or $NewHeight -gt 0)
        {               
            if(-not $IsProportionally)
            {
                if($NewWidth -eq 0) { $NewWidth = $imFac.Image.Width; }
                if($NewHeight -eq 0) { $NewHeight = $imFac.Image.Height; }
            }
            
            $size = [System.Drawing.Size]::new($NewWidth, $NewHeight);
            $res = [SherpaImages.Imaging.ResizeLayer]::new($size);
            if($IsStretch)
            {
                $res.ResizeMode = [SherpaImages.Imaging.ResizeMode]::Stretch;
            }
            $imFac.Resize($res);
        }

        if($NewDPI -ne 0)
        {
            $imFac.Resolution($NewDPI, $NewDPI);
        } 
        
        $extIn  = [System.IO.Path]::GetExtension($FileNameIn).ToLower();
        $extOut = [System.IO.Path]::GetExtension($FileNameOut).ToLower();
        if($extIn -ne $extOut)
        {
            if($extOut -eq ".jpg" -or $extOut -eq ".jpeg")
            {
                $frm = [SherpaImages.Imaging.Formats.JpegFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".png")
            {
                $frm = [SherpaImages.Imaging.Formats.PngFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".bmp")
            {
                $frm = [SherpaImages.Imaging.Formats.BitmapFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".gif")
            {
                $frm = [SherpaImages.Imaging.Formats.GifFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".tiff")
            {
                $frm = [SherpaImages.Imaging.Formats.TiffFormat]::new();
                $imFac.Format($frm);
            } 
        }
        
        $imFac.Save($FileNameOut);
        $imFac.Dispose();
        $imFac = $null;        
        
        {{{Result}}} = $FileNameOut;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileNameIn" Tooltip="File name in" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameOut" Tooltip="File name out" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewWidth" Caption="" Tooltip="New Width" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewHeight" Tooltip="New Height" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewPercent" Tooltip="New Percent" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewDPI" Tooltip="New DPI" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IsProportionally" Tooltip="Is Proportionally" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="IsStretch" Tooltip="Is Stretch" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="File Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Crop Image" InternalName="CropImage" FriendlyName="Crop Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="9" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function CropImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileNameIn   = {{{FileNameIn}}};
    $FileNameOut  = {{{FileNameOut}}};
    $NewLeftObj   = {{{NewLeft}}};  
    $NewTopObj    = {{{NewTop}}};
    $NewWidthObj  = {{{NewWidth}}}; 
    $NewHeightObj = {{{NewHeight}}};  
    $IsPercentage    = ${{{IsPercentage}}};
        
        {AddTypesImages}
        
        $FileNameIn = ExpandConstFilePath $FileNameIn
        $FileNameOut = ExpandConstFilePath $FileNameOut
             
        if(-not [System.IO.File]::Exists($FileNameIn))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileNameIn");
            return;
        }
        
        if([string]::IsNullOrEmpty($FileNameOut))
        {
            $FileNameOut = $FileNameIn;
        } 
        
        $NewLeft   = _toint($NewLeftObj);
        $NewTop    = _toint($NewTopObj);
        $NewWidth  = _toint($NewWidthObj);
        $NewHeight = _toint($NewHeightObj);

        $inBytes = [System.IO.File]::ReadAllBytes($FileNameIn);
        $imFac = [SherpaImages.ImageFactory]::new();
        $imFac.Load($inBytes);
        
        if($IsPercentage)
        {
            $crop = [SherpaImages.Imaging.CropLayer]::new($NewLeft, $NewTop, $NewWidth, $NewHeight);
            $crop.CropMode = [SherpaImages.Imaging.CropMode]::Percentage;
            $imFac.Crop($crop);
        }
        else 
        {
            if($NewWidth -eq 0) { $NewWidth = $imFac.Image.Width - $NewLeft; }
            if($NewHeight -eq 0) { $NewHeight = $imFac.Image.Height - $NewTop; }
            $crop = [SherpaImages.Imaging.CropLayer]::new($NewLeft, $NewTop, $NewWidth, $NewHeight);
            $crop.CropMode = [SherpaImages.Imaging.CropMode]::Pixels;
            $imFac.Crop($crop);
        }
        
        $extIn  = [System.IO.Path]::GetExtension($FileNameIn).ToLower();
        $extOut = [System.IO.Path]::GetExtension($FileNameOut).ToLower();
        if($extIn -ne $extOut)
        {
            if($extOut -eq ".jpg" -or $extOut -eq ".jpeg")
            {
                $frm = [SherpaImages.Imaging.Formats.JpegFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".png")
            {
                $frm = [SherpaImages.Imaging.Formats.PngFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".bmp")
            {
                $frm = [SherpaImages.Imaging.Formats.BitmapFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".gif")
            {
                $frm = [SherpaImages.Imaging.Formats.GifFormat]::new();
                $imFac.Format($frm);
            }
            elseif($extOut -eq ".tiff")
            {
                $frm = [SherpaImages.Imaging.Formats.TiffFormat]::new();
                $imFac.Format($frm);
            } 
        }
        
        $imFac.Save($FileNameOut);
        $imFac.Dispose();
        $imFac = $null;        
        
        {{{Result}}} = $FileNameOut;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileNameIn" Tooltip="File name in" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameOut" Tooltip="File name out" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewLeft" Caption="" Tooltip="New Left" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewTop" Tooltip="New Top" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewWidth" Tooltip="New Width" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="NewHeight" Tooltip="New Height" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IsPercentage" Tooltip="Is Percentage" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Result" Tooltip="File Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Convert Image" InternalName="ConvertImage" FriendlyName="Convert Image" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_FileImage.png" ImageType="LeftImage" Proportional="True" Version="6" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ConvertImage{{{block_id}}}
{
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}"); 
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}"); 
                      
    $FileNameIn       = {{{FileNameIn}}};
    $FileNameOut      = {{{FileNameOut}}};
    $NewQualityObj    = {{{NewQuality}}};  
    $MaxFileLengthObj = {{{MaxFileLength}}};
        
        {AddTypesImages}
        
        $FileNameIn = ExpandConstFilePath $FileNameIn
        $FileNameOut = ExpandConstFilePath $FileNameOut
             
        if(-not [System.IO.File]::Exists($FileNameIn))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileNameIn");
            return;
        }
        
        if([string]::IsNullOrEmpty($FileNameOut))
        {
            $FileNameOut = $FileNameIn;
        } 
        
        $NewQuality    = _toint($NewQualityObj);
        $MaxFileLength = _todouble($MaxFileLengthObj);

        $inBytes = [System.IO.File]::ReadAllBytes($FileNameIn);
        $imFac = [SherpaImages.ImageFactory]::new();
        $imFac.Load($inBytes);
        
        $isjpg = $false;
        $extOut = [System.IO.Path]::GetExtension($FileNameOut).ToLower();
        if($extOut -eq ".jpg" -or $extOut -eq ".jpeg")
        {
            $frm = [SherpaImages.Imaging.Formats.JpegFormat]::new();
            $imFac.Format($frm);
            $isjpg = $true;
        }
        elseif($extOut -eq ".png")
        {
            $frm = [SherpaImages.Imaging.Formats.PngFormat]::new();
            $imFac.Format($frm);
        }
        elseif($extOut -eq ".bmp")
        {
            $frm = [SherpaImages.Imaging.Formats.BitmapFormat]::new();
            $imFac.Format($frm);
        }
        elseif($extOut -eq ".gif")
        {
            $frm = [SherpaImages.Imaging.Formats.GifFormat]::new();
            $imFac.Format($frm);
        }
        elseif($extOut -eq ".tiff")
        {
            $frm = [SherpaImages.Imaging.Formats.TiffFormat]::new();
            $imFac.Format($frm);
        }

        if($isjpg)
        {
            $quality = 100;
            if($NewQuality -gt 0)
            {
                $imFac.Quality($NewQuality);
                $quality = $NewQuality;
            }
            if($MaxFileLength -gt 0)
            {
                $memoryStream = [System.IO.MemoryStream]::new();

                while($quality -gt 0)
                {
                    try 
                    {
                        $memoryStream.SetLength(0);
                        $imFac.Save($memoryStream);
                    }
                    catch { break; }
                    if($memoryStream.Length -le $MaxFileLength) { break; }
                    $quality -= 2;
                    $imFac.Quality($quality);
                }

                $memoryStream.Dispose();
            }
        }
        
        $imFac.Save($FileNameOut);
        $imFac.Dispose();
        $imFac = $null;        
        
        {{{Result}}} = $FileNameOut;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_); 
        return;
    }    
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileNameIn" Tooltip="File name in" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FileNameOut" Tooltip="File name out" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="NewQuality" Caption="" Tooltip="New Quality for jpg" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MaxFileLength" Tooltip="Max file length" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Result" Tooltip="File Result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="Telegram" Name="Telegram" ToolboxGridType="List" AliasDescription="Create Telegram bots or emulate Telegram messenger client">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Create" InternalName="TelegramBotCreate" FriendlyName="Telegram Bot Create" UrlVideo="http://rpa.bdesvn.ru/telegrambot.mp4" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="28" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotCreate{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $BotToken = {{{BotToken}}};
    $Timeout  = {{{Timeout}}};
        
        {AddTypesTelegram}
        
        $client = [Telegram.ClassBot]::new();     
        
        $tlResult = $client.CreateConnection($BotToken, $Timeout); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}

        {{{TConnection}}} = $client;    
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="BotToken" Tooltip="Bot token" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout connect" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Output" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Close" InternalName="TelegramBotClose" FriendlyName="Telegram Bot Close" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="10" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotClose{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client = {{{TConnection}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }

        $client.CloseConnection();
        {{{TConnection}}} = $null;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Received" InternalName="TelegramBotReceived" FriendlyName="Telegram Bot Received" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="12" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotReceived{{{block_id}}}
{    
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
        $client        = {{{TConnection}}}; 
        $IsWaitMessage = ${{{IsWaitMessage}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }
              
        while($true)
        {
            $message = $client.GetReceivedMessage();
            if($null -eq $message)
            {         
                if($IsWaitMessage)
                {
                    Start-Sleep -Seconds 1; 
                    continue;
                }   
                
                $__Error.Exception("No messages in the queue");
                return;
            } 
            break;
        }
         
        {{{TMessage}}} = $message; 
        {{{IsCallback}}} = $message.IsCallback;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="IsWaitMessage" Tooltip="IsWaitMessage" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TMessage" Tooltip="Get message" CatalogName="Output" Type="Variable" Value="$TMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="IsCallback" Tooltip="IsCallback" CatalogName="Output" Type="Variable" Value="$IsCallback" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Boolean" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Get Chats" InternalName="TelegramBotGetChats" FriendlyName="Telegram Bot Get Chats" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotGetChats{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client = {{{TConnection}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }
        
        {{{Chats}}} = $client.GetListChats();
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Chats" Tooltip="Get list chats" CatalogName="Output" Type="Variable" Value="$Chats" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Send Text" InternalName="TelegramBotSendText" FriendlyName="Telegram Bot Send Text" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="19" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotSendText{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client    = {{{TConnection}}}; 
    $chatid    = {{{ChatId}}};  
    $messageid = {{{MessageId}}};
    $text      = {{{Text}}}; 
    $Buttons   = {{{Buttons}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
        
        $chatid    = $chatid.ToString();
        $messageid = $messageid.ToString(); 
        
        if('{{{Buttons}}}'.Length -gt 0 -and '{{{Buttons}}}' -ne '""')
        {
            $tlResult = $client.SendButton($chatid, $messageid, $text, $Buttons); 
            if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}  
            {{{TMessage}}} = $tlResult.Message;
        }
        else
        {
            $tlResult = $client.SendText($chatid, $messageid, $text); 
            if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;} 
            {{{TMessage}}} = $tlResult.Message;
        }        
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ChatId" Tooltip="Chat id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MessageId" Tooltip="Message Id for reply" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Text" Tooltip="Sended text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Buttons" Tooltip="Buttons" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="TMessage" Tooltip="Sended message" CatalogName="Output" Type="Variable" Value="$SendedMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Send Contact" InternalName="TelegramBotSendContact" FriendlyName="Telegram Bot Send Contact" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotSendContact{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client      = {{{TConnection}}}; 
    $chatid      = {{{ChatId}}}; 
    $messageid   = {{{MessageId}}};
    $phonenumber = {{{PhoneNumber}}};
    $firstname   = {{{FirstName}}};
    $lastname    = {{{LastName}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
        
        $chatid    = $chatid.ToString();
        $messageid = $messageid.ToString();
        
        $tlResult = $client.SendContact($chatid, $messageid, $phonenumber, $firstname, $lastname); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}  
        {{{TMessage}}} = $tlResult.Message;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ChatId" Tooltip="Chat id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MessageId" Tooltip="Message Id for reply" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="PhoneNumber" Tooltip="phone Number" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FirstName" Tooltip="first Name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="LastName" Tooltip="last Name" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TMessage" Tooltip="Sended message" CatalogName="Output" Type="Variable" Value="$SendedMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Send File" InternalName="TelegramBotSendFile" FriendlyName="Telegram Bot Send File" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="16" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotSendFile{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client    = {{{TConnection}}}; 
    $chatid    = {{{ChatId}}};  
    $messageid = {{{MessageId}}};
    $filename  = {{{FileName}}}; 
    $Caption   = {{{Caption}}};
        
        {AddTypesTelegram}
                
        $filename = ExpandConstFilePath $filename
                              
        if($null -eq $Caption) { $Caption = ""; }
        $Caption = $Caption.ToString();
        
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
          
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        $chatid    = $chatid.ToString();
        $messageid = $messageid.ToString();
        
        $tlResult = $client.SendFile($chatid, $messageid, $filename, $Caption); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;} 
        {{{TMessage}}} = $tlResult.Message;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ChatId" Tooltip="Chat id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MessageId" Tooltip="Message Id for reply" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileName" Tooltip="Sended file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Caption" Tooltip="Caption" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TMessage" Tooltip="Sended message" CatalogName="Output" Type="Variable" Value="$SendedMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Send Photo" InternalName="TelegramBotSendPhoto" FriendlyName="Telegram Bot Send Photo" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotSendPhoto{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client    = {{{TConnection}}}; 
    $chatid    = {{{ChatId}}};  
    $messageid = {{{MessageId}}};
    $filename  = {{{FileName}}}; 
    $Caption   = {{{Caption}}};
        
        {AddTypesTelegram}
            
        $filename = ExpandConstFilePath $filename
                        
        if($null -eq $Caption) { $Caption = ""; }
        $Caption = $Caption.ToString();
        
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
          
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        $chatid    = $chatid.ToString();
        $messageid = $messageid.ToString();
        
        $tlResult = $client.SendPhoto($chatid, $messageid, $filename, $Caption); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;} 
        {{{TMessage}}} = $tlResult.Message;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ChatId" Tooltip="Chat id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MessageId" Tooltip="Message Id for reply" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FileName" Tooltip="Sended file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Caption" Tooltip="Caption" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TMessage" Tooltip="Sended message" CatalogName="Output" Type="Variable" Value="$SendedMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Edit Text" InternalName="TelegramBotEditText" FriendlyName="Telegram Bot Edit Text" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="4" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotEditText{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client       = {{{TConnection}}}; 
    $chatid       = {{{ChatId}}};  
    $messageid    = {{{MessageId}}};
    $text         = {{{Text}}};   
    $CaptionMedia = ${{{CaptionMedia}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
        
        $chatid    = $chatid.ToString();
        $messageid = $messageid.ToString(); 
           
        if($CaptionMedia)
        {
            $tlResult = $client.EditCaption($chatid, $messageid, $text); 
            if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;} 
            {{{TMessage}}} = $tlResult.Message;
        }
        else
        {
            $tlResult = $client.EditText($chatid, $messageid, $text); 
            if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;} 
            {{{TMessage}}} = $tlResult.Message;
        }      
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ChatId" Tooltip="Chat id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MessageId" Tooltip="Message Id" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Text" Tooltip="New text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="CaptionMedia" Tooltip="Caption or text message" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TMessage" Tooltip="Sended message" CatalogName="Output" Type="Variable" Value="$SendMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Bot Download File" InternalName="TelegramBotDownloadFile" FriendlyName="Telegram Bot Download File" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramBotDownloadFile{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client   = {{{TConnection}}};
    $message  = {{{TMessage}}};
    $filename = {{{FileName}}};
        
        {AddTypesTelegram}
                    
        $filename = ExpandConstFilePath $filename
        
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassBot"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }
        
        $tlResult = $client.DownloadFile($message, $filename);
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="TMessage" Tooltip="Message" CatalogName="Required" Type="Variable" Value="$TMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="FileName" Tooltip="File name saved" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Create" InternalName="TelegramClientCreate" FriendlyName="Telegram Client Create" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="5" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientCreate{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $SessionName = {{{SessionName}}};
    $Timeout  = {{{Timeout}}};
        
        {AddTypesTelegram}
        
        $client = [Telegram.ClassClient]::new();     
        
        $tlResult = $client.CreateConnection($SessionName, $Timeout);              
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}

        {{{TConnection}}} = $client;    
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="SessionName" Tooltip="Session name" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Timeout" Tooltip="Timeout connect" CatalogName="Main properties" Type="Expression" Value="10" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Output" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Close" InternalName="TelegramClientClose" FriendlyName="Telegram Client Close" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="4" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientClose{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client = {{{TConnection}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }

        $client.CloseConnection();
        {{{TConnection}}} = $null;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Received" InternalName="TelegramClientReceived" FriendlyName="Telegram Client Received" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="4" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientReceived{{{block_id}}}
{    
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
           
        $client = {{{TConnection}}}; 
        $IsWaitMessage = ${{{IsWaitMessage}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }
            
        while($true)
        {
            $message = $client.GetReceivedMessage();
            if($null -eq $message)
            {       
                if($IsWaitMessage)
                {
                    Start-Sleep -Seconds 1; 
                    continue;
                }
                
                $__Error.Exception("No messages in the queue");
                return;
            } 
            break;
        }
         
        {{{TMessage}}} = $message;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="IsWaitMessage" Tooltip="IsWaitMessage" CatalogName="Main properties" Type="Bool" Value="False" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TMessage" Tooltip="Get message" CatalogName="Output" Type="Variable" Value="$TMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Get Chats" InternalName="TelegramClientGetChats" FriendlyName="Telegram Client Get Chats" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientGetChats{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client = {{{TConnection}}}; 
    $filter = {{{Filter}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
        
        $filter = $filter.ToString();
        
        {{{Chats}}} = $client.GetListChats_AsDict($filter);
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Filter" Tooltip="Filter contains" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Chats" Tooltip="Get list chats" CatalogName="Output" Type="Variable" Value="$Chats" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Hashtable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Get Contacts" InternalName="TelegramClientGetContacts" FriendlyName="Telegram Client Get Contacts" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="8" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientGetContacts{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client = {{{TConnection}}};
    $filter = {{{Filter}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }
        
        $filter = $filter.ToString();
        
        {{{Contacts}}} = $client.GetListContacts($filter);
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Filter" Tooltip="Filter contains" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Contacts" Tooltip="Get table contacts" CatalogName="Output" Type="Variable" Value="$Contacts" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Send Text" InternalName="TelegramClientSendText" FriendlyName="Telegram Client Send Text" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="7" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientSendText{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client    = {{{TConnection}}}; 
    $target    = {{{Target}}};  
    $useimport = ${{{UseImport}}};
    $text      = {{{Text}}};
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
        
        $target = $target.ToString();
        
        $tlResult = $client.SendText($target, $useimport, $text); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Target" Tooltip="Target" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UseImport" Tooltip="Use Import contact" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="Text" Tooltip="Sended text" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Send File" InternalName="TelegramClientSendFile" FriendlyName="Telegram Client Send File" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="13" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientSendFile{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client    = {{{TConnection}}}; 
    $target    = {{{Target}}};  
    $useimport = ${{{UseImport}}};
    $filename  = {{{FileName}}}; 
    $caption   = {{{Caption}}};
        
        {AddTypesTelegram}
               
        $filename = ExpandConstFilePath $filename
        
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
          
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        $target = $target.ToString(); 
        $caption = $caption.ToString();
        
        $tlResult = $client.SendFile($target, $useimport, $filename, $caption); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Target" Tooltip="Target" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UseImport" Tooltip="Use Import" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FileName" Tooltip="Sended file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Caption" Tooltip="Text caption" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Send Photo" InternalName="TelegramClientSendPhoto" FriendlyName="Telegram Client Send Photo" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="4" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientSendPhoto{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client    = {{{TConnection}}}; 
    $target    = {{{Target}}};  
    $useimport = ${{{UseImport}}};
    $filename  = {{{FileName}}}; 
    $caption   = {{{Caption}}};
        
        {AddTypesTelegram}
                   
        $filename = ExpandConstFilePath $filename
        
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
          
        if(-not [System.IO.File]::Exists($filename))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $filename");
            return;
        }
        
        $target = $target.ToString(); 
        $caption = $caption.ToString();
        
        $tlResult = $client.SendPhoto($target, $useimport, $filename, $caption); 
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Target" Tooltip="Target" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="UseImport" Tooltip="Use Import" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FileName" Tooltip="Sended file" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Caption" Tooltip="Text caption" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Download File" InternalName="TelegramClientDownloadFile" FriendlyName="Telegram Client Download File" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="4" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientDownloadFile{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client   = {{{TConnection}}};
    $message  = {{{TMessage}}};
    $filename = {{{FileName}}};
        
        {AddTypesTelegram}
             
        $filename = ExpandConstFilePath $filename
        
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        }
        
        $tlResult = $client.DownloadFile($message, $filename);
        if($tlResult.IsError) { $__Error.Exception($tlResult.ErrorMessage); return;}
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="TMessage" Tooltip="Message" CatalogName="Required" Type="Variable" Value="$TMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TMessage" />
                                   <core:Property Name="FileName" Tooltip="File name saved" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Telegram Client Get Messages" InternalName="TelegramClientGetMessages" FriendlyName="Telegram Client Get Messages" PathStyle="{StaticResource BlueTelegramRectangle}" PathStyle_DragThumb="{StaticResource BlueTelegramRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Telegram.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="22" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function TelegramClientGetMessages{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $client        = {{{TConnection}}}; 
    $target        = {{{Target}}};    
    $offsetid      = {{{OffsetId}}};  
    $limit         = {{{Limit}}};
    $filtercontact = {{{FilterContact}}};
    $filtertext    = {{{FilterText}}}; 
        
        {AddTypesTelegram}
             
        $vartype = $client.GetType().Name;
        if(-not $vartype.Contains("ClassClient"))
        {
            $__Error.Exception("Connection is not Telegram");
            return;
        } 
        
        $target = $target.ToString();
        $filtercontact = $filtercontact.ToString();
        $filtertext = $filtertext.ToString();
                
        $offsetid_long = 0;
        [long]::TryParse([string]$offsetid, [ref]$offsetid_long);
        
        $listmessages = $client.GetMessages($target, $offsetid_long, $limit, $filtercontact, $filtertext); 
        if($null -eq $listmessages)
        {
            $__Error.Exception("No messages found");
            return;
        }
         
        {{{Messages}}} = $listmessages;
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="TConnection" Tooltip="Connection instance" CatalogName="Required" Type="Variable" Value="$TConnection" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="TConnection" />
                                   <core:Property Name="Target" Tooltip="Target" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="OffsetId" Tooltip="Offset id message" CatalogName="Main properties" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Limit" Tooltip="Limit messages" CatalogName="Main properties" Type="Expression" Value="100" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="FilterContact" Tooltip="Filter contact" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="FilterText" Tooltip="Filter text" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Messages" Tooltip="List messages" CatalogName="Output" Type="Variable" Value="$Messages" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="List" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="WindowsCredentials" Name="Windows Credentials" ToolboxGridType="List" AliasDescription="Store or retrieve password using Windows Credentials storage or CyberArc">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Set Windows Credentials" InternalName="SetWindowsCredentials" FriendlyName="Set Windows Credentials" PathStyle="{StaticResource OrangeDarkRectangle}" PathStyle_DragThumb="{StaticResource OrangeDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_key.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="13" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetWindowsCredentials{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $target           = {{{Target}}};
    $username        = {{{Username}}};
    $password        = {{{Password}}};
    $persistancetype = "{{{PersistanceType}}}"; 
    $credentialtype  = "{{{CredentialType}}}";
    

        $cls = [CredentialManagement.Credential]::new();
                   
        $Password_Value = _checkpassword($password);
        
        $cls.Target          = $target;
        $cls.Username        = $username;
        $cls.Password        = $Password_Value;  
        $cls.PersistanceType = [CredentialManagement.PersistanceType]::Enterprise;
        $cls.Type            = [CredentialManagement.CredentialType]::Generic;
           
        if($persistancetype -eq "LocalComputer")
        {
            $cls.PersistanceType = [CredentialManagement.PersistanceType]::LocalComputer;
        }
        if($persistancetype -eq "Session")
        {
            $cls.PersistanceType = [CredentialManagement.PersistanceType]::Session;
        } 
        if($credentialtype -eq "DomainPassword")
        {
            $cls.Type = [CredentialManagement.CredentialType]::DomainPassword;
        } 
        
        $cls.Save();
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Target" Tooltip="Title" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Username" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="PersistanceType" Tooltip="Persistance type" CatalogName="Main properties" Type="Enum" Value="Enterprise" EnumVariants="Enterprise;LocalComputer;Session" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CredentialType" Tooltip="Credential type" CatalogName="Main properties" Type="Enum" Value="Generic" EnumVariants="Generic;DomainPassword" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get Windows Credentials" InternalName="GetWindowsCredentials" FriendlyName="Get Windows Credentials" PathStyle="{StaticResource OrangeDarkRectangle}" PathStyle_DragThumb="{StaticResource OrangeDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_key.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="11" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetWindowsCredentials{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Target           = {{{Target}}};
    
        {{{Username}}} = "";
        {{{IsValid}}} = $false;
        
        $cls = [CredentialManagement.Credential]::new();
        
        $cls.Target = $target;       
           
        if($cls.Load())
        {
            {{{IsValid}}} = $true;
            
            {{{Username}}} = $cls.Username;
            
            $issecure_password = $false;
            if({{{Password}}})
            {
                $typename = {{{Password}}}.GetType().Name;
                if($typename -eq "SecureString")
                {
                    $issecure_password = $true;
                    {{{Password}}} = _tosecure($cls.Password);
                }
            }
            
            if(-not $issecure_password) { {{{Password}}} = $cls.Password; }
        }
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Target" Tooltip="Title" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Username" CatalogName="Output" Type="Variable" Value="$Username" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Output" Type="Variable" Value="$Password" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IsValid" Tooltip="Is Valid" CatalogName="Output" Type="Variable" Value="$IsValid" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Logic" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Delete Windows Credentials" InternalName="DeleteWindowsCredentials" FriendlyName="Delete Windows Credentials" PathStyle="{StaticResource OrangeDarkRectangle}" PathStyle_DragThumb="{StaticResource OrangeDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_key.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="5" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function DeleteWindowsCredentials{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $Target = {{{Target}}};
    
        $cls = [CredentialManagement.Credential]::new();
        
        $cls.Target = $target;       
        
        $cls.Delete();
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Target" Tooltip="Title" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Get CyberArk Credentials" InternalName="GetCyberArkCredentials" FriendlyName="Get CyberArk Credentials" PathStyle="{StaticResource OrangeDarkRectangle}" PathStyle_DragThumb="{StaticResource OrangeDarkRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_key.png" PathToToolboxImage="" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="False" Version="4" TextColor="#FF000000">
                         <core:ToolboxItemSettings.Code><![CDATA[
function GetCyberArkCredentials{{{block_id}}}
{    
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
       
    $AppID      = {{{AppID}}};
    $ObjectName = {{{ObjectName}}};
    $Safe       = {{{Safe}}};
    
        {AddTypesCyberArk}
        
        {{{Username}}} = "";
                                
        $passRequest                   = [CyberArk.AIM.NetPasswordSDK.PSDKPasswordRequest]::new();
        $passRequest.AppID             = $AppID;
        $passRequest.ConnectionPort    = 18923;
        $passRequest.ConnectionTimeout = 30;
        $passRequest.Safe              = $Safe;
        $passRequest.Folder            = "root";
        $passRequest.Object            = $ObjectName;
        $passRequest.Reason            = "Description";
        $passRequest.RequiredProperties.Add("UserName");
        
        $passwordobj = [CyberArk.AIM.NetPasswordSDK.PasswordSDK]::GetPassword($passRequest);
           
        {{{Username}}} = $passwordobj.UserName;
        
        $passwordstr = $passwordobj.Content;
            
        $issecure_password = $false;
        if({{{Password}}})
        {
            $typename = {{{Password}}}.GetType().Name;
            if($typename -eq "SecureString")
            {
                $issecure_password = $true;
                {{{Password}}} = _tosecure($passwordstr);
            }
        }
            
        if(-not $issecure_password) { {{{Password}}} = $passwordstr; }
            
    }
    catch 
    {     
        $__Error.ExceptionCatch($_);
        return;
    }
                        
    $__Error.Quit();
}
]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="AppID" Tooltip="Title" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ObjectName" Tooltip="ObjectName" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Safe" Tooltip="Safe" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Username" Tooltip="Username" CatalogName="Output" Type="Variable" Value="$Username" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Password" Tooltip="Password" CatalogName="Output" Type="Variable" Value="$Password" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="MachineLearning" Name="Machine Learning" ToolboxGridType="List" AliasDescription="Use requests to ChatGPT, create and search embeddings">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Regression Train" InternalName="RegressionTrain" FriendlyName="Regression Train" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="29">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RegressionTrain{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileCSV         = {{{FileCSV}}}; 
    $IndexLabel      = {{{IndexLabel}}}; 
    $IndexesFeatures = {{{IndexesFeatures}}}; 
    $IndexesStrings  = {{{IndexesStrings}}};   
    $Separator       = {{{Separator}}};
    $TypeML          = "{{{TypeML}}}";
    $FileModel       = {{{FileModel}}};
        
        $FileCSV = ExpandConstFilePath $FileCSV 
        
        if(![System.IO.File]::Exists($FileCSV))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileCSV");
            return;
        } 
        
        $_IndexLabel = [int]::Parse($IndexLabel);
                
        if($Separator.Length -eq 0) { $Separator=","; }
        
        $FileModel = ExpandConstFilePath $FileModel 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult   = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresult = $__SherpaML.RegressionTrain($FileCSV, $_IndexLabel, $IndexesFeatures, $IndexesStrings, $Separator, $TypeML, $FileModel);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileCSV" Tooltip="Path to CSV" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexLabel" Tooltip="Index column label" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexesFeatures" Tooltip="Indexes features, comma" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexesStrings" Tooltip="Indexes strings" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Separator" Tooltip="Symbol separator" CatalogName="Required" Type="Expression" Value="&quot;,&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeML" Tooltip="TypeML" CatalogName="Main properties" Type="Enum" Value="FastTree" EnumVariants="FastTree;LbfgsPoissonRegression;LightGbm;Sdca;OnlineGradientDescent;FastTreeTweedie;FastForest;Gam" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="FileModel" Tooltip="File model" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Regression Predict" InternalName="RegressionPredict" FriendlyName="Regression Predict" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="16">
                         <core:ToolboxItemSettings.Code><![CDATA[
function RegressionPredict{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileModel    = {{{FileModel}}};
    $Table        = {{{Table}}};
    $ColumnResult = {{{ColumnResult}}};
        
        $FileModel = ExpandConstFilePath $FileModel 
        
        if(![System.IO.File]::Exists($FileModel))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileModel");
            return;
        } 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
          
        $psResult = $__SherpaML.RegressionPredict($FileModel, $Table, $ColumnResult);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileModel" Tooltip="Path to model" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table for processing" CatalogName="Required" Type="Variable" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ColumnResult" Tooltip="Column name result" CatalogName="Required" Type="Expression" Value="&quot;Score&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="DataTable from excel" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Classification Train" InternalName="ClassificationTrain" FriendlyName="Classification Train" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="6">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClassificationTrain{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileCSV         = {{{FileCSV}}}; 
    $IndexLabel      = {{{IndexLabel}}}; 
    $IndexesFeatures = {{{IndexesFeatures}}}; 
    $IndexesStrings  = {{{IndexesStrings}}};   
    $Separator       = {{{Separator}}};
    $TypeML          = "{{{TypeML}}}";
    $FileModel       = {{{FileModel}}};
        
        $FileCSV = ExpandConstFilePath $FileCSV 
        
        if(![System.IO.File]::Exists($FileCSV))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileCSV");
            return;
        } 
        
        $_IndexLabel = [int]::Parse($IndexLabel);
                
        if($Separator.Length -eq 0) { $Separator=","; }
        
        $FileModel = ExpandConstFilePath $FileModel 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult   = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresult = $__SherpaML.ClassificationTrain($FileCSV, $_IndexLabel, $IndexesFeatures, $IndexesStrings, $Separator, $TypeML, $FileModel);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileCSV" Tooltip="Path to CSV" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexLabel" Tooltip="Index column label" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexesFeatures" Tooltip="Indexes features, comma" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexesStrings" Tooltip="Indexes strings" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Separator" Tooltip="Symbol separator" CatalogName="Required" Type="Expression" Value="&quot;,&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeML" Tooltip="TypeML" CatalogName="Main properties" Type="Enum" Value="SdcaMaximumEntropy (Multiclass)" EnumVariants="SdcaMaximumEntropy (Multiclass);LightGbm (Multiclass);SdcaNonCalibrated (Multiclass);LbfgsMaximumEntropy (Multiclass);NaiveBayes (Multiclass);AveragedPerceptron (Binary);SdcaLogisticRegression (Binary);SdcaNonCalibrated (Binary);LbfgsLogisticRegression (Binary);LightGbm (Binary);FastTree (Binary);FastForest (Binary);Gam (Binary);FieldAwareFactorizationMachine (Binary);Prior (Binary);LinearSvm (Binary)" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FileModel" Tooltip="File model" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Classification Predict" InternalName="ClassificationPredict" FriendlyName="Classification Predict" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClassificationPredict{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileModel    = {{{FileModel}}};
    $Table        = {{{Table}}};
    $ColumnResult = {{{ColumnResult}}};
        
        $FileModel = ExpandConstFilePath $FileModel 
        
        if(![System.IO.File]::Exists($FileModel))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileModel");
            return;
        } 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
          
        $psResult = $__SherpaML.ClassificationPredict($FileModel, $Table, $ColumnResult);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileModel" Tooltip="Path to model" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table for processing" CatalogName="Required" Type="Variable" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ColumnResult" Tooltip="Column name result" CatalogName="Required" Type="Expression" Value="&quot;PredictedLabel&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="DataTable from excel" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Cluster Train" InternalName="ClusterTrain" FriendlyName="Cluster Train" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClusterTrain{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileCSV         = {{{FileCSV}}}; 
    $IndexesFeatures = {{{IndexesFeatures}}}; 
    $IndexesStrings  = {{{IndexesStrings}}};   
    $Separator       = {{{Separator}}};
    $TypeML          = "{{{TypeML}}}";
    $FileModel       = {{{FileModel}}};
        
        $FileCSV = ExpandConstFilePath $FileCSV 
        
        if(![System.IO.File]::Exists($FileCSV))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileCSV");
            return;
        } 
        
        if($Separator.Length -eq 0) { $Separator=","; }
        
        $FileModel = ExpandConstFilePath $FileModel 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult   = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresult = $__SherpaML.ClusterTrain($FileCSV, $IndexesFeatures, $IndexesStrings, $Separator, $TypeML, $FileModel);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileCSV" Tooltip="Path to CSV" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexesFeatures" Tooltip="Indexes features, comma" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexesStrings" Tooltip="Indexes strings" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Separator" Tooltip="Symbol separator" CatalogName="Required" Type="Expression" Value="&quot;,&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeML" Tooltip="TypeML" CatalogName="Main properties" Type="Enum" Value="KMeans" EnumVariants="KMeans" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FileModel" Tooltip="File model" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Cluster Predict" InternalName="ClusterPredict" FriendlyName="Cluster Predict" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="3">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ClusterPredict{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileModel    = {{{FileModel}}};
    $Table        = {{{Table}}};
    $ColumnResult = {{{ColumnResult}}};
        
        $FileModel = ExpandConstFilePath $FileModel 
        
        if(![System.IO.File]::Exists($FileModel))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileModel");
            return;
        } 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
          
        $psResult = $__SherpaML.ClusterPredict($FileModel, $Table, $ColumnResult);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileModel" Tooltip="Path to model" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table for processing" CatalogName="Required" Type="Variable" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ColumnResult" Tooltip="Column name result" CatalogName="Required" Type="Expression" Value="&quot;ClusterId,Distances&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="DataTable from excel" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Anomalydetection Train" InternalName="AnomalydetectionTrain" FriendlyName="Anomalydetection Train" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AnomalydetectionTrain{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileCSV         = {{{FileCSV}}}; 
    $RankCount       = {{{RankCount}}};
    $IndexesFeatures = {{{IndexesFeatures}}}; 
    $IndexesStrings  = {{{IndexesStrings}}};   
    $Separator       = {{{Separator}}};
    $TypeML          = "{{{TypeML}}}";
    $FileModel       = {{{FileModel}}};
        
        $FileCSV = ExpandConstFilePath $FileCSV 
        
        if(![System.IO.File]::Exists($FileCSV))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileCSV");
            return;
        } 
          
        $_RankCount = [int]::Parse($RankCount);
        
        if($Separator.Length -eq 0) { $Separator=","; }
        
        $FileModel = ExpandConstFilePath $FileModel 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult   = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
        
        $psresult = $__SherpaML.AnomalydetectionTrain($FileCSV, $_RankCount, $IndexesFeatures, $IndexesStrings, $Separator, $TypeML, $FileModel);
        if($__Error.CheckResult($psResult)) { return; } 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileCSV" Tooltip="Path to CSV" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="RankCount" Tooltip="Rank count" CatalogName="Required" Type="Expression" Value="0" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="IndexesFeatures" Tooltip="Indexes features, comma" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="IndexesStrings" Tooltip="Indexes strings" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Separator" Tooltip="Symbol separator" CatalogName="Required" Type="Expression" Value="&quot;,&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TypeML" Tooltip="TypeML" CatalogName="Main properties" Type="Enum" Value="RandomizedPca" EnumVariants="RandomizedPca" Visible="True" DefaultValue="&quot;&quot;" />
                                   <core:Property Name="FileModel" Tooltip="File model" CatalogName="Required" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Anomalydetection Predict" InternalName="AnomalydetectionPredict" FriendlyName="Anomalydetection Predict" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AnomalydetectionPredict{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $FileModel    = {{{FileModel}}};
    $Table        = {{{Table}}};
    $ColumnResult = {{{ColumnResult}}};
        
        $FileModel = ExpandConstFilePath $FileModel 
        
        if(![System.IO.File]::Exists($FileModel))
        {
            $__Error.Exception("ERRORCONST_PATHNOTFOUND: $FileModel");
            return;
        } 
         
        if(!$__SherpaML)
        {
            $__SherpaML = [MainHelpers.SherpaMLHelper]::new();
            $psresult = $__SherpaML.Initialize();   
            if($__Error.CheckResult($psResult)) { return; } 
        }
          
        $psResult = $__SherpaML.AnomalydetectionPredict($FileModel, $Table, $ColumnResult);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); 
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="FileModel" Tooltip="Path to model" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Table" Tooltip="Table for processing" CatalogName="Required" Type="Variable" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ColumnResult" Tooltip="Column name result" CatalogName="Required" Type="Expression" Value="&quot;PredictedLabel,Score&quot;" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="DataTable from excel" CatalogName="Output" Type="Variable" Value="$Table" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Chat GPT Request" InternalName="ChatGPTRequest" FriendlyName="Chat GPT Request" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_chatgpt.png" ImageType="LeftImage" Proportional="True" Version="16">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ChatGPTRequest{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Prompt          = {{{Prompt}}};
    $Model           = "{{{Model}}}"; 
    $StopObj         = {{{Stop}}};
    $TemperatureObj  = {{{Temperature}}}; 
    $MaxLengthObj    = {{{MaxLength}}};  
    $AutoLengthLimit = ${{{AutoLengthLimit}}};
    $TimeoutObj      = {{{Timeout}}};
        
        
        if(!$__ChatGPT)
        {
            $__ChatGPT = [MainHelpers.ClassChatGPT]::new();
        }
          
        $psResult = $__ChatGPT.BlockRequest($Prompt, $Model, $StopObj, $TemperatureObj, $MaxLengthObj, $AutoLengthLimit, $TimeoutObj);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{Response}}} = $psResult.Result; 
        {{{TotalTokens}}} = _toint($psResult.Result2);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Prompt" Tooltip="Prompt" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Model" Tooltip="Model" CatalogName="Main properties" Type="Enum" Value="text-davinci-003" EnumVariants="text-davinci-003;text-curie-001;text-babbage-001;text-ada-001;text-davinci-002;text-davinci-001;davinci-instruct-beta;davinci;curie-instruct-beta;curie;babbage;ada;code-davinci-002;code-cushman-001" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Stop" Tooltip="Stop word" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Temperature" Tooltip="Temperature" CatalogName="Main properties" Type="Expression" Value="0.7" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MaxLength" Tooltip="MaxLength" CatalogName="Main properties" Type="Expression" Value="1000" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoLengthLimit" Tooltip="AutoLengthLimit" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Response" Tooltip="Response" CatalogName="Output" Type="Variable" Value="$Response" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="TotalTokens" Tooltip="TotalTokens" CatalogName="Output" Type="Variable" Value="$TotalTokens" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="OpenAI Chat Request" InternalName="OpenAIChatRequest" FriendlyName="OpenAI Chat Request" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_chatgpt.png" ImageType="LeftImage" Proportional="True" Version="19">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OpenAIChatRequest{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InTable         = {{{InTable}}}; 
    $ContentSystem   = {{{ContentSystem}}};
    $Content         = {{{Content}}};
    $Model           = "{{{Model}}}";  
    $StopObj         = {{{Stop}}};
    $TemperatureObj  = {{{Temperature}}}; 
    $MaxLengthObj    = {{{MaxLength}}};  
    $AutoLengthLimit = ${{{AutoLengthLimit}}};
    $TimeoutObj      = {{{Timeout}}};
        
        
        if(!$__OpenAI)
        {
            $__OpenAI = [MainHelpers.ClassOpenAI]::new();
        }
          
        $psResult = $__OpenAI.ChatCompletions($InTable, $ContentSystem, $Content, $Model, $StopObj, $TemperatureObj, $MaxLengthObj, $AutoLengthLimit, $TimeoutObj);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{ResponseRole}}} = $psResult.Result;
        {{{ResponseContent}}} = $psResult.Result2;
        {{{TotalTokens}}} = _toint($psResult.Result3);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InTable" Tooltip="In table" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ContentSystem" Tooltip="Content System" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Content" Tooltip="Content" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Model" Tooltip="Model" CatalogName="Main properties" Type="Enum" Value="gpt-3.5-turbo-16k" EnumVariants="gpt-4;gpt-4-0613;gpt-3.5-turbo;gpt-3.5-turbo-16k" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="Stop" Tooltip="Stop word" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Temperature" Tooltip="Temperature" CatalogName="Main properties" Type="Expression" Value="0.7" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="MaxLength" Tooltip="MaxLength" CatalogName="Main properties" Type="Expression" Value="1000" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="AutoLengthLimit" Tooltip="AutoLengthLimit" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="300" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResponseRole" Tooltip="Response Role" CatalogName="Output" Type="Variable" Value="$ResponseRole" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResponseContent" Tooltip="Response Content" CatalogName="Output" Type="Variable" Value="$ResponseContent" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TotalTokens" Tooltip="TotalTokens" CatalogName="Output" Type="Variable" Value="$TotalTokens" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Chat GPT Tokenizer" InternalName="ChatGPTTokenizer" FriendlyName="Chat GPT Tokenizer" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_chatgpt.png" ImageType="LeftImage" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ChatGPTTokenizer{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $Prompt         = {{{Prompt}}};
    $Model          = "{{{Model}}}";
        
        
        if(!$__ChatGPT)
        {
            $__ChatGPT = [MainHelpers.ClassChatGPT]::new();
        }
          
        $psResult = $__ChatGPT.Tokenizer($Prompt, $Model);
        if($__Error.CheckResult($psResult)) { return; }               
                    
        {{{CountTokens}}} = _toint($psResult.Result);
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Prompt" Tooltip="Prompt" CatalogName="Required" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Model" Tooltip="Model" CatalogName="Main properties" Type="Enum" Value="text-davinci-003" EnumVariants="text-davinci-003;gpt-3.5-turbo" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="CountTokens" Tooltip="CountTokens" CatalogName="Output" Type="Variable" Value="$CountTokens" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="OpenAI Get Embeddings" InternalName="OpenAIGetEmbeddings" FriendlyName="OpenAI Get Embeddings" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_chatgpt.png" ImageType="LeftImage" Proportional="True" Version="11">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OpenAIGetEmbeddings{{{block_id}}}
{        
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $InputData   = {{{InputData}}}; 
        $Model       = "{{{Model}}}"; 
        $AsDataTable = ${{{AsDataTable}}};
        $TimeoutObj  = {{{Timeout}}};
                
        if(!$__OpenAI)
        {
            $__OpenAI = [MainHelpers.ClassOpenAI]::new();
        }
          
        $psResult = $__OpenAI.CreateEmbeddings($InputData, $TimeoutObj);
        if($__Error.CheckResult($psResult)) { return; } 

        $listRes = $__BinFormatter.frombin($psResult.Result); 
        
        if($AsDataTable)
        {
            $newdt = New-Object 'System.Data.DataTable'
            $newdt.Columns.Add("Text", [string]);
            $newdt.Columns.Add("Embeddings", [string]);  
            
            $listText = $__BinFormatter.frombin($psResult.Result2); 
            for($i = 0; $i -lt $listText.Count; $i++)
            {
                $val_text = $listText[$i];
                $val_emmb = "";
                if($i -lt $listRes.Count) { $val_emmb = $listRes[$i]; } 
                
                $newrow     = $newdt.NewRow();
                $newrow["Text"] = $val_text; 
                $newrow["Embeddings"] = $val_emmb;
                $newdt.Rows.Add($newrow);
            } 
            
            {{{Embeddings}}} = $newdt;
        }
        else
        {
            if($listRes.Count -eq 1)
            {
                {{{Embeddings}}} = $listRes[0];
            }
            else
            {
                {{{Embeddings}}} = $listRes;
            }
        }        
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InputData" Tooltip="InputData" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Model" Tooltip="Model" CatalogName="Main properties" Type="Enum" Value="text-embedding-ada-002" EnumVariants="text-embedding-ada-002" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="AsDataTable" Tooltip="AsDataTable" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="Embeddings" Tooltip="Embeddings" CatalogName="Output" Type="Variable" Value="$Embeddings" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="OpenAI Search Embeddings" InternalName="OpenAISearchEmbeddings" FriendlyName="OpenAI Search Embeddings" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_chatgpt.png" ImageType="LeftImage" Invisible="False" Proportional="True" Version="8">
                         <core:ToolboxItemSettings.Code><![CDATA[
function OpenAISearchEmbeddings{{{block_id}}}
{        
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
        $QueryEmbedding = {{{QueryEmbedding}}}; 
        $TableBase      = {{{TableBase}}}; 
        $ColEmbeddings  = {{{ColEmbeddings}}};
        $CountResultObj = {{{CountResult}}};
                
        if(!$__OpenAI{{{block_id}}})
        {
            $__OpenAI{{{block_id}}} = [MainHelpers.ClassOpenAI]::new();
        } 
        
        $CountResult = _toint($CountResultObj); 
        if($CountResult -le 0) { $CountResult = 5; }
        
        $indColEmbeddings = 1;
        
        $tempind = 0;
        if([int]::TryParse($ColEmbeddings, [ref] $tempind))
        {
            $indColEmbeddings = $tempind;
        }
        else
        {
            if($TableBase.Columns.Contains($ColEmbeddings))
            {
                $indColEmbeddings = $TableBase.Columns[$ColEmbeddings].Ordinal;
            }
        }
        
          
        $psResult = $__OpenAI{{{block_id}}}.SearchEmbeddings($QueryEmbedding, $TableBase, $indColEmbeddings, $CountResult);
        if($__Error.CheckResult($psResult)) { return; } 

        {{{ListIndexes}}} = $__BinFormatter.frombin($psResult.Result); 
        {{{ListSimilarity}}} = $__BinFormatter.frombin($psResult.Result2);       
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="QueryEmbedding" Tooltip="queryEmbedding" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="TableBase" Tooltip="TableBase" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="DataTable" />
                                   <core:Property Name="ColEmbeddings" Tooltip="ColEmbeddings" CatalogName="Main properties" Type="Expression" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="CountResult" Tooltip="CountResult" CatalogName="Main properties" Type="Expression" Value="5" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ListIndexes" Tooltip="ListIndexes" CatalogName="Output" Type="Variable" Value="$ListIndexes" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ListSimilarity" Tooltip="ListSimilarity" CatalogName="Output" Type="Variable" Value="$ListSimilarity" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Assistant Generator" InternalName="AssistantGenerator" FriendlyName="Assistant Generator" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_chatgpt.png" ImageType="LeftImage" Proportional="True" Version="9">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AssistantGenerator{{{block_id}}}
{        
    try
    {
        $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
        $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
         
        $ThisRequest = {{{ThisRequest}}};  
        $ProcessID   = {{{ProcessID}}};
        $Timeout     = {{{Timeout}}}; 
        $IsSimulate  = ${{{IsSimulate}}};
        
        
        if(!$__AssistantGenerator)
        {
            $__AssistantGenerator = [ProcessAgent.Assistant.ClassAssistantGenerator]::new();
        } 
        
        $__AssistantGenerator.Timeout    = _toint($Timeout);
        $__AssistantGenerator.IsSimulateBlocks = $IsSimulate;
              
        $psResult = $__AssistantGenerator.GenerateBlock($ThisRequest, $ProcessID);
        if($__Error.CheckResult($psResult)) { return; } 
        
        {{{ResponseSelector}}} = $psResult.Result;
        {{{ResponseType}}} = $psResult.Result2;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ThisRequest" Tooltip="This Request" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ProcessID" Tooltip="" CatalogName="Main properties" Type="Variable" Value="$ProcessID" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ProcessID" />
                                   <core:Property Name="IsSimulate" Tooltip="IsSimulate" CatalogName="Main properties" Type="Bool" Value="True" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="Timeout" Tooltip="Timeout" CatalogName="Main properties" Type="Expression" Value="60" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Number" />
                                   <core:Property Name="ResponseSelector" Tooltip="Response Selector" CatalogName="Output" Type="Variable" Value="$ResponseSelector" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ResponseType" Tooltip="Response Type" CatalogName="Output" Type="Variable" Value="$ResponseType" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="TextAnalysis" Name="Text analysis" ToolboxGridType="List" AliasDescription="Extract named entities from text, make lemmas of texts">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="Lemmatization Text" InternalName="LemmatizationText" FriendlyName="Lemmatization Text" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LemmatizationText{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InText = {{{InText}}}; 
        
        if(!$__TextProcessing)
        {
            $__TextProcessing = [MainHelpers.TextProcessing]::new();
        }
        
        {{{Result}}} = $__TextProcessing.LemmaProcessing($InText);

    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InText" Tooltip="In text" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Out text result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Extract parts of speech" InternalName="ExtractPartsSpeech" FriendlyName="Extract parts of speech" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="5">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ExtractPartsSpeech{{{block_id}}}
{        
    try
    {
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InText = {{{InText}}}; 
        
        if(!$__TextProcessing)
        {
            $__TextProcessing = [MainHelpers.TextProcessing]::new();
        }
        
        $res = $__TextProcessing.MorphProcessing($InText);
        if(!$res)
        {
            $__Error.Exception("Text analysis error.");
            return;
        } 
        
        {{{Result}}} = $res;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InText" Tooltip="In text" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Out result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="Extract Entities" InternalName="ExtractEntities" FriendlyName="Extract Entities" PathStyle="{StaticResource BlueLagoonRectangle}" PathStyle_DragThumb="{StaticResource BlueLagoonRectangle_DragThumb}" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\icon_learning.png" ImageType="LeftImage" Proportional="True" Version="4">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ExtractEntities{{{block_id}}}
{        
	try
	{
    $__Error.Enter("{{{block_native_id}}}", "{{{ErrorLevel}}}","{{{ErrorDirection}}}","{{{ReportLevel}}}","{{{ErrorMessage}}}");
    $__Error.AddConnectors("{{{connector-Error}}}", "{{{connectorRight}}}", "{{{connectorBottom}}}");
    
    $InText = {{{InText}}}; 
        
        if(!$__TextProcessing)
        {
            $__TextProcessing = [MainHelpers.TextProcessing]::new();
        }
        
        $res = $__TextProcessing.NerProcessing($InText);
        if(!$res)
        {
            $__Error.Exception("Text analysis error.");
            return;
        } 
        
        {{{Result}}} = $res;
    }
    catch 
    { 
        $__Error.ExceptionCatch($_);
        return;
    }                  
    $__Error.Quit();
}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="InText" Tooltip="In text" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" />
                                   <core:Property Name="Result" Tooltip="Out result" CatalogName="Output" Type="Variable" Value="$Result" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="ListOfObjects" />
                                   <core:Property Name="ErrorLevel" Caption="Уровень обработки" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Ignore&quot; - ошибки игнорируются; &quot;Handle&quot; - ошибки обрабатываются. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Ignore;Handle" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ReportLevel" Caption="Уровень сообщений" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &quot;Default&quot; - по умолчанию; &quot;Release&quot; - вывод отключен; &quot;Debug&quot; - вывод основной информации; &quot;Detailed&quot; - вывод подробной информации. Если выбрано значение &quot;Default&quot;, то будет использоваться значение блока &quot;Старт&quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" EnumVariants="Default;Release;Debug;Detailed;Output" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                                   <core:Property Name="ErrorMessage" Caption="Текст ошибки" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection>
                                   <core:ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Caption="Если ошибка" Color="#FF0000" />
                                   <core:ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Caption="" Color="#000000" />
                                   <core:ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Caption="" Color="#000000" />
                              </core:ConnectorsSettingsCollection>
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
     <core:ToolboxSettings x:Key="DerivedBlocks" Name="DerivedBlocks" ToolboxGridType="List">
          <core:ToolboxSettings.ItemsSettings>
               <core:ToolboxItemSettingsCollection>
                    <core:ToolboxItemSettings DisplayName="SaveWordDocument" InternalName="SaveWordDocumentToPath" FriendlyName="" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="10" TextColor="#FF000000" DerivedFrom="SaveWordDocument" ProtoName="SaveWordDocumentToPath">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveWordDocumentToPath{{{block_id}}}
{                

}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="" CatalogName="Required" Type="" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" ProtoName="ToPath" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="ReplaceTextWordDocument" InternalName="ReplaceTextInsideWordDocumentWithText" FriendlyName="" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="5" TextColor="#FF000000" DerivedFrom="ReplaceTextWordDocument" ProtoName="ReplaceTextInsideWordDocumentWithText">
                         <core:ToolboxItemSettings.Code><![CDATA[
function ReplaceTextInsideWordDocumentWithText{{{block_id}}}
{                

}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="ReplaceText" Tooltip="" CatalogName="Required" Type="" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" ProtoName="ReplaceText" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="SaveExcelDocument" InternalName="SaveExcelDocumentToPath" FriendlyName="" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="1" TextColor="#FF000000" DerivedFrom="SaveExcelDocument" ProtoName="SaveExcelDocumentToPath">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SaveExcelDocumentToPath{{{block_id}}}
{                

}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Path" Tooltip="" CatalogName="Required" Type="" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Text" ProtoName="ToPath" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="SetUIText" InternalName="SetToUIText" FriendlyName="" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="5" TextColor="#FF000000" DerivedFrom="SetUIText" ProtoName="SetToUIText">
                         <core:ToolboxItemSettings.Code><![CDATA[
function SetToUIText{{{block_id}}}
{                

}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="UITextValue" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" ProtoName="Text" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="LaunchBrowser" InternalName="LaunchBrowserWithUrl" FriendlyName="" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="3" TextColor="#FF000000" DerivedFrom="LaunchBrowser" ProtoName="LaunchBrowserWithUrl">
                         <core:ToolboxItemSettings.Code><![CDATA[
function LaunchBrowserWithUrl{{{block_id}}}
{                

}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="URL" Tooltip="Value or variable to set text from" CatalogName="Required" Type="Expression" Value="" DefaultValue="&quot;&quot;" ValueType="Text" ProtoName="URL" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
                    <core:ToolboxItemSettings DisplayName="AddParagraphWordDocument" InternalName="AddTextToParagraphWordDocument" FriendlyName="" PathStyle="{StaticResource AquamarineDarkRectangle}" PathStyle_DragThumb="{StaticResource AquamarineDarkRectangle_DragThumb}" Width="100" Height="100" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="False" Version="1" TextColor="#FF000000" DerivedFrom="AddParagraphWordDocument" ProtoName="AddTextToParagraphWordDocument">
                         <core:ToolboxItemSettings.Code><![CDATA[
function AddTextToParagraphWordDocument{{{block_id}}}
{                

}                   
                ]]></core:ToolboxItemSettings.Code>
                         <core:ToolboxItemSettings.Properties>
                              <core:PropertiesCollection>
                                   <core:Property Name="Value" Tooltip="" CatalogName="Required" Type="" Value="" EnumVariants="" Visible="True" DefaultValue="&quot;&quot;" ValueType="Value" ProtoName="Value" />
                              </core:PropertiesCollection>
                         </core:ToolboxItemSettings.Properties>
                         <core:ToolboxItemSettings.ConnectorsSettings>
                              <core:ConnectorsSettingsCollection />
                         </core:ToolboxItemSettings.ConnectorsSettings>
                    </core:ToolboxItemSettings>
               </core:ToolboxItemSettingsCollection>
          </core:ToolboxSettings.ItemsSettings>
     </core:ToolboxSettings>
</ResourceDictionary>